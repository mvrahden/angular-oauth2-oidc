var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractValidationHandler.html",[0,0.228,1,3.199]],["body/classes/AbstractValidationHandler.html",[0,0.206,1,2.889,2,0.868,3,0.504,4,0.549,5,0.462,6,3.782,7,4.382,8,1.459,9,1.707,10,1.782,11,1.428,12,3.374,13,2.493,14,1.689,15,1.762,16,3.88,17,1.977,18,1.838,19,2.889,20,4.243,21,2.82,22,0.527,23,1.491,24,4.792,25,4.07,26,1.31,27,3.159,28,3.159,29,3.159,30,2.035,31,5.122,32,1.099,33,2.694,34,3.159,35,2.249,36,2.293,37,1.63,38,0.942,39,1.669,40,0.016,41,1.749,42,1.147,43,1.249,44,3.222,45,2.059,46,3.159,47,1.989,48,2.694,49,3.159,50,4.243,51,3.159,52,2.127,53,3.159,54,3.159,55,1.79,56,2.673,57,2.673,58,2.694,59,3.159,60,4.521,61,2.694,62,4.382,63,4.166,64,3.482,65,1.649,66,1.797,67,1.548,68,3.381,69,3.482,70,2.694,71,3.222,72,0.879,73,1.459,74,1.912,75,1.769,76,2.091,77,1.459,78,0.602,79,1.368,80,1.184,81,1.184,82,1.184,83,1.184,84,1.548,85,2.091,86,2.091,87,2.091,88,1.912,89,0.868,90,1.912,91,2.589,92,3.159,93,2.091,94,2.091,95,2.091,96,2.091,97,2.091,98,0.705,99,2.091,100,2.091,101,2.091,102,1.912,103,3.808,104,2.091,105,4.243,106,2.091,107,2.091,108,2.091,109,1.044,110,2.091,111,3.808,112,2.091,113,2.091,114,2.091,115,1.769,116,0.65,117,2.091,118,1.769,119,1.912,120,2.091,121,2.091,122,1.548,123,0.008,124,0.008]],["title/classes/DateTimeProvider.html",[0,0.228,125,2.96]],["body/classes/DateTimeProvider.html",[0,0.316,2,1.613,3,0.937,4,1.021,5,0.858,10,1.911,22,0.978,23,2.29,26,1.439,32,1.17,40,0.016,45,2.193,72,0.897,78,0.767,109,1.33,116,1.808,123,0.013,124,0.013,125,4.477,126,5.898,127,3.492,128,4.33,129,5.216,130,5.006,131,5.542,132,5.006,133,2.859,134,1.932,135,1.613,136,3.552,137,3.066,138,4.33]],["title/injectables/DefaultHashHandler.html",[134,1.393,139,3.199]],["body/injectables/DefaultHashHandler.html",[0,0.291,3,0.823,4,0.897,5,0.754,6,4.169,8,2.382,10,1.446,14,1.359,21,3.308,22,0.86,23,2.109,26,1.402,27,4.467,30,2.101,32,1.201,39,1.825,40,0.016,41,1.751,42,1.254,43,1.365,44,2.888,45,2.251,57,4.213,72,1.031,78,0.706,91,2.414,109,0.936,115,2.888,116,1.388,122,2.528,123,0.012,124,0.012,133,2.691,134,1.778,135,1.417,139,4.085,140,2.888,141,5.282,142,5.756,143,5.756,144,4.399,145,5.756,146,4.399,147,4.399,148,4.399,149,4.399,150,4.399,151,4.399,152,3.805,153,3.414,154,3.805,155,3.805,156,3.805,157,3.805,158,1.762,159,3.414,160,3.805,161,3.414,162,4.979,163,3.805,164,3.414,165,3.414,166,3.805,167,2.528]],["title/interceptors/DefaultOAuthInterceptor.html",[168,3.9,169,3.199]],["body/interceptors/DefaultOAuthInterceptor.html",[0,0.183,3,0.677,4,0.738,5,0.62,14,1.118,22,0.707,23,1.847,26,1.237,30,0.987,32,0.944,39,1.434,40,0.016,41,1.376,42,0.986,43,1.337,45,1.269,56,3.311,68,2.974,72,1.258,73,1.959,77,1.959,78,0.443,91,2.634,98,0.947,109,1.494,123,0.01,124,0.01,134,1.558,135,1.165,158,2.515,167,2.079,169,3.579,170,3.129,171,5.806,172,3.617,173,5.043,174,2.583,175,3.617,176,2.204,177,5.022,178,3.847,179,5.022,180,3.847,181,3.617,182,4.362,183,5.433,184,4.506,185,5.433,186,3.617,187,4.362,188,3.129,189,4.362,190,1.959,191,4.362,192,3.617,193,3.617,194,1.67,195,2.807,196,3.617,197,4.362,198,3.617,199,2.807,200,1.165,201,2.583,202,2.583,203,2.807,204,2.375,205,3.129,206,1.448,207,3.617,208,3.617,209,3.129,210,3.129,211,3.617,212,0.909,213,3.129,214,3.129,215,3.129,216,3.129,217,3.129,218,3.311,219,3.129,220,5.043,221,4.362,222,3.617,223,1.459,224,3.617,225,3.617,226,2.807,227,2.079,228,3.617,229,3.617,230,3.129,231,3.617,232,3.617,233,3.617,234,3.617,235,3.617,236,3.129,237,4.362,238,3.617,239,3.129]],["title/classes/HashHandler.html",[0,0.228,21,2.591]],["body/classes/HashHandler.html",[0,0.306,2,1.532,3,0.89,4,0.97,5,0.815,6,3.707,8,2.575,9,1.994,10,1.762,14,1.469,21,3.827,22,0.929,23,2.217,26,1.312,27,4.698,30,2.097,32,0.89,39,1.352,40,0.016,41,1.298,42,0.929,43,1.012,44,3.122,45,1.668,57,4.372,72,1.085,78,0.742,91,2.538,109,1.012,115,3.122,116,1.46,122,2.733,123,0.012,124,0.012,133,1.994,134,1.87,135,1.532,139,3.375,141,4.698,152,4.113,153,3.69,154,5.236,155,5.236,156,5.236,157,4.113,158,1.904,159,3.69,160,4.113,161,3.69,162,5.236,163,4.113,164,3.69,165,3.69,166,4.113,167,2.733,240,3.69]],["title/classes/LoginOptions.html",[0,0.228,241,2.082]],["body/classes/LoginOptions.html",[0,0.26,2,0.655,3,0.612,4,0.415,5,0.349,9,0.853,10,1.598,11,0.714,14,0.629,15,1.053,22,0.398,26,1.413,30,2.159,32,0.963,35,2.231,36,1.371,37,1.309,40,0.016,42,0.801,43,1.409,47,1.513,52,1.053,55,1.438,65,1.099,66,0.745,72,0.365,78,0.76,79,1.729,80,1.438,81,0.894,82,0.894,83,0.894,89,1.053,98,1.665,109,0.433,116,0.491,123,0.007,124,0.007,133,1.371,134,1.01,135,0.655,158,0.815,176,0.655,194,0.939,206,1.642,212,0.822,223,0.822,241,1.51,242,1.042,243,0.466,244,1.51,245,1.51,246,1.099,247,1.893,248,2.1,249,2.1,250,2.1,251,2.1,252,2.034,253,1.578,254,2.537,255,2.421,256,1.147,257,1.675,258,1.099,259,1.798,260,1.675,261,1.438,262,1.675,263,1.969,264,2.168,265,1.438,266,1.675,267,2.018,268,1.439,269,1.882,270,2.405,271,1.675,272,1.51,273,1.588,274,1.675,275,1.588,276,1.01,277,2.034,278,1.198,279,1.438,280,1.675,281,2.1,282,0.969,283,1.252,284,2.065,285,2.034,286,2.168,287,2.168,288,2.416,289,2.281,290,1.675,291,2.405,292,1.675,293,1.675,294,1.675,295,1.675,296,2.034,297,0.856,298,2.157,299,1.371,300,1.371,301,1.309,302,1.281,303,2.405,304,1.675,305,1.588,306,2.034,307,1.675,308,1.371,309,1.588,310,1.099,311,1.588,312,1.438,313,1.675,314,1.675,315,1.675,316,1.675,317,1.438,318,1.675,319,0.853,320,0.779,321,1.675,322,0.894,323,0.745,324,0.894,325,0.939,326,0.853,327,0.988,328,0.939,329,1.042,330,2.635,331,3.174,332,1.042,333,1.042,334,1.042,335,1.042,336,0.988,337,0.815,338,1.042,339,0.684,340,0.853,341,0.894,342,0.815,343,0.988,344,0.988,345,1.309,346,1.675,347,0.714,348,1.675,349,1.675,350,2.168,351,0.939,352,1.042,353,1.042,354,1.042,355,2.635,356,0.894,357,0.629,358,0.988,359,1.042,360,0.988,361,0.988,362,1.042,363,1.042,364,1.042,365,1.51,366,1.309,367,1.675,368,1.719,369,1.588,370,1.042,371,0.939,372,1.042,373,1.042,374,0.853,375,0.629,376,0.655,377,1.042,378,0.894,379,1.042,380,0.988,381,0.629,382,0.714,383,0.629,384,0.988,385,0.745,386,1.042,387,1.042,388,1.042,389,1.042,390,1.042,391,1.042,392,1.042,393,1.042,394,1.042,395,1.042,396,1.042,397,1.042,398,1.042,399,1.042,400,1.042,401,1.042,402,1.042,403,1.042,404,1.042,405,1.042,406,1.042,407,1.042,408,1.042,409,1.042,410,1.042,411,1.042,412,1.042,413,1.042,414,1.042]],["title/injectables/MemoryStorage.html",[134,1.393,351,2.082]],["body/injectables/MemoryStorage.html",[0,0.276,3,0.672,4,0.466,5,0.392,10,1.655,11,0.802,14,0.706,15,0.737,22,0.447,23,1.314,26,1.415,30,2.183,32,0.829,35,1.911,36,0.959,39,1.259,40,0.016,41,1.208,42,0.865,43,1.067,45,1.553,47,1.615,52,1.156,55,1.577,65,1.206,66,0.837,72,0.41,78,0.789,79,1.831,80,1.577,81,1.005,82,1.005,83,1.005,89,1.156,98,1.426,109,0.486,116,0.551,123,0.007,124,0.007,133,1.504,134,1.108,135,0.737,140,1.501,158,0.916,176,0.737,194,1.056,206,1.437,212,0.575,223,0.901,241,1.056,242,1.171,243,0.326,244,1.056,245,1.056,247,1.056,248,1.171,249,1.171,250,1.171,251,1.171,253,1.206,254,2.044,255,2.195,256,0.802,257,1.171,258,0.768,259,1.373,260,1.171,261,1.005,262,1.171,263,1.504,264,1.656,265,1.005,266,1.171,267,1.685,268,1.159,269,1.644,270,1.837,271,1.171,272,1.056,273,1.111,274,1.171,275,1.111,276,0.706,278,0.837,279,1.005,280,1.171,281,1.837,282,0.678,284,1.577,286,1.656,287,1.656,288,1.947,289,1.743,290,1.171,291,1.837,292,1.171,293,1.171,294,1.171,295,1.171,297,0.599,298,2.103,299,0.959,300,0.959,301,0.916,302,0.979,303,2.268,304,1.171,305,1.111,307,1.171,308,0.959,309,1.111,310,0.768,311,1.111,312,1.005,313,1.171,314,1.171,315,1.171,316,1.171,317,1.005,318,1.171,319,0.959,320,0.875,321,1.837,322,1.005,323,0.837,324,1.005,325,1.056,326,0.959,327,1.111,328,1.056,329,1.171,330,2.79,331,3.439,332,1.171,333,1.171,334,1.171,335,1.171,336,1.111,337,0.916,338,1.171,339,0.768,340,0.959,341,1.005,342,0.916,343,1.111,344,1.111,345,1.437,346,2.268,347,0.802,348,2.268,349,2.268,350,2.669,351,1.656,352,1.171,353,1.171,354,1.171,355,2.79,356,1.005,357,0.706,358,1.111,359,1.171,360,1.111,361,1.111,362,1.171,363,1.171,364,1.171,365,1.656,366,1.437,367,1.837,368,1.857,369,1.743,370,1.171,371,1.056,372,1.171,373,1.171,374,0.959,375,0.706,376,0.737,377,1.171,378,1.005,379,1.171,380,2.436,381,0.706,382,0.802,383,0.706,384,1.111,385,0.837,386,1.171,387,1.171,388,1.171,389,1.171,390,1.171,391,1.171,392,1.171,393,1.171,394,1.171,395,1.171,396,1.171,397,1.171,398,1.171,399,1.171,400,1.171,401,1.171,402,1.171,403,1.171,404,1.171,405,1.171,406,1.171,407,1.171,408,1.171,409,1.171,410,1.171,411,1.171,412,1.171,413,1.171,414,1.171,415,3.103,416,3.103,417,3.103,418,2.286,419,2.286,420,2.286]],["title/classes/NullValidationHandler.html",[0,0.228,421,3.199]],["body/classes/NullValidationHandler.html",[0,0.234,2,1.489,3,0.865,4,0.943,5,0.792,6,4.025,8,2.504,9,1.939,12,3.776,14,1.837,16,4.219,22,0.904,23,2.178,26,1.375,28,4.614,32,1.113,39,1.691,40,0.016,41,1.622,42,1.162,43,1.265,45,2.085,60,5.02,68,3.676,69,4.219,72,1.065,73,2.504,77,3.559,78,0.567,90,4.219,109,1.265,123,0.012,124,0.012,230,3.999,240,3.588,255,2.085,421,4.219,422,5.684,423,4.099,424,5.142,425,5.142,426,5.945,427,4.614,428,5.945,429,4.623,430,4.623]],["title/classes/OAuthErrorEvent.html",[0,0.228,431,2.761]],["body/classes/OAuthErrorEvent.html",[0,0.328,2,1.252,3,1.128,4,0.792,5,0.666,10,0.976,22,0.759,26,1.448,32,1.212,37,1.556,39,1.105,40,0.016,41,1.06,42,1.444,43,0.827,47,2.347,67,3.894,78,0.831,123,0.011,124,0.011,137,3.966,174,1.99,227,2.232,246,1.78,283,1.487,347,2.271,431,3.245,432,2.551,433,4.592,434,5.352,435,4.809,436,4.595,437,4.783,438,3.885,439,5.297,440,2.757,441,3.015,442,2.379,443,2.551,444,2.379,445,2.551,446,2.551,447,2.379,448,2.551,449,2.551,450,2.551,451,2.551,452,2.551,453,2.551,454,2.379,455,2.379,456,2.551,457,2.551,458,2.551,459,2.379,460,2.379,461,2.551,462,1.794,463,2.551,464,2.551,465,2.551,466,2.757,467,2.551,468,4.278,469,2.551]],["title/classes/OAuthEvent.html",[0,0.228,433,2.96]],["body/classes/OAuthEvent.html",[0,0.338,2,1.352,3,1.173,4,0.856,5,0.719,10,1.054,22,0.82,26,1.43,32,1.044,39,1.193,40,0.016,41,1.145,42,1.427,43,0.893,47,1.797,67,2.411,78,0.853,123,0.011,124,0.011,137,3.839,174,2.149,227,2.411,246,1.875,347,2.199,431,2.569,432,2.755,433,4.567,434,5.18,435,2.977,436,4.741,437,4.868,442,2.569,443,2.755,444,2.569,445,2.755,446,2.755,447,2.569,448,2.755,449,2.755,450,2.755,451,2.755,452,2.755,453,2.755,454,2.569,455,2.569,456,2.755,457,2.755,458,2.755,459,2.569,460,2.569,461,2.755,462,1.937,463,2.755,464,2.755,465,2.755,466,2.977,467,2.755,468,4.448,469,2.755,470,4.195,471,4.195]],["title/classes/OAuthInfoEvent.html",[0,0.228,469,2.96]],["body/classes/OAuthInfoEvent.html",[0,0.332,2,1.297,3,1.352,4,0.821,5,0.69,10,1.012,22,0.787,26,1.44,32,1.149,37,1.612,39,1.145,40,0.016,41,1.099,42,1.436,43,0.857,47,1.749,67,2.314,78,0.841,123,0.011,124,0.011,137,4.025,174,2.062,227,2.314,246,1.824,283,1.541,347,2.305,431,2.466,432,2.643,433,4.641,434,5.282,435,2.857,436,4.663,437,4.823,440,2.857,441,3.124,442,2.466,443,2.643,444,2.466,445,2.643,446,2.643,447,2.466,448,2.643,449,2.643,450,2.643,451,2.643,452,2.643,453,2.643,454,2.466,455,2.466,456,2.643,457,2.643,458,2.643,459,2.466,460,2.466,461,2.643,462,1.859,463,2.643,464,2.643,465,2.643,466,2.857,467,2.643,468,4.357,469,3.564,472,4.026,473,4.026]],["title/classes/OAuthLogger.html",[0,0.228,328,2.082]],["body/classes/OAuthLogger.html",[0,0.266,2,0.687,3,0.903,4,0.435,5,0.365,9,0.894,10,1.827,11,1.191,14,0.659,15,0.687,22,0.417,23,1.244,26,1.421,30,2.16,32,0.986,35,1.847,36,0.894,39,1.498,40,0.016,41,1.437,42,1.029,43,1.194,45,1.847,47,1.697,52,1.094,55,1.493,65,1.141,66,0.781,72,0.382,78,0.772,79,1.885,80,1.493,81,0.938,82,0.938,83,0.938,89,1.094,98,1.379,109,0.454,116,0.514,123,0.007,124,0.007,133,1.424,134,1.049,135,0.687,158,0.854,176,1.094,194,0.984,201,1.739,206,1.36,212,0.536,223,0.853,241,0.984,242,1.092,243,0.304,244,0.984,245,0.984,247,0.984,248,1.092,249,1.092,250,1.092,251,1.092,253,1.141,254,1.953,255,2.143,256,0.748,257,1.092,258,0.717,259,1.3,260,1.092,261,0.938,262,1.092,263,1.424,264,1.568,265,0.938,266,1.092,267,1.621,268,1.108,269,1.595,270,1.739,271,1.092,272,0.984,273,1.036,274,1.092,275,1.036,276,0.659,278,0.781,279,0.938,280,1.092,281,2.167,282,0.632,284,1.493,286,1.568,287,1.568,288,1.86,289,1.649,290,1.092,291,1.739,292,1.092,293,1.092,294,1.092,295,1.092,297,0.558,298,2.023,299,0.894,300,0.894,301,0.854,302,0.926,303,2.47,304,1.092,305,1.036,307,1.092,308,0.894,309,1.036,310,0.717,311,1.036,312,0.938,313,1.092,314,1.092,315,1.092,316,1.092,317,0.938,318,1.092,319,1.424,320,1.3,321,2.167,322,1.493,323,1.244,324,1.493,325,1.568,326,1.424,327,1.649,328,1.568,329,1.739,330,3.573,331,3.532,332,1.739,333,1.739,334,1.739,335,1.739,336,1.036,337,0.854,338,1.092,339,0.717,340,0.894,341,0.938,342,0.854,343,1.036,344,1.036,345,1.36,346,1.739,347,0.748,348,1.739,349,1.739,350,2.227,351,0.984,352,1.092,353,1.092,354,1.092,355,2.697,356,0.938,357,0.659,358,1.036,359,1.092,360,1.036,361,1.036,362,1.092,363,1.092,364,1.092,365,1.568,366,1.36,367,1.739,368,1.774,369,1.649,370,1.092,371,0.984,372,1.092,373,1.092,374,0.894,375,0.659,376,0.687,377,1.092,378,0.938,379,1.092,380,1.036,381,0.659,382,0.748,383,0.659,384,1.036,385,0.781,386,1.092,387,1.092,388,1.092,389,1.092,390,1.092,391,1.092,392,1.092,393,1.092,394,1.092,395,1.092,396,1.092,397,1.092,398,1.092,399,1.092,400,1.092,401,1.092,402,1.092,403,1.092,404,1.092,405,1.092,406,1.092,407,1.092,408,1.092,409,1.092,410,1.092,411,1.092,412,1.092,413,1.092,414,1.092,474,3.395,475,2.937,476,3.395,477,2.132,478,4.555,479,4.555,480,2.132,481,2.132,482,2.132,483,2.132]],["title/modules/OAuthModule.html",[484,3.499,485,2.96]],["body/modules/OAuthModule.html",[0,0.191,3,0.705,4,0.768,5,0.646,7,2.673,12,2.981,21,2.981,23,1.38,26,0.705,32,0.705,37,1.509,39,1.071,40,0.016,41,1.028,42,0.736,43,0.802,45,1.321,72,1.373,77,3.462,78,0.462,98,0.987,109,0.802,123,0.01,124,0.01,125,3.406,127,1.93,131,2.924,135,1.214,136,3.681,139,3.681,141,2.924,159,4.026,169,3.681,176,1.671,178,3.177,180,4.106,190,2.04,200,1.214,201,1.93,202,3.274,203,2.924,204,2.474,212,0.947,223,1.491,283,1.442,323,2.649,328,2.395,345,2.077,347,1.82,421,4.21,422,3.259,423,2.04,485,3.896,486,2.924,487,5.187,488,3.767,489,5.187,490,3.767,491,6.392,492,3.767,493,3.409,494,5.933,495,4.604,496,5.187,497,3.259,498,5.187,499,1.83,500,3.259,501,4.026,502,3.767,503,3.406,504,3.767,505,3.767,506,3.767,507,4.487,508,4.487,509,3.767,510,2.924,511,2.924,512,3.767,513,2.673,514,4.487,515,5.798,516,3.767,517,3.767]],["title/classes/OAuthModuleConfig.html",[0,0.228,180,2.761]],["body/classes/OAuthModuleConfig.html",[0,0.325,2,1.689,3,0.981,4,1.069,5,0.899,10,1.617,22,1.025,26,1.419,30,1.431,32,0.981,40,0.016,42,1.025,66,1.921,78,0.789,98,1.373,123,0.013,124,0.013,180,3.941,206,2.577,212,1.317,218,4.225,246,2.162,255,1.839,269,1.491,518,5.565,519,4.535,520,4.94,521,5.402,522,5.243,523,3.721,524,4.069,525,4.535,526,4.535,527,4.069,528,3.443,529,3.721,530,3.721,531,4.535]],["title/classes/OAuthNoopResourceServerErrorHandler.html",[0,0.228,503,2.96]],["body/classes/OAuthNoopResourceServerErrorHandler.html",[0,0.321,2,1.65,3,0.959,4,1.045,5,0.878,8,2.774,10,1.594,14,1.959,22,1.001,23,2.323,26,1.348,32,0.959,39,1.456,40,0.016,41,1.398,42,1.001,43,1.09,45,1.797,68,3.688,72,1.136,73,2.774,78,0.778,109,1.09,123,0.013,124,0.013,178,4.219,190,2.774,200,2.043,201,3.248,240,3.975,503,4.164,532,5.486,533,5.486,534,5.346,535,5.743,536,4.43,537,4.43,538,4.43]],["title/classes/OAuthResourceServerConfig.html",[0,0.228,521,3.499]],["body/classes/OAuthResourceServerConfig.html",[0,0.308,2,1.547,3,0.899,4,0.979,5,0.823,10,1.53,22,0.938,26,1.452,30,1.31,32,1.252,40,0.016,42,1.307,43,1.497,66,2.231,78,0.747,98,1.595,123,0.012,124,0.012,180,2.941,206,2.679,212,1.206,218,4.767,246,2.047,255,2.136,269,1.732,518,6.085,519,4.153,520,3.407,521,5.191,523,4.322,524,4.726,525,5.268,526,5.268,527,4.726,528,3.999,529,4.747,530,4.322,531,5.786,539,4.801,540,3.153,541,4.801,542,4.801]],["title/classes/OAuthResourceServerErrorHandler.html",[0,0.228,178,2.761]],["body/classes/OAuthResourceServerErrorHandler.html",[0,0.321,2,1.65,3,0.959,4,1.045,5,0.878,8,2.774,10,1.809,14,1.582,22,1.001,23,2.323,26,1.348,32,0.959,39,1.456,40,0.016,41,1.398,42,1.001,43,1.09,45,1.797,68,3.688,72,1.136,73,2.774,78,0.778,109,1.09,123,0.013,124,0.013,178,4.219,190,2.774,200,2.043,201,3.248,503,3.363,532,5.486,533,5.486,534,5.346,535,5.743,536,4.43,537,4.43,538,4.43,543,5.121]],["title/classes/OAuthStorage.html",[0,0.228,345,1.805]],["body/classes/OAuthStorage.html",[0,0.272,2,0.718,3,0.659,4,0.455,5,0.382,9,0.935,10,1.787,11,0.782,14,0.689,15,0.718,22,0.436,23,1.289,26,1.41,30,2.18,32,0.815,35,1.888,36,0.935,39,1.239,40,0.016,41,1.189,42,0.851,43,1.052,45,1.528,47,1.593,52,1.133,55,1.547,65,1.182,66,0.817,72,0.4,78,0.783,79,1.809,80,1.547,81,0.98,82,0.98,83,0.98,89,1.404,98,1.41,109,0.475,116,0.538,123,0.007,124,0.007,133,1.475,134,1.087,135,0.718,158,0.893,176,0.718,194,1.03,206,1.409,212,0.56,223,0.884,241,1.03,242,1.142,243,0.318,244,1.03,245,1.03,247,1.03,248,1.142,249,1.142,250,1.142,251,1.142,253,1.182,254,2.011,255,2.24,256,0.782,257,1.142,258,0.749,259,1.347,260,1.142,261,0.98,262,1.142,263,1.475,264,1.624,265,0.98,266,1.142,267,1.662,268,1.141,269,1.627,270,1.802,271,1.142,272,1.03,273,1.083,274,1.142,275,1.083,276,0.689,278,0.817,279,0.98,280,1.142,281,1.802,282,0.661,284,1.547,286,1.624,287,1.624,288,1.915,289,1.709,290,1.142,291,1.802,292,1.142,293,1.142,294,1.142,295,1.142,297,0.584,298,2.074,299,0.935,300,0.935,301,0.893,302,0.96,303,2.533,304,1.142,305,1.083,307,1.142,308,0.935,309,1.083,310,0.749,311,1.083,312,0.98,313,1.142,314,1.142,315,1.142,316,1.142,317,0.98,318,1.142,319,0.935,320,0.854,321,2.231,322,0.98,323,0.817,324,0.98,325,1.03,326,0.935,327,1.083,328,1.03,329,1.142,330,2.757,331,3.416,332,1.142,333,1.142,334,1.142,335,1.142,336,1.709,337,1.409,338,1.802,339,1.182,340,1.475,341,1.547,342,1.409,343,1.709,344,1.709,345,1.745,346,2.231,347,1.234,348,2.231,349,2.231,350,2.641,351,1.03,352,1.142,353,1.142,354,1.142,355,2.757,356,0.98,357,0.689,358,1.083,359,1.142,360,1.083,361,1.083,362,1.142,363,1.142,364,1.142,365,1.624,366,1.409,367,1.802,368,1.827,369,1.709,370,1.142,371,1.03,372,1.142,373,1.142,374,0.935,375,0.689,376,0.718,377,1.142,378,0.98,379,1.142,380,2.402,381,0.689,382,0.782,383,0.689,384,1.083,385,0.817,386,1.142,387,1.142,388,1.142,389,1.142,390,1.142,391,1.142,392,1.142,393,1.142,394,1.142,395,1.142,396,1.142,397,1.142,398,1.142,399,1.142,400,1.142,401,1.142,402,1.142,403,1.142,404,1.142,405,1.142,406,1.142,407,1.142,408,1.142,409,1.142,410,1.142,411,1.142,412,1.142,413,1.142,414,1.142,415,3.043,416,3.043,417,3.043,544,2.23,545,2.23,546,2.23]],["title/classes/OAuthSuccessEvent.html",[0,0.228,467,2.96]],["body/classes/OAuthSuccessEvent.html",[0,0.332,2,1.297,3,1.352,4,0.821,5,0.69,10,1.012,22,0.787,26,1.44,32,1.149,37,1.612,39,1.145,40,0.016,41,1.099,42,1.436,43,0.857,47,1.749,67,2.314,78,0.841,123,0.011,124,0.011,137,4.025,174,2.062,227,2.314,246,1.824,283,1.541,347,2.305,431,2.466,432,2.643,433,4.641,434,5.282,435,2.857,436,4.663,437,4.823,440,2.857,441,3.124,442,2.466,443,2.643,444,2.466,445,2.643,446,2.643,447,2.466,448,2.643,449,2.643,450,2.643,451,2.643,452,2.643,453,2.643,454,2.466,455,2.466,456,2.643,457,2.643,458,2.643,459,2.466,460,2.466,461,2.643,462,1.859,463,2.643,464,2.643,465,2.643,466,2.857,467,3.564,468,4.357,469,2.643,547,4.026,548,4.026]],["title/interfaces/OidcDiscoveryDoc.html",[79,1.515,384,2.19]],["body/interfaces/OidcDiscoveryDoc.html",[0,0.254,3,0.588,4,0.395,5,0.332,9,0.812,10,1.573,11,0.679,14,0.598,15,0.624,22,0.378,26,1.338,30,2.208,35,1.759,36,0.812,40,0.016,42,1.466,43,0.412,47,1.47,52,1.012,55,1.381,65,1.056,66,0.709,72,0.347,78,0.747,79,1.685,80,1.381,81,0.851,82,0.851,83,0.851,89,1.012,98,1.313,109,0.412,116,0.467,123,0.006,124,0.006,133,1.317,134,0.97,135,0.624,158,0.775,176,0.624,194,0.894,206,1.827,212,0.486,223,0.789,241,0.894,242,0.991,243,0.276,244,0.894,245,0.894,246,1.056,247,0.894,248,0.991,249,0.991,250,0.991,251,0.991,253,1.056,254,1.83,255,2.067,256,0.679,257,0.991,258,0.651,259,1.203,260,0.991,261,0.851,262,0.991,263,1.317,264,1.45,265,0.851,266,0.991,267,1.533,268,1.038,269,1.527,270,1.609,271,0.991,272,0.894,273,0.94,274,0.991,275,0.94,276,0.598,278,0.709,279,0.851,280,0.991,281,1.609,282,0.574,284,1.381,286,1.45,287,1.45,288,1.743,289,1.526,290,0.991,291,1.609,292,0.991,293,0.991,294,0.991,295,0.991,297,0.507,298,1.913,299,0.812,300,0.812,301,0.775,302,0.857,303,2.03,304,0.991,305,0.94,307,0.991,308,0.812,309,0.94,310,0.651,311,0.94,312,0.851,313,0.991,314,0.991,315,0.991,316,0.991,317,0.851,318,0.991,319,0.812,320,0.741,321,1.609,322,0.851,323,0.709,324,0.851,325,0.894,326,0.812,327,0.94,328,0.894,329,0.991,330,2.569,331,3.12,332,0.991,333,0.991,334,0.991,335,0.991,336,0.94,337,0.775,338,0.991,339,0.651,340,0.812,341,0.851,342,0.775,343,0.94,344,0.94,345,1.258,346,1.609,347,0.679,348,1.609,349,1.609,350,2.106,351,0.894,352,0.991,353,0.991,354,0.991,355,2.751,356,0.851,357,0.598,358,0.94,359,0.991,360,0.94,361,0.94,362,0.991,363,0.991,364,0.991,365,1.45,366,1.258,367,1.609,368,1.913,369,1.526,370,0.991,371,0.894,372,0.991,373,0.991,374,0.812,375,0.598,376,0.624,377,0.991,378,0.851,379,0.991,380,0.94,381,0.97,382,1.102,383,0.97,384,1.526,385,1.671,386,2.336,387,2.336,388,2.336,389,2.336,390,2.336,391,2.336,392,2.336,393,2.336,394,2.336,395,2.336,396,2.336,397,2.336,398,2.336,399,2.336,400,2.336,401,2.336,402,2.336,403,2.336,404,2.336,405,2.336,406,2.336,407,2.336,408,2.336,409,2.336,410,2.336,411,2.336,412,2.336,413,2.336,414,2.336,549,1.186]],["title/interfaces/ParsedIdToken.html",[79,1.515,361,2.19]],["body/interfaces/ParsedIdToken.html",[0,0.277,3,0.678,4,0.472,5,0.397,9,0.971,10,1.661,11,0.812,14,0.715,15,0.746,22,0.453,26,1.379,30,2.181,35,1.922,36,0.971,40,0.016,42,1.136,43,0.493,47,2.025,52,1.438,55,1.963,65,1.218,66,0.848,72,0.415,78,0.792,79,1.842,80,2.41,81,1.018,82,2.22,83,2.22,89,1.167,98,1.435,109,0.493,116,0.558,123,0.007,124,0.007,133,2.117,134,1.119,135,0.746,158,0.927,176,0.746,194,1.069,206,1.451,212,0.582,223,0.91,241,1.069,242,1.186,243,0.33,244,1.069,245,1.069,246,1.218,247,1.069,248,1.186,249,1.186,250,1.186,251,1.186,253,1.218,254,2.061,255,2.205,256,0.812,257,1.186,258,0.778,259,1.387,260,1.186,261,1.018,262,1.186,263,1.519,264,1.673,265,1.018,266,1.186,267,1.697,268,1.169,269,1.653,270,1.856,271,1.186,272,1.069,273,1.125,274,1.186,275,1.125,276,0.715,278,0.848,279,1.018,280,1.186,281,1.856,282,0.686,284,1.593,286,1.673,287,1.673,288,1.963,289,1.76,290,1.186,291,1.856,292,1.186,293,1.186,294,1.186,295,1.186,297,0.606,298,2.117,299,0.971,300,0.971,301,0.927,302,0.989,303,2.286,304,1.186,305,1.125,307,1.186,308,0.971,309,1.125,310,0.778,311,1.125,312,1.018,313,1.186,314,1.186,315,1.186,316,1.186,317,1.018,318,1.186,319,0.971,320,0.886,321,1.856,322,1.018,323,0.848,324,1.018,325,1.069,326,0.971,327,1.125,328,1.069,329,1.186,330,2.807,331,3.31,332,1.186,333,1.186,334,1.186,335,1.186,336,1.125,337,0.927,338,1.186,339,0.778,340,0.971,341,1.018,342,0.927,343,1.125,344,1.125,345,1.451,346,1.856,347,0.812,348,1.856,349,1.856,350,2.331,351,1.069,352,1.186,353,1.186,354,1.186,355,2.977,356,1.018,357,0.715,358,1.125,359,1.186,360,1.76,361,1.76,362,2.586,363,2.586,364,2.586,365,1.673,366,1.451,367,1.856,368,1.872,369,1.76,370,1.186,371,1.069,372,1.186,373,1.186,374,0.971,375,0.715,376,0.746,377,1.186,378,1.018,379,1.186,380,1.125,381,0.715,382,0.812,383,0.715,384,1.125,385,0.848,386,1.186,387,1.186,388,1.186,389,1.186,390,1.186,391,1.186,392,1.186,393,1.186,394,1.186,395,1.186,396,1.186,397,1.186,398,1.186,399,1.186,400,1.186,401,1.186,402,1.186,403,1.186,404,1.186,405,1.186,406,1.186,407,1.186,408,1.186,409,1.186,410,1.186,411,1.186,412,1.186,413,1.186,414,1.186,549,1.418]],["title/classes/ReceivedTokens.html",[0,0.228,358,2.19]],["body/classes/ReceivedTokens.html",[0,0.277,2,0.743,3,0.676,4,0.471,5,0.396,9,0.968,10,1.659,11,0.809,14,0.713,15,0.743,22,0.451,26,1.426,30,2.176,32,0.943,35,1.919,36,0.968,40,0.016,42,0.985,43,1.164,47,1.763,52,1.164,55,1.958,65,1.694,66,0.845,72,0.413,78,0.791,79,1.839,80,2.216,81,1.958,82,1.015,83,1.015,89,1.435,98,1.433,109,0.491,116,0.556,123,0.007,124,0.007,133,1.515,134,1.116,135,0.743,158,0.924,176,0.743,194,1.065,206,1.447,212,0.58,223,1.119,241,1.065,242,1.182,243,0.329,244,1.065,245,1.065,246,1.214,247,1.065,248,1.182,249,1.182,250,1.182,251,1.182,253,1.214,254,2.056,255,2.202,256,0.809,257,1.182,258,0.775,259,1.383,260,1.182,261,1.015,262,1.182,263,1.515,264,1.668,265,1.015,266,1.182,267,1.694,268,1.166,269,1.65,270,1.851,271,1.182,272,1.065,273,1.121,274,1.182,275,1.121,276,0.713,278,0.845,279,1.015,280,1.182,281,1.851,282,0.684,284,1.589,286,1.668,287,1.668,288,1.958,289,1.755,290,1.182,291,1.851,292,1.182,293,1.182,294,1.182,295,1.182,297,0.604,298,2.544,299,0.968,300,0.968,301,0.924,302,0.986,303,2.281,304,1.182,305,1.121,307,1.182,308,0.968,309,1.121,310,0.775,311,1.121,312,1.015,313,1.182,314,1.182,315,1.182,316,1.182,317,1.015,318,1.182,319,0.968,320,0.883,321,1.851,322,1.015,323,0.845,324,1.015,325,1.065,326,0.968,327,1.121,328,1.065,329,1.182,330,2.802,331,3.306,332,1.182,333,1.182,334,1.182,335,1.182,336,1.121,337,0.924,338,1.182,339,0.775,340,0.968,341,1.015,342,0.924,343,1.121,344,1.121,345,1.447,346,1.851,347,0.809,348,1.851,349,1.851,350,2.327,351,1.065,352,1.182,353,1.182,354,1.182,355,2.972,356,1.589,357,1.116,358,1.755,359,2.281,360,1.121,361,1.121,362,1.182,363,1.182,364,1.182,365,1.668,366,1.447,367,1.851,368,1.868,369,1.755,370,1.182,371,1.065,372,1.182,373,1.182,374,0.968,375,0.713,376,0.743,377,1.182,378,1.015,379,1.182,380,1.121,381,0.713,382,0.809,383,0.713,384,1.121,385,0.845,386,1.182,387,1.182,388,1.182,389,1.182,390,1.182,391,1.182,392,1.182,393,1.182,394,1.182,395,1.182,396,1.182,397,1.182,398,1.182,399,1.182,400,1.182,401,1.182,402,1.182,403,1.182,404,1.182,405,1.182,406,1.182,407,1.182,408,1.182,409,1.182,410,1.182,411,1.182,412,1.182,413,1.182,414,1.182,550,2.307,551,2.307,552,2.307,553,2.307]],["title/injectables/SystemDateTimeProvider.html",[134,1.393,136,3.199]],["body/injectables/SystemDateTimeProvider.html",[0,0.317,3,0.942,4,1.026,5,0.862,10,1.717,22,0.983,23,2.298,26,1.441,32,1.174,40,0.016,45,2.2,72,0.902,78,0.769,109,1.335,116,1.81,123,0.013,124,0.013,125,4.834,126,4.352,127,2.577,128,4.352,129,5.224,131,5.552,133,2.866,134,1.938,135,1.621,136,4.451,137,3.842,138,4.352,140,3.304,440,4.451,554,5.031,555,5.031]],["title/interfaces/TokenResponse.html",[79,1.515,371,2.082]],["body/interfaces/TokenResponse.html",[0,0.275,3,0.67,4,0.465,5,0.391,9,0.957,10,1.654,11,0.8,14,0.705,15,0.735,22,0.446,26,1.376,30,2.187,35,1.909,36,0.957,40,0.016,42,1.18,43,0.941,47,1.613,52,1.753,55,1.574,65,1.203,66,1.834,72,0.409,78,0.789,79,1.829,80,1.574,81,1.003,82,1.003,83,1.003,89,1.154,98,1.425,109,0.485,116,0.55,123,0.007,124,0.007,133,2.1,134,1.106,135,0.735,158,0.913,176,0.735,194,1.053,206,1.434,212,0.573,223,1.111,241,1.053,242,1.168,243,0.325,244,1.053,245,1.053,246,1.203,247,1.053,248,1.168,249,1.168,250,1.168,251,1.168,253,1.203,254,2.041,255,2.194,256,0.8,257,1.168,258,0.767,259,1.371,260,1.168,261,1.003,262,1.168,263,1.502,264,1.653,265,1.003,266,1.168,267,1.683,268,1.158,269,1.642,270,1.834,271,1.168,272,1.053,273,1.108,274,1.168,275,1.108,276,0.705,278,0.836,279,1.003,280,1.168,281,1.834,282,0.676,284,1.574,286,1.653,287,1.653,288,1.944,289,1.739,290,1.168,291,1.834,292,1.168,293,1.168,294,1.168,295,1.168,297,0.597,298,2.533,299,0.957,300,0.957,301,0.913,302,0.977,303,2.264,304,1.168,305,1.108,307,1.168,308,0.957,309,1.108,310,0.767,311,1.108,312,1.003,313,1.168,314,1.168,315,1.168,316,1.168,317,1.003,318,1.168,319,0.957,320,0.873,321,1.834,322,1.003,323,0.836,324,1.003,325,1.053,326,0.957,327,1.108,328,1.053,329,1.168,330,2.787,331,3.294,332,1.168,333,1.168,334,1.168,335,1.168,336,1.108,337,0.913,338,1.168,339,0.767,340,0.957,341,1.003,342,0.913,343,1.108,344,1.108,345,1.434,346,1.834,347,0.8,348,1.834,349,1.834,350,2.312,351,1.053,352,1.168,353,1.168,354,1.168,355,2.958,356,1.003,357,0.705,358,1.108,359,1.168,360,1.108,361,1.108,362,1.168,363,1.168,364,1.168,365,2.041,366,1.77,367,2.264,368,2.1,369,2.147,370,1.834,371,1.653,372,2.565,373,2.565,374,2.1,375,1.547,376,0.735,377,1.168,378,1.003,379,1.168,380,1.108,381,0.705,382,0.8,383,0.705,384,1.108,385,0.836,386,1.168,387,1.168,388,1.168,389,1.168,390,1.168,391,1.168,392,1.168,393,1.168,394,1.168,395,1.168,396,1.168,397,1.168,398,1.168,399,1.168,400,1.168,401,1.168,402,1.168,403,1.168,404,1.168,405,1.168,406,1.168,407,1.168,408,1.168,409,1.168,410,1.168,411,1.168,412,1.168,413,1.168,414,1.168,549,1.397]],["title/injectables/UrlHelperService.html",[134,1.393,501,3.499]],["body/injectables/UrlHelperService.html",[0,0.205,3,0.76,4,0.828,5,0.696,22,0.793,23,1.999,26,1.326,30,2.008,32,1.022,35,2.313,37,2.185,39,1.552,40,0.016,41,1.489,42,1.067,43,1.161,45,1.914,47,2.216,72,0.727,78,0.498,91,2.585,109,1.464,123,0.011,124,0.011,134,1.686,135,1.308,140,2.665,167,2.332,247,2.52,272,2.52,347,1.424,350,1.874,380,2.651,479,3.511,501,4.235,556,6.165,557,4.058,558,5.457,559,5.457,560,5.457,561,4.058,562,5.457,563,4.058,564,4.058,565,4.058,566,5.457,567,5.457,568,4.517,569,4.058,570,4.058,571,4.058,572,4.058,573,5.457,574,6.165,575,6.165,576,6.165,577,4.058,578,4.058,579,4.058,580,4.058,581,4.058,582,4.058,583,4.058,584,4.058]],["title/interfaces/UserInfo.html",[79,1.515,378,1.982]],["body/interfaces/UserInfo.html",[0,0.281,3,0.851,4,0.486,5,0.409,9,1,10,1.675,11,0.836,14,0.737,15,0.768,22,0.466,26,1.386,30,2.18,32,0.446,35,1.949,36,1,40,0.016,42,0.466,43,0.507,47,1.653,52,1.194,55,1.63,65,1.246,66,0.874,72,0.427,78,0.799,79,1.868,80,1.63,81,1.048,82,1.048,83,1.048,89,1.194,98,1.455,109,0.507,116,0.575,123,0.007,124,0.007,133,1.555,134,1.145,135,0.768,158,0.955,176,0.768,194,1.101,206,1.485,212,0.599,223,0.932,241,1.101,242,1.221,243,0.34,244,1.101,245,1.101,246,1.246,247,1.101,248,1.221,249,1.221,250,1.221,251,1.221,253,1.246,254,2.1,255,2.227,256,0.836,257,1.221,258,0.801,259,1.419,260,1.221,261,1.048,262,1.221,263,1.555,264,1.712,265,1.048,266,1.221,267,1.724,268,1.191,269,1.673,270,1.899,271,1.221,272,1.101,273,1.158,274,1.221,275,1.158,276,0.737,278,0.874,279,1.048,280,1.221,281,1.899,282,0.707,284,1.63,286,1.712,287,1.712,288,2,289,1.801,290,1.221,291,1.899,292,1.221,293,1.221,294,1.221,295,1.221,297,0.624,298,2.151,299,1,300,1,301,0.955,302,1.012,303,2.33,304,1.221,305,1.158,307,1.221,308,1,309,1.158,310,0.801,311,1.158,312,1.048,313,1.221,314,1.221,315,1.221,316,1.221,317,1.048,318,1.221,319,1,320,0.913,321,1.899,322,1.048,323,0.874,324,1.048,325,1.101,326,1,327,1.158,328,1.101,329,1.221,330,2.846,331,3.34,332,1.221,333,1.221,334,1.221,335,1.221,336,1.158,337,0.955,338,1.221,339,0.801,340,1,341,1.048,342,0.955,343,1.158,344,1.158,345,1.485,346,1.899,347,0.836,348,1.899,349,1.899,350,2.369,351,1.101,352,1.221,353,1.221,354,1.221,355,3.013,356,1.048,357,0.737,358,1.158,359,1.221,360,1.158,361,1.158,362,1.221,363,1.221,364,1.221,365,2.1,366,1.821,367,2.33,368,2.151,369,2.209,370,1.221,371,1.101,372,1.221,373,1.221,374,1,375,0.737,376,1.194,377,1.899,378,1.63,379,2.628,380,1.801,381,0.737,382,0.836,383,0.737,384,1.158,385,0.874,386,1.221,387,1.221,388,1.221,389,1.221,390,1.221,391,1.221,392,1.221,393,1.221,394,1.221,395,1.221,396,1.221,397,1.221,398,1.221,399,1.221,400,1.221,401,1.221,402,1.221,403,1.221,404,1.221,405,1.221,406,1.221,407,1.221,408,1.221,409,1.221,410,1.221,411,1.221,412,1.221,413,1.221,414,1.221,549,1.461,585,2.384,586,2.384]],["title/classes/ValidationHandler.html",[0,0.228,12,2.591]],["body/classes/ValidationHandler.html",[0,0.228,1,2.19,2,0.994,3,0.578,4,0.629,5,0.529,6,3.256,7,3.773,8,1.671,9,1.294,10,1.812,11,1.082,12,3.358,13,1.89,14,1.391,15,1.451,16,3.773,17,1.499,18,1.513,19,2.19,20,2.395,21,2.587,22,0.603,23,1.649,24,3.494,26,1.311,28,3.494,29,2.395,30,1.911,31,4.535,32,0.843,34,2.395,35,2.05,36,1.888,37,1.236,38,0.714,39,1.28,40,0.016,41,1.451,42,0.88,43,0.958,44,2.026,45,1.579,46,2.395,47,1.883,49,2.395,50,4.126,51,2.395,52,2.159,53,2.395,54,2.395,55,1.357,56,2.026,57,2.026,59,2.395,60,4.736,62,4.605,63,4.41,64,3.773,65,1.787,66,1.947,68,3.518,69,3.773,71,3.491,72,0.953,73,1.671,74,2.19,75,2.026,76,2.395,77,1.671,78,0.652,79,1.787,80,1.357,81,1.357,82,1.357,83,1.357,84,1.773,85,2.395,86,3.494,87,3.494,88,3.195,89,1.451,90,3.195,91,2.721,92,3.494,93,2.395,94,2.395,95,2.395,96,2.395,97,2.395,98,0.808,99,2.395,100,2.395,101,2.395,102,2.19,103,4.126,104,2.395,105,4.535,106,2.395,107,2.395,108,2.395,109,1.131,110,2.395,111,4.126,112,2.395,113,2.395,114,2.395,115,2.026,116,0.744,117,2.395,118,2.026,119,2.19,120,2.395,121,2.395,122,1.773,123,0.009,124,0.009,587,3.085,588,3.085]],["title/interfaces/ValidationParams.html",[60,2.96,79,1.515]],["body/interfaces/ValidationParams.html",[0,0.232,1,2.249,3,0.593,4,0.646,5,0.543,6,1.941,7,2.249,8,1.716,10,1.698,11,1.112,12,3.102,13,1.941,14,1.418,15,1.479,16,2.249,17,1.539,18,1.543,19,2.249,20,2.459,21,2.638,22,0.619,24,3.562,26,1.176,29,2.459,30,2.019,31,4.593,34,2.459,35,2.076,36,1.925,37,1.269,38,0.733,40,0.016,41,0.865,42,1.28,44,2.081,46,2.459,47,2.307,49,2.459,50,4.189,51,2.459,52,2.024,53,2.459,54,2.459,55,1.393,56,2.081,57,2.081,59,2.459,60,4.3,62,4.2,63,4.2,64,3.258,65,1.543,66,1.682,68,3.355,69,3.258,71,3.014,72,0.967,73,1.716,74,2.249,75,2.081,76,2.459,77,1.716,78,0.662,79,1.543,80,2.602,81,2.602,82,2.602,83,2.602,84,3.401,85,4.593,86,2.459,87,2.459,88,2.249,89,1.021,90,2.249,91,2.746,92,3.562,93,2.459,94,2.459,95,2.459,96,2.459,97,2.459,98,0.83,99,2.459,100,2.459,101,2.459,102,2.249,103,4.189,104,2.459,105,4.593,106,2.459,107,2.459,108,2.459,109,1.149,110,2.459,111,4.189,112,2.459,113,2.459,114,2.459,115,2.081,116,0.764,117,2.459,118,2.081,119,2.249,120,2.459,121,2.459,122,1.821,123,0.009,124,0.009,246,1.543,540,3.014,549,1.941]],["title/classes/WebHttpUrlEncodingCodec.html",[0,0.228,589,3.9]],["body/classes/WebHttpUrlEncodingCodec.html",[0,0.217,2,1.384,3,0.804,4,0.876,5,0.736,9,1.801,14,1.751,22,0.839,23,2.076,26,1.445,30,2.159,32,1.262,39,1.918,40,0.016,41,1.84,42,1.318,43,1.435,45,2.365,72,0.77,78,0.527,109,1.435,123,0.011,124,0.011,190,2.326,253,1.904,255,1.988,589,4.901,590,4.294,591,4.901,592,5.666,593,5.666,594,5.666,595,6.341,596,5.666,597,5.666,598,5.666,599,5.666,600,5.666,601,4.294,602,5.666,603,5.666,604,4.294,605,5.666,606,5.666,607,4.294,608,5.666,609,4.294,610,4.294,611,4.294,612,4.294,613,4.294]],["title/changelog.html",[614,2.257,615,2.579,616,3.397]],["body/changelog.html",[5,0.797,13,1.226,17,1.97,18,1.928,35,1.632,38,1.262,39,0.569,40,0.009,42,0.631,43,0.426,52,0.645,67,3.134,77,1.084,84,1.15,89,0.645,98,0.845,116,0.778,119,1.421,122,1.15,123,0.006,124,0.006,125,1.314,127,1.025,129,2.29,164,1.553,174,1.025,200,0.645,201,1.025,202,2.383,204,3.581,206,0.802,212,1.282,223,1.442,244,0.924,247,0.924,253,1.715,256,0.702,259,1.953,261,2.522,263,1.951,265,1.419,267,2.337,268,1.821,272,1.49,275,0.972,282,1.512,283,1.552,286,0.924,287,0.924,297,1.502,298,2.653,305,0.972,309,0.972,310,1.085,326,1.701,337,0.802,357,0.618,365,0.924,366,1.624,371,0.924,374,1.353,378,0.88,383,0.997,423,1.084,462,2.356,524,1.553,616,1.731,617,2.002,618,2.002,619,2.002,620,2.002,621,4.413,622,4.413,623,2.002,624,2.002,625,5.736,626,2.002,627,2.002,628,2.002,629,2.002,630,2.002,631,2.002,632,2.002,633,2.002,634,2.002,635,2.002,636,2.002,637,2.002,638,2.002,639,2.002,640,5.102,641,2.002,642,2.002,643,1.951,644,2.002,645,2.002,646,2.002,647,3.508,648,2.878,649,2.002,650,2.002,651,2.002,652,2.002,653,2.002,654,2.002,655,1.421,656,2.002,657,1.084,658,2.002,659,2.002,660,5.454,661,2.002,662,2.002,663,2.002,664,2.002,665,2.002,666,0.802,667,2.002,668,3.227,669,2.002,670,2.002,671,2.002,672,2.002,673,4.413,674,2.002,675,2.002,676,2.002,677,1.15,678,2.002,679,2.29,680,2.002,681,2.002,682,1.731,683,2.002,684,4.717,685,2.002,686,2.002,687,1.553,688,0.972,689,2.002,690,3.301,691,1.084,692,2.002,693,4.071,694,2.002,695,2.002,696,2.002,697,2.002,698,2.002,699,1.731,700,1.731,701,3.508,702,2.002,703,2.002,704,2.002,705,2.002,706,2.002,707,1.421,708,2.002,709,2.002,710,4.055,711,5.736,712,4.055,713,4.055,714,3.227,715,2.002,716,2.33,717,2.002,718,2.002,719,2.002,720,2.002,721,2.002,722,3.227,723,3.227,724,2.002,725,2.002,726,2.002,727,2.002,728,2.002,729,2.002,730,2.002,731,2.002,732,4.055,733,3.227,734,2.002,735,3.227,736,2.002,737,2.002,738,2.002,739,4.055,740,2.002,741,1.553,742,2.002,743,2.792,744,2.002,745,2.002,746,2.002,747,2.002,748,2.002,749,2.002,750,2.002,751,3.227,752,4.055,753,4.055,754,4.055,755,2.002,756,1.553,757,2.002,758,4.651,759,2.002,760,2.002,761,2.002,762,2.002,763,2.002,764,2.002,765,2.002,766,2.002,767,4.055,768,3.227,769,2.002,770,2.002,771,2.002,772,3.227,773,2.002,774,2.002,775,1.731,776,2.002,777,2.002,778,2.002,779,2.002,780,2.002,781,2.792,782,2.002,783,3.508,784,3.147,785,4.055,786,2.002,787,4.055,788,3.147,789,3.147,790,2.878,791,4.055,792,2.002,793,1.731,794,2.002,795,2.002,796,2.196,797,1.421,798,2.002,799,1.731,800,3.227,801,3.227,802,3.227,803,3.227,804,3.227,805,2.29,806,1.977,807,2.792,808,3.227,809,3.514,810,2.792,811,1.568,812,3.147,813,2.792,814,3.227,815,3.227,816,2.849,817,1.855,818,2.002,819,2.29,820,2.505,821,3.227,822,2.792,823,4.024,824,3.227,825,2.002,826,2.002,827,2.002,828,0.839,829,1.731,830,2.002,831,2.792,832,2.792,833,2.119,834,3.227,835,2.792,836,2.792,837,3.227,838,3.227,839,3.227,840,4.055,841,2.505,842,2.792,843,3.227,844,2.29,845,1.977,846,3.227,847,3.227,848,3.227,849,3.227,850,3.227,851,2.792,852,2.29,853,3.227,854,3.227,855,3.227,856,3.227,857,3.227,858,2.792,859,3.227,860,3.227,861,3.227,862,3.227,863,3.227,864,2.002,865,2.002,866,2.002,867,3.227,868,2.002,869,3.227,870,2.002,871,1.731,872,1.731,873,1.731,874,1.731,875,0.88,876,0.88,877,1.731,878,1.731,879,1.15,880,1.314,881,2.002,882,2.002,883,2.002,884,1.421,885,2.002,886,2.002,887,2.002,888,2.002,889,2.002,890,2.002,891,2.002,892,3.227,893,2.002,894,2.002,895,3.227,896,1.731,897,2.002,898,2.002,899,2.878,900,3.227,901,2.002,902,2.002,903,2.002,904,2.002,905,2.002,906,2.002,907,1.731,908,1.731,909,2.002,910,2.002,911,2.002,912,2.002,913,2.002,914,2.002,915,2.002,916,1.731,917,2.002,918,2.002]],["title/dependencies.html",[919,3.397,920,4.142]],["body/dependencies.html",[40,0.016,73,3.376,75,3.271,122,2.862,123,0.013,124,0.013,135,1.605,153,3.865,297,1.304,302,1.359,497,4.308,591,4.308,648,3.535,716,2.862,741,3.865,828,2.089,920,3.865,921,4.981,922,7.747,923,4.981,924,4.981,925,4.981,926,6.233,927,5.391,928,4.981,929,4.981,930,4.981,931,4.981,932,4.981,933,4.981,934,4.981,935,4.981,936,4.981,937,3.865,938,4.981,939,4.981,940,4.981,941,4.981,942,4.981,943,6.233,944,4.981,945,4.981,946,4.981,947,4.981,948,4.981,949,4.981,950,4.981,951,4.981,952,4.981,953,4.981,954,4.981]],["title/index.html",[22,0.768,614,2.257,615,2.579]],["body/index.html",[0,0.085,4,0.341,5,0.287,11,0.587,13,1.025,15,1.154,17,1.354,18,2.242,32,0.313,36,0.702,38,1.159,40,0.015,52,0.539,71,1.099,72,0.898,78,0.342,84,0.962,89,0.539,91,0.702,98,0.938,102,1.188,116,0.404,118,1.83,123,0.007,124,0.006,127,0.857,129,1.978,168,1.448,190,0.907,200,1.861,202,2.566,212,0.701,218,1.83,223,1.537,243,0.238,253,0.937,255,1.256,256,0.587,258,1.204,264,0.773,267,2.143,268,1.786,269,1.019,276,1.107,278,0.613,279,0.736,282,1.238,283,1.067,297,1.638,299,1.169,300,0.702,301,1.116,302,1.669,308,1.502,310,0.937,319,1.945,324,1.226,326,0.702,339,0.937,340,0.702,342,0.67,356,0.736,357,0.861,366,1.673,368,1.169,369,1.354,375,1.107,376,1.711,378,0.736,381,1.107,382,1.256,383,1.29,385,1.021,425,2.411,462,1.654,485,1.099,495,2.163,499,1.354,510,1.299,511,1.299,520,1.188,523,1.188,529,1.978,530,1.188,540,1.099,621,2.411,622,1.448,643,2.333,647,1.448,648,1.188,655,1.978,657,2.262,666,1.434,673,2.411,677,0.962,679,1.978,684,1.448,688,2.58,690,1.188,707,1.978,716,3.319,743,1.448,756,2.163,784,1.299,790,1.188,796,2.262,799,1.448,806,1.707,809,2.558,811,0.813,812,1.299,813,1.448,817,2.666,819,3.554,822,1.448,823,1.448,828,3.095,829,2.411,833,1.83,841,1.299,842,1.448,845,1.707,852,1.188,858,1.448,871,1.448,872,1.448,873,1.448,874,1.448,875,2.04,876,1.226,877,1.448,878,1.448,879,1.602,880,1.099,899,1.188,937,1.299,955,1.674,956,3.582,957,2.542,958,1.674,959,1.674,960,2.788,961,1.674,962,1.674,963,2.163,964,1.674,965,2.788,966,3.6,967,1.674,968,1.674,969,3.554,970,3.582,971,1.674,972,2.411,973,1.299,974,1.674,975,1.674,976,4.177,977,1.674,978,1.448,979,2.788,980,2.788,981,1.448,982,2.788,983,1.674,984,1.674,985,1.674,986,3.046,987,1.674,988,1.674,989,1.674,990,2.788,991,1.674,992,1.674,993,2.788,994,2.964,995,2.411,996,0.642,997,0.813,998,2.472,999,2.163,1000,1.299,1001,1.188,1002,1.299,1003,1.448,1004,2.163,1005,2.163,1006,0.857,1007,1.448,1008,2.163,1009,3.582,1010,1.674,1011,1.674,1012,2.558,1013,1.707,1014,1.674,1015,1.674,1016,6.254,1017,4.332,1018,1.674,1019,2.788,1020,3.582,1021,1.674,1022,1.674,1023,1.674,1024,1.674,1025,3.582,1026,2.788,1027,1.099,1028,1.674,1029,2.788,1030,1.674,1031,2.788,1032,2.788,1033,1.674,1034,2.841,1035,2.788,1036,1.674,1037,1.674,1038,1.674,1039,1.674,1040,3.582,1041,2.788,1042,1.674,1043,1.674,1044,1.448,1045,1.674,1046,1.448,1047,1.299,1048,1.674,1049,1.674,1050,1.674,1051,1.674,1052,1.674,1053,1.674,1054,1.099,1055,1.674,1056,1.674,1057,1.674,1058,4.639,1059,2.788,1060,1.674,1061,4.639,1062,1.448,1063,1.299,1064,2.788,1065,2.163,1066,1.674,1067,1.099,1068,0.962,1069,1.674,1070,1.188,1071,2.788,1072,1.299,1073,1.707,1074,1.448,1075,1.448,1076,1.299,1077,2.788,1078,1.674,1079,2.163,1080,2.194,1081,1.674,1082,1.448,1083,1.674,1084,1.674,1085,1.188,1086,1.674,1087,2.163,1088,1.448,1089,1.674,1090,1.674,1091,1.448,1092,1.674,1093,1.674,1094,1.674,1095,2.262,1096,1.674,1097,3.582,1098,1.674,1099,1.674,1100,1.674,1101,1.674,1102,1.674,1103,2.411,1104,3.098,1105,2.163,1106,1.707,1107,1.299,1108,1.448,1109,1.299,1110,1.674,1111,1.707,1112,1.674,1113,1.299,1114,1.674,1115,0.702,1116,1.188,1117,1.707,1118,1.674,1119,1.674,1120,0.907,1121,0.962,1122,0.962,1123,1.188,1124,1.707,1125,1.674,1126,2.411,1127,1.448,1128,2.411,1129,2.788,1130,2.163,1131,1.299,1132,1.674,1133,1.674,1134,1.674,1135,1.188,1136,2.411,1137,1.448,1138,0.962,1139,1.428,1140,1.025,1141,1.674,1142,1.674,1143,1.83,1144,2.194,1145,1.099,1146,1.025,1147,0.857,1148,0.857,1149,1.674,1150,1.674,1151,1.674,1152,2.788,1153,1.674,1154,1.674,1155,1.674,1156,1.83,1157,1.099,1158,1.674,1159,1.674,1160,1.448,1161,1.674,1162,1.674,1163,1.674,1164,1.674,1165,1.674,1166,2.163,1167,1.025,1168,1.674,1169,2.788,1170,1.674,1171,1.83,1172,1.188,1173,1.674,1174,1.674,1175,1.674,1176,1.448,1177,1.83,1178,1.188,1179,1.299,1180,1.674,1181,1.674,1182,1.188,1183,1.674,1184,1.448,1185,1.674,1186,2.411,1187,1.448,1188,0.962,1189,1.299,1190,1.674,1191,1.299,1192,2.788,1193,1.674,1194,1.674,1195,1.674,1196,1.448,1197,1.448,1198,1.674,1199,1.448,1200,1.099,1201,1.299,1202,2.411,1203,0.907,1204,2.788,1205,1.674,1206,1.674,1207,1.674,1208,1.674,1209,2.788,1210,2.788,1211,1.674,1212,1.674,1213,1.674,1214,1.448,1215,2.78,1216,1.674,1217,1.448,1218,1.674,1219,2.163,1220,1.674,1221,1.674,1222,0.857,1223,1.674,1224,1.674,1225,1.674,1226,1.299,1227,1.674,1228,1.674,1229,1.674,1230,1.674,1231,1.674,1232,1.674,1233,1.674,1234,1.674,1235,1.099,1236,1.674,1237,1.674,1238,1.674,1239,1.674,1240,1.188,1241,1.674,1242,3.098,1243,1.448,1244,1.674,1245,1.674,1246,1.674,1247,1.674,1248,1.674]],["title/license.html",[614,2.257,615,2.579,788,3.048]],["body/license.html",[18,2.069,40,0.012,123,0.012,124,0.012,191,4.224,276,1.509,691,2.645,775,5.325,907,4.224,908,4.224,969,3.465,973,3.79,1047,3.79,1080,2.991,1199,4.224,1203,2.645,1249,6.741,1250,4.883,1251,4.883,1252,6.156,1253,4.883,1254,4.883,1255,4.883,1256,4.883,1257,4.883,1258,6.156,1259,7.721,1260,4.883,1261,4.883,1262,4.883,1263,4.427,1264,4.883,1265,3.79,1266,4.883,1267,4.883,1268,4.883,1269,4.883,1270,4.883,1271,4.883,1272,4.883,1273,6.156,1274,4.883,1275,4.883,1276,4.883,1277,4.883,1278,4.883,1279,6.156,1280,6.156,1281,4.883,1282,4.883,1283,4.883,1284,4.883,1285,4.883,1286,4.883,1287,4.883,1288,4.883,1289,4.883,1290,4.883,1291,4.883,1292,4.883,1293,4.224,1294,4.883,1295,4.883,1296,4.883,1297,4.883,1298,4.883,1299,4.883,1300,4.883,1301,4.883,1302,4.224,1303,4.883,1304,4.883,1305,4.883,1306,4.883,1307,4.883]],["title/modules.html",[486,4.539]],["body/modules.html",[40,0.014,123,0.014,124,0.014,485,4.062,486,4.801,1240,4.39,1308,6.186,1309,6.186]],["title/overview.html",[1310,5.059]],["body/overview.html",[2,1.933,40,0.014,123,0.014,124,0.014,140,3.94,484,4.656,549,3.675,568,3.94,920,5.412,1080,3.675,1310,5.19,1311,6.974,1312,5.999,1313,6.974,1314,5.999]],["title/properties.html",[246,1.794,919,3.397]],["body/properties.html",[40,0.015,123,0.014,124,0.014,246,2.066,716,3.533,788,4.771,1315,6.147,1316,6.147]],["title/miscellaneous/typealiases.html",[1317,2.787,1318,5.337]],["body/miscellaneous/typealiases.html",[22,1.041,40,0.016,42,1.041,123,0.013,124,0.013,227,3.061,432,3.498,437,4.266,442,3.263,443,3.498,444,3.263,445,3.498,446,3.498,447,3.263,448,3.498,449,3.498,450,3.498,451,3.498,452,3.498,453,3.498,454,3.263,455,3.263,456,3.498,457,3.498,458,3.498,459,3.263,460,3.263,461,3.498,462,2.459,463,3.498,464,3.498,465,3.498,1317,3.78,1319,5.327,1320,5.327]],["title/miscellaneous/variables.html",[1317,2.787,1321,4.616]],["body/miscellaneous/variables.html",[22,1.019,30,1.895,37,2.979,40,0.016,74,4.551,75,3.425,116,1.546,123,0.013,124,0.013,161,4.047,283,2.848,322,2.293,342,2.568,351,2.408,507,5.547,508,5.547,1317,3.701,1321,4.511,1322,6.413,1323,5.215,1324,6.413,1325,6.413,1326,6.945,1327,6.413,1328,5.215,1329,5.215,1330,5.215,1331,5.215,1332,5.215,1333,4.511,1334,5.215,1335,5.215,1336,5.215]],["title/additional-documentation/getting-started.html",[243,0.495,614,1.999,615,2.284,996,0.623]],["body/additional-documentation/getting-started.html",[40,0.014,123,0.014,124,0.014,614,4.05,615,4.628,876,2.686,1157,4.012,1203,3.309,1337,4.742,1338,6.11]],["title/additional-documentation/preserving-state-(like-the-requested-url).html",[212,0.712,243,0.403,298,1.187,996,0.507,1339,2.449,1340,1.859]],["body/additional-documentation/preserving-state-(like-the-requested-url).html",[3,1.09,40,0.016,43,1.239,123,0.014,124,0.014,212,1.722,261,2.561,298,3.054,311,2.829,666,2.333,1182,4.133,1226,4.52,1339,5.038,1340,4.501,1341,5.824,1342,5.824,1343,4.133,1344,4.52,1345,5.824,1346,5.824]],["title/additional-documentation/refreshing-a-token.html",[223,0.874,243,0.495,996,0.623,1068,1.999]],["body/additional-documentation/refreshing-a-token.html",[15,1.944,17,2.299,37,1.895,38,1.537,40,0.012,123,0.012,124,0.012,127,3.403,167,2.72,176,1.525,195,3.673,202,2.424,223,1.816,258,1.591,267,2.233,268,1.893,276,1.462,282,1.969,283,1.812,299,1.985,300,1.985,301,1.895,374,1.985,375,1.462,383,1.462,568,3.108,643,2.531,657,3.598,691,3.598,797,3.359,805,3.359,806,2.899,876,2.653,1054,3.108,1067,3.108,1068,3.468,1070,4.283,1072,3.673,1111,2.899,1113,3.673,1130,3.673,1139,2.424,1143,3.108,1222,2.424,1235,3.963,1265,3.673,1347,3.108,1348,3.359,1349,4.094,1350,4.094,1351,3.673,1352,5.22,1353,3.359,1354,4.094,1355,3.673,1356,4.094,1357,4.094,1358,4.094,1359,3.359,1360,3.673,1361,4.683,1362,3.673,1363,3.673,1364,4.683,1365,4.683,1366,3.673,1367,3.673,1368,2.72,1369,3.673,1370,3.359,1371,3.673,1372,3.673,1373,3.108,1374,3.673,1375,3.673,1376,3.673,1377,3.673]],["title/additional-documentation/silent-refresh.html",[243,0.495,259,1.332,282,1.031,996,0.623]],["body/additional-documentation/silent-refresh.html",[3,0.502,5,0.838,11,1.422,15,1.306,17,1.301,18,1.644,30,1.106,32,0.502,35,1.715,37,1.958,38,1.48,40,0.016,47,0.863,52,0.863,65,1.362,72,0.48,78,0.328,89,1.887,91,1.124,98,1.062,109,0.57,116,0.978,123,0.008,124,0.008,127,2.505,167,1.54,176,1.576,184,2.079,197,2.318,200,1.576,201,2.505,212,1.37,223,1.656,254,1.872,258,0.9,259,2.583,263,1.7,265,1.178,267,2.215,268,1.83,269,1.551,276,1.685,278,1.791,279,1.782,282,2.038,283,1.872,284,1.782,288,1.178,297,0.702,302,1.106,317,1.782,320,1.026,323,0.981,324,1.782,336,1.301,337,1.073,339,0.9,357,1.253,365,1.872,374,1.124,375,1.253,376,1.757,381,0.828,385,0.981,478,4.23,493,1.54,499,2.376,528,1.759,540,1.759,568,1.759,614,1.54,643,2.584,657,2.196,666,1.958,677,1.54,688,2.649,690,1.901,691,2.953,707,1.901,716,1.54,789,2.079,790,1.901,796,1.451,805,1.901,806,1.641,807,2.318,811,1.301,816,2.483,819,1.901,828,1.7,875,1.782,876,2.15,880,3.211,1001,1.901,1006,1.372,1012,1.641,1034,1.641,1054,1.759,1067,2.662,1068,2.81,1070,2.877,1095,2.953,1115,1.124,1116,1.901,1117,2.995,1120,2.649,1121,1.54,1122,1.54,1123,1.901,1124,1.641,1131,2.079,1138,1.54,1139,1.372,1140,1.641,1144,1.641,1145,1.759,1146,1.641,1147,1.372,1148,1.372,1178,1.901,1184,3.507,1188,1.54,1191,2.079,1200,1.759,1203,1.451,1219,3.146,1222,1.372,1235,2.662,1242,2.318,1243,2.318,1263,1.759,1333,2.318,1353,1.901,1359,1.901,1360,2.079,1361,3.146,1362,2.079,1363,2.079,1364,3.146,1365,3.146,1366,2.079,1367,2.079,1368,3.366,1369,2.079,1370,1.901,1371,2.079,1372,2.079,1373,1.759,1374,2.079,1375,2.079,1376,2.079,1377,2.079,1378,2.679,1379,4.054,1380,2.079,1381,3.146,1382,2.679,1383,2.679,1384,2.679,1385,2.679,1386,2.679,1387,2.679,1388,4.054,1389,5.453,1390,1.901,1391,2.318,1392,2.679,1393,2.679,1394,2.679,1395,2.679,1396,2.679,1397,3.507,1398,2.318,1399,1.54,1400,1.759,1401,2.679,1402,1.901,1403,1.901,1404,1.54,1405,2.679,1406,2.679,1407,2.679,1408,2.318,1409,4.23,1410,3.146,1411,2.318,1412,2.679,1413,2.679,1414,2.679,1415,2.679,1416,3.795,1417,2.079,1418,2.679,1419,2.679,1420,2.679,1421,2.318,1422,2.679,1423,2.679,1424,2.679,1425,2.679,1426,2.679,1427,2.679,1428,2.679,1429,2.679,1430,2.679,1431,4.054,1432,2.679,1433,4.054,1434,2.679,1435,2.318,1436,2.079,1437,3.507,1438,2.679,1439,2.679,1440,2.679,1441,2.679,1442,2.679,1443,2.679,1444,2.679,1445,2.679,1446,2.679,1447,2.679,1448,2.318,1449,2.679,1450,2.679,1451,2.079,1452,4.054,1453,2.679,1454,2.679,1455,2.679,1456,2.679,1457,2.679,1458,2.679,1459,2.079,1460,2.679,1461,2.679,1462,2.679,1463,2.679,1464,2.679,1465,2.679,1466,2.679]],["title/additional-documentation/token-refresh.html",[223,0.874,243,0.495,282,1.031,996,0.623]],["body/additional-documentation/token-refresh.html",[15,1.944,17,2.299,37,1.895,38,1.537,40,0.012,123,0.012,124,0.012,127,3.403,167,2.72,176,1.525,195,3.673,202,2.424,223,1.816,258,1.591,267,2.233,268,1.893,276,1.462,282,1.969,283,1.812,299,1.985,300,1.985,301,1.895,374,1.985,375,1.462,383,1.462,568,3.108,643,2.531,657,3.598,691,3.598,797,3.359,805,3.359,806,2.899,876,2.653,1054,3.108,1067,3.108,1068,3.468,1070,4.283,1072,3.673,1111,2.899,1113,3.673,1130,3.673,1139,2.424,1143,3.108,1222,2.424,1235,3.963,1265,3.673,1347,3.108,1348,3.359,1349,4.094,1350,4.094,1351,3.673,1352,5.22,1353,3.359,1354,4.094,1355,3.673,1356,4.094,1357,4.094,1358,4.094,1359,3.359,1360,3.673,1361,4.683,1362,3.673,1363,3.673,1364,4.683,1365,4.683,1366,3.673,1367,3.673,1368,2.72,1369,3.673,1370,3.359,1371,3.673,1372,3.673,1373,3.108,1374,3.673,1375,3.673,1376,3.673,1377,3.673]],["title/additional-documentation/working-with-httpinterceptors.html",[243,0.495,896,3.009,996,0.623,1467,3.478]],["body/additional-documentation/working-with-httpinterceptors.html",[0,0.291,10,0.896,14,1.543,18,1.678,26,0.667,30,0.973,40,0.016,43,1.062,56,3.278,65,1.198,66,1.829,68,2.951,72,1.253,77,2.704,78,0.612,98,1.307,109,1.488,123,0.01,124,0.01,134,1.543,135,1.149,158,2.5,169,2.53,170,4.983,174,1.826,176,1.609,177,3.084,178,4.025,179,3.084,180,3.058,182,3.084,183,4.318,184,2.767,185,4.318,187,3.084,188,3.084,189,4.983,190,1.931,199,4.471,200,1.856,201,3.366,202,1.826,203,2.767,204,3.278,205,3.084,206,1.428,209,3.084,210,3.084,212,0.896,213,3.084,214,3.084,215,3.084,216,3.084,217,5.399,218,4.099,219,3.084,221,3.084,223,1.448,236,3.084,237,4.318,239,3.084,253,1.678,269,1.42,276,1.102,283,1.911,297,0.934,301,1.428,302,0.973,320,1.365,323,1.306,325,1.646,326,1.495,345,2.307,503,2.341,520,2.53,523,3.543,529,3.543,530,2.53,534,2.767,535,3.875,701,3.084,828,1.495,832,3.084,995,3.084,997,1.732,998,1.306,1006,1.826,1046,3.084,1047,2.767,1105,2.767,1131,2.767,1135,2.53,1178,2.53,1186,4.318,1187,3.084,1188,2.049,1189,2.767,1353,2.53,1408,3.084,1417,2.767,1468,3.565,1469,3.565,1470,3.565,1471,3.084,1472,3.084,1473,3.565,1474,3.565,1475,3.565,1476,3.565,1477,3.565,1478,3.565,1479,3.565,1480,3.565,1481,3.565,1482,4.318,1483,2.341,1484,3.565,1485,3.565,1486,3.565,1487,3.565,1488,3.565,1489,3.565,1490,3.565,1491,3.565,1492,3.084,1493,3.565,1494,2.767,1495,3.565,1496,3.565,1497,3.565,1498,3.565,1499,3.565,1500,3.875,1501,3.565,1502,3.565,1503,3.565,1504,3.565,1505,3.565]],["title/additional-documentation/callback-after-login.html",[243,0.495,666,1.393,996,0.623,1506,2.7]],["body/additional-documentation/callback-after-login.html",[40,0.016,52,2.156,65,1.881,66,2.05,123,0.013,124,0.013,310,2.249,324,2.46,360,2.718,666,2.68,789,4.343,1027,3.674,1172,3.971,1188,3.216,1293,4.84,1340,3.674,1343,3.971,1344,5.194,1506,5.194,1507,4.343,1508,5.596,1509,5.596,1510,5.596,1511,5.596,1512,5.596,1513,5.596]],["title/additional-documentation/popup-based-login.html",[243,0.445,263,1.309,666,1.25,844,2.215,996,0.559]],["body/additional-documentation/popup-based-login.html",[17,2.601,18,2.191,40,0.015,123,0.013,124,0.013,256,1.879,259,2.69,263,2.733,282,1.587,301,2.145,319,2.733,343,2.601,347,1.879,376,1.725,700,4.632,784,4.156,817,3.078,841,4.156,876,2.866,880,4.28,899,3.8,972,4.632,986,3.516,997,2.601,998,1.962,1034,3.28,1054,3.516,1109,4.156,1115,2.246,1146,3.28,1222,3.339,1380,4.156,1411,4.632,1435,4.632,1459,4.156,1514,4.632,1515,5.355,1516,4.632,1517,5.355,1518,5.355,1519,5.355,1520,5.355,1521,4.156,1522,5.355,1523,5.355,1524,5.355,1525,4.156,1526,5.355]],["title/additional-documentation/custom-query-parameters.html",[39,0.888,243,0.445,253,1.049,317,1.373,996,0.559]],["body/additional-documentation/custom-query-parameters.html",[35,2.067,39,1.676,40,0.015,123,0.014,124,0.014,253,2.32,268,1.543,269,1.676,317,2.591,643,2.471,884,4.182,1368,3.387,1527,5.098,1528,5.893,1529,5.893,1530,5.893,1531,5.893,1532,5.893,1533,5.893,1534,5.893]],["title/additional-documentation/events.html",[243,0.559,996,0.704,1535,3.048]],["body/additional-documentation/events.html",[5,0.744,18,1.459,30,1.185,38,1.004,40,0.016,65,1.459,68,2.224,72,0.778,84,2.495,89,1.399,123,0.011,124,0.011,201,2.224,204,3.747,223,1.091,227,2.495,244,2.004,245,2.004,259,2.185,268,1.137,282,1.889,287,2.635,288,1.909,297,1.494,298,2.393,302,1.185,312,1.909,322,1.909,381,1.341,431,3.495,442,2.659,444,2.659,447,2.659,454,2.659,455,2.659,459,2.659,475,3.755,643,1.821,657,2.351,691,2.351,693,3.081,716,2.495,796,3.091,816,2.659,820,3.369,828,1.821,833,2.851,844,3.081,978,6.085,986,2.851,998,2.091,1012,3.495,1013,3.495,1073,2.659,1188,2.495,1240,3.081,1340,3.747,1351,4.429,1410,3.369,1417,3.369,1436,3.369,1535,5.604,1536,4.341,1537,4.341,1538,4.341,1539,3.755,1540,4.341,1541,4.341,1542,3.755,1543,3.755,1544,4.341,1545,4.341,1546,4.341,1547,4.341,1548,4.341,1549,3.755,1550,4.341,1551,4.341,1552,4.341,1553,4.341,1554,4.341,1555,4.341,1556,5.707,1557,7.36,1558,5.707,1559,4.341,1560,4.341,1561,4.341,1562,4.341,1563,3.755,1564,4.341,1565,4.341,1566,3.755,1567,5.707,1568,5.707,1569,4.341,1570,4.341,1571,4.341,1572,4.341,1573,4.341,1574,4.341]],["title/additional-documentation/routing-with-the-hashstrategy.html",[243,0.495,845,2.131,996,0.623,1201,2.7]],["body/additional-documentation/routing-with-the-hashstrategy.html",[13,3.161,18,1.735,19,4.522,35,1.81,38,1.474,40,0.015,65,1.735,78,0.633,89,1.663,98,1.352,123,0.013,124,0.013,245,2.383,254,2.383,278,2.334,279,2.802,283,1.976,284,2.269,286,2.383,289,2.507,427,4.006,484,4.006,806,3.161,845,3.903,916,4.464,981,5.979,998,1.891,1006,2.644,1116,3.663,1135,3.663,1167,3.161,1177,3.389,1188,2.966,1196,4.464,1200,3.389,1201,4.945,1390,3.663,1437,6.244,1451,4.006,1459,4.006,1575,4.006,1576,5.161,1577,4.464,1578,6.913,1579,5.161,1580,5.161,1581,5.161,1582,5.161,1583,5.161,1584,5.161,1585,5.161,1586,5.161,1587,5.161,1588,4.006,1589,5.161]],["title/additional-documentation/adapt-id_token-validation.html",[52,1.006,243,0.445,423,1.691,996,0.559,1590,2.7]],["body/additional-documentation/adapt-id_token-validation.html",[11,1.765,12,3.927,26,0.942,32,0.942,40,0.016,52,2.021,62,3.57,63,3.57,64,3.57,65,2.108,71,4.118,72,0.902,79,1.691,84,2.891,88,3.57,116,1.213,123,0.013,124,0.013,258,2.108,297,1.317,302,1.373,322,2.212,323,1.843,326,2.63,327,3.047,339,1.691,340,2.11,344,2.444,382,1.765,383,1.554,421,3.57,423,3.397,513,3.57,515,4.352,687,3.905,828,2.11,986,3.304,998,1.843,1076,3.905,1115,2.11,1191,3.905,1215,5.304,1368,3.604,1373,3.304,1416,3.905,1494,3.905,1516,4.352,1575,3.905,1590,4.352,1591,5.031,1592,5.031,1593,5.031,1594,5.031,1595,4.352,1596,5.031,1597,4.352,1598,5.031,1599,5.031,1600,4.352,1601,5.031]],["title/additional-documentation/session-checks.html",[243,0.495,693,2.469,816,2.131,996,0.623]],["body/additional-documentation/session-checks.html",[32,0.769,38,1.435,40,0.016,72,0.736,78,0.504,89,1.773,91,1.723,98,1.076,123,0.011,124,0.011,200,1.773,223,1.383,226,3.189,253,1.381,255,1.93,259,2.375,267,1.381,268,1.441,269,1.168,273,1.996,282,2.107,297,1.076,302,1.121,310,1.381,368,1.723,375,1.269,376,1.324,381,1.7,385,1.505,460,3.37,462,1.897,499,2.673,643,1.723,677,2.361,679,2.916,687,3.189,688,1.996,691,2.98,693,5.236,699,4.759,716,3.162,793,3.554,810,3.554,811,1.996,816,3.799,819,2.916,828,1.723,875,2.913,876,2.419,880,2.698,957,2.916,998,2.016,1006,2.105,1013,2.517,1034,2.517,1067,2.698,1073,3.37,1076,3.189,1080,2.517,1095,2.225,1109,3.189,1111,3.799,1115,1.723,1117,3.799,1120,2.98,1121,2.361,1124,2.517,1136,3.554,1147,2.105,1148,2.105,1156,2.698,1177,2.698,1182,2.916,1214,3.554,1222,2.818,1302,3.554,1348,2.916,1368,2.361,1373,3.613,1397,3.554,1399,2.361,1400,2.698,1404,2.361,1451,3.189,1492,3.554,1535,3.189,1563,3.554,1577,3.554,1602,4.109,1603,4.109,1604,4.109,1605,4.109,1606,4.109,1607,4.109,1608,4.109,1609,4.109,1610,4.109,1611,4.109,1612,4.109,1613,3.189,1614,5.502,1615,4.109,1616,5.502,1617,4.109,1618,4.109,1619,4.109,1620,4.109,1621,4.109,1622,4.109,1623,4.109,1624,4.109,1625,4.109,1626,4.109,1627,4.109,1628,4.109]],["title/additional-documentation/server-side-rendering.html",[200,1.006,243,0.445,340,1.309,996,0.559,1629,2.7]],["body/additional-documentation/server-side-rendering.html",[40,0.014,123,0.014,124,0.014,200,2.344,255,2.037,340,3.05,781,5.023,809,3.557,997,2.821,998,2.127,1004,4.507,1005,4.507,1483,3.813,1500,4.507,1514,5.023,1629,6.292,1630,5.807,1631,5.807,1632,5.023,1633,5.807,1634,5.807,1635,5.807,1636,5.807]],["title/additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html",[243,0.315,268,0.58,382,0.777,383,0.684,643,0.928,996,0.397,998,0.811,1115,0.928,1263,1.454]],["body/additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html",[0,0.22,11,1.526,15,1.402,18,1.921,40,0.016,42,0.85,78,0.533,116,1.049,123,0.011,124,0.011,176,1.841,200,1.841,212,1.703,246,1.462,256,1.526,268,1.139,269,1.625,276,1.344,278,1.594,312,1.913,320,1.666,337,1.742,339,1.462,341,1.913,342,1.742,357,1.972,366,1.742,375,1.344,376,2.056,381,1.344,382,2.005,383,1.766,462,2.009,493,3.284,499,2.113,528,2.857,643,1.824,655,3.088,666,2.556,688,3.1,809,2.665,811,2.113,875,2.513,876,1.913,879,2.5,994,3.088,996,0.78,997,2.113,998,1.594,1012,2.665,1013,2.665,1079,3.376,1080,2.665,1082,3.763,1087,3.376,1095,3.456,1106,2.665,1115,2.397,1120,2.356,1121,2.5,1122,2.5,1138,2.5,1139,2.228,1144,3.5,1147,2.228,1148,2.228,1157,2.857,1167,2.665,1172,3.088,1179,3.376,1203,2.356,1222,2.228,1263,2.857,1343,3.088,1347,2.857,1381,3.376,1390,3.088,1399,3.284,1404,2.5,1521,3.376,1613,3.376,1637,3.763,1638,3.088,1639,3.088,1640,4.351,1641,4.351,1642,3.376,1643,3.088,1644,3.376,1645,3.763,1646,3.763,1647,3.763,1648,4.351,1649,4.351,1650,4.351,1651,3.763,1652,3.763,1653,4.351]],["title/additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html",[38,0.512,243,0.315,357,0.684,382,0.777,383,0.684,423,1.199,499,1.076,996,0.397,1654,2.214]],["body/additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html",[18,1.446,32,1.062,40,0.016,67,2.473,72,0.771,78,0.528,91,1.805,98,1.127,123,0.011,124,0.011,200,1.387,212,1.763,258,1.446,261,1.892,265,1.892,269,1.805,278,1.577,283,1.648,284,2.495,297,1.127,302,1.548,323,1.577,339,1.446,357,2.167,368,1.805,375,1.753,376,1.387,381,1.961,382,2.527,383,2.226,385,2.325,423,3.438,499,3.278,513,4.027,666,1.724,677,2.473,688,2.091,811,2.091,828,1.805,875,2.495,884,4.505,973,3.34,986,2.826,998,1.577,1073,3.888,1095,3.438,1117,3.888,1120,2.331,1121,2.473,1122,2.473,1123,3.054,1124,2.636,1138,2.473,1139,2.204,1140,2.636,1145,2.826,1146,2.636,1147,2.204,1148,2.204,1197,3.723,1203,2.331,1391,3.723,1399,2.473,1400,2.826,1402,3.054,1403,3.054,1404,2.473,1549,3.723,1655,6.348,1656,4.304,1657,5.838,1658,4.304,1659,4.908,1660,4.304,1661,4.304,1662,4.304,1663,4.304,1664,4.304,1665,4.304,1666,4.304,1667,4.304,1668,4.304,1669,4.304,1670,4.304,1671,4.304,1672,3.723,1673,3.723,1674,4.304]],["title/additional-documentation/using-systemjs.html",[38,0.805,243,0.495,996,0.623,1675,3.009]],["body/additional-documentation/using-systemjs.html",[38,1.239,40,0.016,123,0.013,124,0.013,194,2.473,297,1.915,302,1.917,493,3.078,648,4.626,741,4.156,828,3.066,899,4.626,1013,3.28,1074,4.632,1410,4.156,1675,6.078,1676,5.355,1677,5.355,1678,5.355,1679,5.355,1680,6.518,1681,6.518,1682,5.355,1683,5.355,1684,5.355,1685,5.355,1686,5.355,1687,5.355,1688,5.355,1689,5.355]],["title/additional-documentation/using-implicit-flow.html",[38,0.722,243,0.445,268,0.818,643,1.309,996,0.559]],["body/additional-documentation/using-implicit-flow.html",[0,0.259,26,1.099,32,0.691,38,1.183,40,0.016,41,1.396,47,1.189,72,1.265,78,0.72,91,1.548,109,1.088,116,0.89,123,0.01,124,0.01,135,1.648,158,1.478,176,2.274,200,1.189,202,1.89,212,1.285,256,1.295,258,1.24,267,1.24,268,1.742,269,1.049,276,1.14,278,1.352,297,1.742,299,1.548,300,1.548,302,1.879,339,1.24,347,1.295,356,2.249,357,1.58,375,1.58,376,1.189,381,1.14,385,1.352,462,1.704,493,2.121,499,1.793,527,2.864,643,2.461,666,2.827,677,2.121,688,1.793,707,2.619,811,1.793,828,2.657,875,2.249,879,2.121,957,2.619,996,0.916,998,1.352,1079,2.864,1091,3.192,1095,3.179,1106,2.26,1107,2.864,1115,2.145,1117,3.881,1120,1.999,1121,2.121,1122,2.121,1124,2.26,1138,2.121,1139,1.89,1140,2.26,1145,2.423,1146,2.26,1147,1.89,1148,1.89,1171,2.423,1176,3.192,1177,2.423,1200,2.423,1215,3.969,1217,3.192,1219,3.969,1226,2.864,1235,2.423,1359,2.619,1399,2.121,1400,2.423,1402,2.619,1403,2.619,1404,2.121,1482,3.192,1483,2.423,1543,3.192,1575,2.864,1588,2.864,1597,3.192,1638,4.497,1639,3.629,1690,3.192,1691,3.69,1692,3.69,1693,3.69,1694,3.192,1695,3.69,1696,3.69,1697,3.69,1698,3.69,1699,5.114,1700,3.69,1701,3.69,1702,3.69,1703,3.69,1704,3.69,1705,3.192,1706,3.69,1707,3.69,1708,3.192,1709,3.192,1710,3.69,1711,5.114,1712,3.69,1713,3.69,1714,3.69]],["title/additional-documentation/using-password-flow.html",[38,0.722,243,0.445,268,0.818,996,0.559,1065,2.423]],["body/additional-documentation/using-password-flow.html",[0,0.203,3,0.496,11,0.929,17,1.951,18,1.958,38,1.586,40,0.016,41,0.722,42,0.517,45,0.929,52,0.853,78,0.493,109,0.563,116,0.638,123,0.008,124,0.008,165,2.054,174,1.356,176,1.746,199,3.118,200,1.976,202,1.356,212,1.22,223,1.601,246,1.35,255,2.151,256,0.929,258,0.89,264,1.222,267,0.89,268,1.871,269,1.657,276,0.818,282,1.191,302,1.096,308,1.685,310,0.89,319,1.11,320,1.538,337,1.06,339,2.304,341,1.164,342,1.06,350,2.502,356,2.383,357,1.8,366,1.06,375,1.5,376,2.115,381,1.241,382,1.901,383,1.674,424,2.29,427,2.054,643,1.11,657,1.434,666,1.609,688,2.979,796,1.434,797,2.851,809,2.46,811,1.951,833,3.188,835,3.475,844,1.879,845,1.621,851,3.475,852,2.851,875,2.135,876,2.562,927,3.475,957,1.879,997,2.83,998,1.778,1012,1.621,1027,1.738,1044,3.475,1063,3.118,1065,5.32,1068,1.521,1073,2.46,1088,3.475,1095,3.155,1106,2.973,1111,2.46,1115,2.273,1122,2.309,1127,2.29,1128,5.93,1135,2.851,1137,3.475,1138,2.309,1139,2.058,1143,3.188,1147,2.487,1148,2.487,1160,2.29,1167,1.621,1171,1.738,1172,3.445,1178,1.879,1188,1.521,1200,1.738,1222,2.776,1263,3.188,1340,1.738,1368,2.309,1370,1.879,1380,3.118,1390,1.879,1399,2.79,1404,2.309,1409,2.29,1416,2.054,1448,2.29,1483,1.738,1494,2.054,1507,3.767,1542,2.29,1595,2.29,1600,3.475,1613,3.118,1638,2.851,1639,2.851,1643,2.851,1644,3.118,1645,2.29,1646,2.29,1647,2.29,1690,2.29,1694,2.29,1708,3.475,1709,3.475,1715,2.647,1716,2.647,1717,2.647,1718,2.647,1719,2.647,1720,2.647,1721,2.647,1722,2.647,1723,2.647,1724,2.29,1725,2.29,1726,2.647,1727,2.647,1728,2.647,1729,4.017,1730,2.647,1731,5.419,1732,4.017,1733,4.017,1734,4.017,1735,4.017,1736,4.017,1737,4.017,1738,2.29,1739,2.647,1740,2.647,1741,2.647,1742,2.647,1743,2.647,1744,2.647,1745,2.647,1746,2.647,1747,2.647,1748,4.017,1749,2.647,1750,2.647,1751,2.647,1752,2.647,1753,2.647,1754,4.017,1755,2.647,1756,4.017,1757,2.647,1758,2.647,1759,2.647,1760,2.647,1761,2.647,1762,2.647]],["title/additional-documentation/configure-custom-oauthstorage.html",[243,0.445,253,1.049,345,1.25,996,0.559,1115,1.309]],["body/additional-documentation/configure-custom-oauthstorage.html",[0,0.303,18,2.01,38,1.384,40,0.016,72,1.072,78,0.733,109,0.993,123,0.012,124,0.012,127,2.39,190,2.527,253,2.218,256,1.637,283,1.786,297,1.222,302,1.273,308,2.508,320,1.786,323,1.709,337,2.788,341,3.237,342,2.395,345,2.788,485,3.064,495,3.621,499,3.206,510,3.621,511,3.621,513,3.311,514,4.036,540,3.064,690,4.244,790,3.311,828,1.957,937,3.621,969,3.311,997,2.267,998,1.709,1006,2.39,1034,2.858,1103,5.173,1104,5.709,1105,3.621,1106,3.663,1107,3.621,1108,5.173,1115,1.957,1116,4.684,1203,2.527,1240,3.311,1436,3.621,1500,3.621,1763,4.666,1764,4.666,1765,4.036,1766,4.666,1767,4.666,1768,5.98,1769,4.666]],["title/additional-documentation/manually-skipping-login-form.html",[243,0.403,666,1.134,996,0.507,1167,1.734,1171,1.859,1770,2.449]],["body/additional-documentation/manually-skipping-login-form.html",[15,1.479,18,1.989,38,1.062,40,0.016,89,1.907,109,1.394,116,1.107,123,0.012,124,0.012,200,1.479,212,1.154,223,1.487,226,3.563,241,2.733,256,1.61,268,1.202,276,1.418,288,2.019,308,1.925,325,2.12,357,1.418,376,1.479,655,3.258,666,1.839,691,2.487,783,3.971,796,2.487,816,2.812,831,3.971,833,3.015,836,3.971,875,2.019,879,2.638,996,0.823,1006,2.352,1012,2.812,1027,3.015,1034,2.812,1063,3.563,1111,2.812,1126,3.971,1140,2.812,1167,2.812,1171,3.015,1177,3.015,1182,3.258,1344,3.563,1506,3.563,1539,3.971,1566,3.971,1588,3.563,1632,3.971,1705,3.971,1770,3.971,1771,5.918,1772,4.591,1773,4.591,1774,4.591,1775,5.918,1776,4.591,1777,5.918,1778,4.591,1779,4.591,1780,4.591,1781,4.591,1782,4.591,1783,4.591,1784,4.591,1785,4.591,1786,4.591,1787,4.591,1788,4.591,1789,4.591,1790,4.591,1791,4.591,1792,4.591]],["title/additional-documentation/original-config-api.html",[243,0.445,493,1.794,996,0.559,1144,1.912,1347,2.05]],["body/additional-documentation/original-config-api.html",[0,0.206,15,1.31,18,1.367,32,0.761,37,1.629,40,0.016,41,1.11,78,0.499,116,0.981,118,2.67,123,0.011,124,0.011,174,2.083,176,1.761,200,1.988,212,1.551,223,1.022,246,1.367,258,1.367,269,1.554,276,1.688,278,1.49,297,1.065,302,1.11,312,1.788,320,2.092,339,1.367,357,1.907,375,1.257,376,2.126,381,1.257,382,2.314,383,2.039,385,1.49,423,3.342,493,3.792,499,1.976,528,2.67,657,2.203,666,2.471,688,2.998,796,2.203,809,3.347,811,1.976,820,3.156,845,2.491,875,1.788,876,1.788,879,2.337,994,2.886,996,0.729,998,1.49,1013,2.491,1017,3.518,1027,2.67,1087,3.156,1095,3.342,1106,3.347,1115,1.705,1120,2.203,1121,2.337,1122,2.337,1123,2.886,1138,2.337,1139,2.083,1140,2.491,1144,4.041,1145,2.67,1146,2.491,1147,2.083,1148,2.083,1157,2.67,1179,3.156,1202,3.518,1203,2.203,1222,2.083,1337,3.156,1343,2.886,1347,3.588,1348,2.886,1381,4.241,1399,2.337,1400,2.67,1402,2.886,1403,2.886,1404,2.337,1471,3.518,1472,3.518,1507,3.156,1521,3.156,1637,3.518,1638,2.886,1639,2.886,1642,3.156,1643,2.886,1644,3.156,1651,3.518,1652,3.518,1657,4.727,1659,3.518,1672,3.518,1673,3.518,1724,3.518,1725,3.518,1738,3.518,1793,4.067,1794,4.067,1795,4.067,1796,4.067,1797,4.067,1798,4.067,1799,4.067,1800,4.067,1801,4.067,1802,4.067,1803,4.067]],["title/additional-documentation/authorization-servers.html",[243,0.495,996,0.623,1166,2.7,1804,3.009]],["body/additional-documentation/authorization-servers.html",[38,1.347,40,0.014,123,0.014,124,0.014,297,1.525,310,2.304,368,2.443,381,1.8,679,4.133,688,2.829,817,3.347,1062,5.038,1075,5.038,1166,5.652,1355,4.52,1398,5.038,1483,3.825,1525,4.52,1765,5.038,1805,5.824,1806,6.854,1807,5.824,1808,5.824,1809,5.824]],["title/additional-documentation/authorization-servers/using-identity-server.html",[38,0.722,200,1.006,243,0.445,875,1.373,996,0.559]],["body/additional-documentation/authorization-servers/using-identity-server.html",[38,1.409,40,0.014,123,0.014,124,0.014,200,2.267,310,2.047,817,3.501,875,3.093,997,2.959,1085,4.323,1156,4]],["title/additional-documentation/authorization-servers/using-keycloak.html",[38,0.805,243,0.495,963,2.7,996,0.623]],["body/additional-documentation/authorization-servers/using-keycloak.html",[38,1.418,40,0.014,123,0.014,124,0.014,310,2.06,817,3.522,963,5.479,997,2.977,1085,4.349,1156,4.024]],["title/additional-documentation/authorization-servers/auth0.html",[243,0.559,966,3.048,996,0.704]],["body/additional-documentation/authorization-servers/auth0.html",[5,0.775,18,1.969,38,1.504,39,1.285,40,0.016,41,1.233,43,0.961,72,0.81,78,0.554,91,1.895,98,1.183,123,0.012,124,0.012,223,1.633,267,1.969,269,1.285,282,1.736,297,1.534,302,1.598,310,1.519,319,1.895,323,1.655,339,1.519,357,1.396,366,2.346,375,1.396,381,1.396,385,1.655,462,2.705,500,5.067,614,2.597,677,2.597,682,5.067,756,3.506,796,2.447,811,2.195,812,3.506,817,2.597,828,2.456,852,4.157,876,1.987,879,3.366,884,3.206,966,5.337,969,3.206,996,0.81,997,2.195,1006,2.314,1008,3.506,1068,2.597,1073,3.588,1080,2.767,1085,3.206,1115,2.456,1117,3.981,1120,2.447,1124,2.767,1143,2.967,1144,2.767,1147,2.314,1148,2.314,1156,2.967,1157,2.967,1189,3.506,1337,3.506,1421,3.908,1525,4.546,1527,3.908,1642,3.506,1643,3.206,1804,3.908,1810,4.518,1811,4.518,1812,4.518,1813,5.857,1814,4.518,1815,4.518,1816,4.518,1817,4.518,1818,4.518,1819,4.518,1820,4.518,1821,4.518,1822,4.518,1823,5.857,1824,5.857,1825,4.518,1826,4.518,1827,4.518,1828,4.518,1829,4.518]],["title/additional-documentation/authorization-servers/azure-ad-(active-directory).html",[243,0.403,996,0.507,999,2.198,1000,2.198,1001,2.009,1002,2.198]],["body/additional-documentation/authorization-servers/azure-ad-(active-directory).html",[38,1.599,40,0.014,123,0.014,124,0.014,243,0.842,994,4.195,998,2.165,999,5.687,1000,4.587,1001,4.195,1002,5.365,1003,5.113,1004,5.365,1005,5.365,1006,3.028,1007,5.113,1008,4.587]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{},"additional-documentation/authorization-servers/auth0.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["0",{"_index":167,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"injectables/UrlHelperService.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["0.1.3",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["0.1.4",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["0.33",{"_index":1375,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["0.43.0",{"_index":951,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":1372,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["026dcb3",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["07bb62d",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["0c0a4a7",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["0f03d39",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":568,"title":{},"body":{"injectables/UrlHelperService.html":{},"overview.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["1.0",{"_index":1606,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["1.3.0",{"_index":939,"title":{},"body":{"dependencies.html":{}}}],["1.4.3",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["1.5.1",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":993,"title":{},"body":{"index.html":{}}}],["10.0.0",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["10.0.3",{"_index":935,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["10.3.0",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["10.x",{"_index":1019,"title":{},"body":{"index.html":{}}}],["1061",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":842,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["12",{"_index":980,"title":{},"body":{"index.html":{}}}],["12.0.0",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["12.x",{"_index":1018,"title":{},"body":{"index.html":{}}}],["13",{"_index":1014,"title":{},"body":{"index.html":{}}}],["13.0.0",{"_index":1315,"title":{},"body":{"properties.html":{}}}],["13.0.1",{"_index":922,"title":{},"body":{"dependencies.html":{}}}],["13.x",{"_index":1015,"title":{},"body":{"index.html":{}}}],["132c624",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["169d749",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["1816e7b",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":1314,"title":{},"body":{"overview.html":{}}}],["1_0.html#tokenendpoint",{"_index":370,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["1_0.html#userinfo",{"_index":377,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["1cae011",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":102,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{}}}],["2.0",{"_index":1113,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["2.0.0",{"_index":949,"title":{},"body":{"dependencies.html":{}}}],["2.1",{"_index":957,"title":{},"body":{"index.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{}}}],["2.3.0",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["2.9.2",{"_index":931,"title":{},"body":{"dependencies.html":{}}}],["2/oidc",{"_index":1205,"title":{},"body":{"index.html":{}}}],["20",{"_index":1243,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{}}}],["20.000",{"_index":1465,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["2017",{"_index":1251,"title":{},"body":{"license.html":{}}}],["2020",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["2204c5a",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["256",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["2nd",{"_index":1827,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["3.1",{"_index":1468,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["3.4.1",{"_index":938,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["31c6273",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["38c7c3f",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["3d331f2",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["3f44eca",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":810,"title":{},"body":{"changelog.html":{},"additional-documentation/session-checks.html":{}}}],["4.3",{"_index":979,"title":{},"body":{"index.html":{}}}],["4.x",{"_index":1026,"title":{},"body":{"index.html":{}}}],["401",{"_index":1476,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["403",{"_index":1477,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["40f5ae5",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["415e053",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["4202",{"_index":1098,"title":{},"body":{"index.html":{}}}],["4202]/index.html",{"_index":1099,"title":{},"body":{"index.html":{}}}],["4202]/silent",{"_index":1100,"title":{},"body":{"index.html":{}}}],["429ed2c",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["4607d55",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["4711",{"_index":1532,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["4bf8901",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["4def1c1",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["4th",{"_index":1403,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["5",{"_index":1313,"title":{},"body":{"overview.html":{}}}],["5.x",{"_index":1029,"title":{},"body":{"index.html":{}}}],["51e438a",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["58a8132",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["58c6354",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["59f65d2",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["5c5288c",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":1025,"title":{},"body":{"index.html":{}}}],["6.5.3",{"_index":944,"title":{},"body":{"dependencies.html":{}}}],["6.6.7",{"_index":946,"title":{},"body":{"dependencies.html":{}}}],["61sdfs.eu.auth0.com",{"_index":1814,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["61sdfs.eu.auth0.com/v2/logout",{"_index":1818,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["65c2b95",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["678ff95",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["687",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":1023,"title":{},"body":{"index.html":{}}}],["7.x",{"_index":1024,"title":{},"body":{"index.html":{}}}],["7009",{"_index":873,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["70fd826",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["71b705c",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["728",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["735",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["741",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":1362,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["755",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["773",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["77cb37a",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["7a15194",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["7eac8ae",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":829,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["8.0.12",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["8.0.19",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["8.x",{"_index":1022,"title":{},"body":{"index.html":{}}}],["808969225",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["825",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["84d95a7",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["8ab853b",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["8fa99ff",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":1020,"title":{},"body":{"index.html":{}}}],["9.0.0",{"_index":1234,"title":{},"body":{"index.html":{}}}],["9.1.0",{"_index":874,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["9.2",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["9.2.0",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["9.2.1",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["9.2.2",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["9.3.0",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["9.x",{"_index":1021,"title":{},"body":{"index.html":{}}}],["92ee76d",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["93902a5",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["970",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["972",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["9761bad",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["9]{3",{"_index":114,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["9e257d0",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["9e95c73",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["_throw(err",{"_index":1487,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["a021627fd9d3the",{"_index":1634,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["a05bd8a",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1203,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/original-config-api.html":{}}}],["abstract",{"_index":10,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["abstraction",{"_index":154,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["abstractvalidationhandler",{"_index":1,"title":{"classes/AbstractValidationHandler.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["accept",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["access",{"_index":833,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["access_token",{"_index":66,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{}}}],["accesstoken",{"_index":81,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["according",{"_index":871,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["account",{"_index":1811,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["acr_values_supported",{"_index":397,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["action",{"_index":1302,"title":{},"body":{"license.html":{},"additional-documentation/session-checks.html":{}}}],["activate",{"_index":1614,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["activated",{"_index":1607,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["active",{"_index":1000,"title":{"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}},"body":{"index.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["actual",{"_index":257,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ad",{"_index":1002,"title":{"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}},"body":{"index.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["adapt",{"_index":1590,"title":{"additional-documentation/adapt-id_token-validation.html":{}},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["add",{"_index":690,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["added",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["adding",{"_index":1678,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["addition",{"_index":1611,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["additional",{"_index":243,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{},"additional-documentation/authorization-servers/auth0.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["adhere",{"_index":1667,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["adjust",{"_index":1366,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["advanced",{"_index":1421,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["against",{"_index":64,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["alg",{"_index":50,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["alg.match(/^.s[0",{"_index":113,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["alg.substr(2",{"_index":120,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["algorithm",{"_index":31,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["algorithms",{"_index":156,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["aliases",{"_index":1319,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alice/alice",{"_index":1093,"title":{},"body":{"index.html":{}}}],["align",{"_index":1110,"title":{},"body":{"index.html":{}}}],["allow",{"_index":805,"title":{},"body":{"changelog.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["allowedurls",{"_index":529,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["allows",{"_index":592,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["already",{"_index":13,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["alternative",{"_index":1405,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["although",{"_index":1733,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["ambient",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["analyzing",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":1271,"title":{},"body":{"license.html":{}}}],["angular",{"_index":828,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["angular/animations",{"_index":921,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":497,"title":{},"body":{"modules/OAuthModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":190,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["angular/compiler",{"_index":923,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":135,"title":{},"body":{"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"dependencies.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["angular/elements",{"_index":924,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":925,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":926,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":929,"title":{},"body":{"dependencies.html":{}}}],["another",{"_index":1390,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["anymore",{"_index":314,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["aot",{"_index":1767,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["api",{"_index":1144,"title":{"additional-documentation/original-config-api.html":{}},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["api's",{"_index":1819,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["app",{"_index":879,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["app's",{"_index":1815,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["app.component.html",{"_index":1700,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["app/home.html",{"_index":1704,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["appcomponent",{"_index":1106,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/original-config-api.html":{}}}],["applicable",{"_index":1570,"title":{},"body":{"additional-documentation/events.html":{}}}],["application",{"_index":1219,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["applications",{"_index":1136,"title":{},"body":{"index.html":{},"additional-documentation/session-checks.html":{}}}],["appmodule",{"_index":1108,"title":{},"body":{"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["approach",{"_index":1396,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["approutermodule",{"_index":1582,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["arbitrary",{"_index":1428,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["argument",{"_index":1225,"title":{},"body":{"index.html":{}}}],["arising",{"_index":1305,"title":{},"body":{"license.html":{}}}],["array",{"_index":530,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["arraybuffer",{"_index":145,"title":{},"body":{"injectables/DefaultHashHandler.html":{}}}],["aspnetcore",{"_index":1636,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["asset",{"_index":1447,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["assets",{"_index":1450,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["associated",{"_index":1260,"title":{},"body":{"license.html":{}}}],["asstring",{"_index":97,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["assumes",{"_index":1086,"title":{},"body":{"index.html":{}}}],["at_hash",{"_index":63,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["athash",{"_index":103,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["attacks",{"_index":291,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["attempts",{"_index":1429,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["audience",{"_index":1820,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["auth",{"_index":688,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers.html":{}}}],["auth.config",{"_index":1696,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["auth0",{"_index":966,"title":{"additional-documentation/authorization-servers/auth0.html":{}},"body":{"index.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["auth0's",{"_index":1821,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["auth_config",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authcodeflowconfig",{"_index":1118,"title":{},"body":{"index.html":{}}}],["authconfig",{"_index":1117,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["authenticated",{"_index":1632,"title":{},"body":{"additional-documentation/server-side-rendering.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["authentication",{"_index":1242,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{}}}],["authorization",{"_index":1804,"title":{"additional-documentation/authorization-servers.html":{}},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["authorization_endpoint",{"_index":386,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["authorizations",{"_index":1806,"title":{},"body":{"additional-documentation/authorization-servers.html":{}}}],["authors",{"_index":1295,"title":{},"body":{"license.html":{}}}],["authstorage",{"_index":1499,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["automate",{"_index":1183,"title":{},"body":{"index.html":{}}}],["automatic",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":1067,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/session-checks.html":{}}}],["available",{"_index":1240,"title":{},"body":{"index.html":{},"modules.html":{},"additional-documentation/events.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["avoid",{"_index":289,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["awesome",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["azure",{"_index":999,"title":{"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}},"body":{"index.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["b",{"_index":165,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"additional-documentation/using-password-flow.html":{}}}],["b486546",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["b64decodeunicode",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["back",{"_index":1521,"title":{},"body":{"additional-documentation/popup-based-login.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["backend",{"_index":962,"title":{},"body":{"index.html":{}}}],["backwards",{"_index":1795,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["base",{"_index":1659,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["base64",{"_index":75,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["base64url').tostring('utf8",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base64urlencode",{"_index":74,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"miscellaneous/variables.html":{}}}],["base64urlencode(leftmosthalf",{"_index":104,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["based",{"_index":844,"title":{"additional-documentation/popup-based-login.html":{}},"body":{"changelog.html":{},"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{}}}],["bbff95b",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["bearer",{"_index":236,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["beaugrand",{"_index":1677,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["beeing",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":657,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["beginning",{"_index":1214,"title":{},"body":{"index.html":{},"additional-documentation/session-checks.html":{}}}],["behavior",{"_index":1809,"title":{},"body":{"additional-documentation/authorization-servers.html":{}}}],["below",{"_index":1730,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["best",{"_index":299,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["better",{"_index":1717,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["between",{"_index":1370,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/using-password-flow.html":{}}}],["big",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":1619,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["blocked",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["blockers",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["blog",{"_index":1004,"title":{},"body":{"index.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["bob/bob",{"_index":1092,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":206,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["bootstrap",{"_index":937,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["bootstrapping",{"_index":1159,"title":{},"body":{"index.html":{}}}],["breaking",{"_index":1209,"title":{},"body":{"index.html":{}}}],["brecht",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1309,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":927,"title":{},"body":{"dependencies.html":{},"additional-documentation/using-password-flow.html":{}}}],["browsers",{"_index":1084,"title":{},"body":{"index.html":{}}}],["buffer",{"_index":147,"title":{},"body":{"injectables/DefaultHashHandler.html":{}}}],["buffer.from(base64",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer.from(str).tostring('base64url",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bug",{"_index":621,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["bugfixes",{"_index":1043,"title":{},"body":{"index.html":{}}}],["build",{"_index":790,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["bump",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["bundle",{"_index":1032,"title":{},"body":{"index.html":{}}}],["bundling",{"_index":985,"title":{},"body":{"index.html":{}}}],["button",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["bytearray",{"_index":150,"title":{},"body":{"injectables/DefaultHashHandler.html":{}}}],["c",{"_index":1250,"title":{},"body":{"license.html":{}}}],["c2b2753",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["c799ead",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["c9a2c55",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["ca435c0",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["cae715e",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["calchash",{"_index":20,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["calchash(valuetohash",{"_index":29,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["calculates",{"_index":34,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["call",{"_index":1235,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["callback",{"_index":1506,"title":{"additional-documentation/callback-after-login.html":{}},"body":{"additional-documentation/callback-after-login.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["called",{"_index":1507,"title":{},"body":{"additional-documentation/callback-after-login.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["calling",{"_index":1182,"title":{},"body":{"index.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/session-checks.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["calls",{"_index":524,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"changelog.html":{}}}],["care",{"_index":1353,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["carlier",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["carry",{"_index":1776,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["case",{"_index":1188,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-password-flow.html":{}}}],["cases",{"_index":1416,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["catch",{"_index":1195,"title":{},"body":{"index.html":{}}}],["catch(err",{"_index":1456,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["catcherror",{"_index":192,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["catcherror(_",{"_index":229,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["change",{"_index":1210,"title":{},"body":{"index.html":{}}}],["changelog",{"_index":616,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":793,"title":{},"body":{"changelog.html":{},"additional-documentation/session-checks.html":{}}}],["charactes",{"_index":593,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["charge",{"_index":1255,"title":{},"body":{"license.html":{}}}],["check",{"_index":288,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["check_session_iframe",{"_index":391,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["checks",{"_index":816,"title":{"additional-documentation/session-checks.html":{}},"body":{"changelog.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["checkurl(url",{"_index":205,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["chore",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["chore(deps",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["chore(release",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["circular",{"_index":1491,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["cites",{"_index":1734,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["cjs",{"_index":1686,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["claim",{"_index":1298,"title":{},"body":{"license.html":{}}}],["claim_types_supported",{"_index":409,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["claims",{"_index":356,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{}}}],["claims.given_name",{"_index":1709,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{}}}],["claims_parameter_supported",{"_index":411,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["claims_supported",{"_index":410,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["claimsathash",{"_index":105,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"classes/ReceivedTokens.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/original-config-api.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"classes/ReceivedTokens.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"overview.html":{}}}],["clear",{"_index":309,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["clears",{"_index":1163,"title":{},"body":{"index.html":{}}}],["cli",{"_index":1445,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["cli.json",{"_index":1449,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["click",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":339,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["client_id",{"_index":1823,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["clientid",{"_index":1124,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["clientids",{"_index":1094,"title":{},"body":{"index.html":{}}}],["closes",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["code",{"_index":267,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["code_challenge",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["code_error",{"_index":450,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["codeflow",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["codes",{"_index":1475,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["come",{"_index":1398,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/authorization-servers.html":{}}}],["commands",{"_index":1057,"title":{},"body":{"index.html":{}}}],["commit",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["commonjs",{"_index":984,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":496,"title":{},"body":{"modules/OAuthModule.html":{}}}],["communication",{"_index":1460,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["community",{"_index":972,"title":{},"body":{"index.html":{},"additional-documentation/popup-based-login.html":{}}}],["compat",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["compatibility",{"_index":1796,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["compatible",{"_index":321,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["compensates",{"_index":1385,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["complex",{"_index":1440,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["compliant",{"_index":1805,"title":{},"body":{"additional-documentation/authorization-servers.html":{}}}],["compodoc/compodoc",{"_index":1060,"title":{},"body":{"index.html":{}}}],["component",{"_index":1638,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["components",{"_index":1237,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1278,"title":{},"body":{"license.html":{}}}],["config",{"_index":493,"title":{"additional-documentation/original-config-api.html":{}},"body":{"modules/OAuthModule.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["configuration",{"_index":1073,"title":{},"body":{"index.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["configure",{"_index":1115,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["configured",{"_index":707,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["configuring",{"_index":1359,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["connect",{"_index":368,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/authorization-servers.html":{}}}],["connection",{"_index":1306,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1229,"title":{},"body":{"index.html":{}}}],["consistent",{"_index":1672,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["console",{"_index":322,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"miscellaneous/variables.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["console.debug(\"logged",{"_index":1512,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["console.debug('given_name",{"_index":1756,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["console.debug('ok",{"_index":1762,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["console.debug('refresh",{"_index":1454,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["console.debug('state",{"_index":1345,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["console.debug('your",{"_index":1627,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["console.debug(context",{"_index":1513,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["console.error('actual",{"_index":108,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["console.error('exptected",{"_index":107,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["console.error('refresh",{"_index":1457,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["console.error(event",{"_index":1553,"title":{},"body":{"additional-documentation/events.html":{}}}],["console.log(e));or",{"_index":1545,"title":{},"body":{"additional-documentation/events.html":{}}}],["console.warn(event",{"_index":1554,"title":{},"body":{"additional-documentation/events.html":{}}}],["const",{"_index":91,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["constructor",{"_index":174,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["constructor(oauthservice",{"_index":175,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["constructor(private",{"_index":1639,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["constructor(public",{"_index":466,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["constructor(type",{"_index":436,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["contain",{"_index":1040,"title":{},"body":{"index.html":{}}}],["contains",{"_index":1588,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["context",{"_index":1509,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["contract",{"_index":1303,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1051,"title":{},"body":{"index.html":{}}}],["contributer",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["contributers",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["contribution",{"_index":1515,"title":{},"body":{"additional-documentation/popup-based-login.html":{}}}],["contributions",{"_index":1045,"title":{},"body":{"index.html":{}}}],["contributors",{"_index":1248,"title":{},"body":{"index.html":{}}}],["control",{"_index":1772,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["controls",{"_index":315,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["convenience",{"_index":1152,"title":{},"body":{"index.html":{}}}],["cookie",{"_index":1393,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["cookies",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["copied",{"_index":1444,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["copies",{"_index":1273,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1258,"title":{},"body":{"license.html":{}}}],["copying",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["copyright",{"_index":1249,"title":{},"body":{"license.html":{}}}],["core",{"_index":369,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["correctly",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["corrupted",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["cors",{"_index":1829,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["cought",{"_index":1486,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["counterparts",{"_index":1227,"title":{},"body":{"index.html":{}}}],["create",{"_index":343,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/popup-based-login.html":{}}}],["created",{"_index":1010,"title":{},"body":{"index.html":{}}}],["createdefaultlogger",{"_index":507,"title":{},"body":{"modules/OAuthModule.html":{},"miscellaneous/variables.html":{}}}],["createdefaultstorage",{"_index":508,"title":{},"body":{"modules/OAuthModule.html":{},"miscellaneous/variables.html":{}}}],["creates",{"_index":1490,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["credentials",{"_index":1751,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["credits",{"_index":958,"title":{},"body":{"index.html":{}}}],["critical",{"_index":1042,"title":{},"body":{"index.html":{}}}],["cross",{"_index":1442,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["crypto",{"_index":155,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["current",{"_index":1111,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["cust",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["custom",{"_index":253,"title":{"additional-documentation/custom-query-parameters.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["customhashfragment",{"_index":247,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["customize",{"_index":1763,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["customparameters",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["customqueryparams",{"_index":1527,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["customredirecturi",{"_index":248,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["customurlvalidation",{"_index":531,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["cycle",{"_index":1036,"title":{},"body":{"index.html":{}}}],["d",{"_index":164,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"changelog.html":{}}}],["da16494",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1299,"title":{},"body":{"license.html":{}}}],["daniel",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":350,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"additional-documentation/using-password-flow.html":{}}}],["data[key",{"_index":584,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["date",{"_index":131,"title":{},"body":{"classes/DateTimeProvider.html":{},"modules/OAuthModule.html":{},"injectables/SystemDateTimeProvider.html":{}}}],["date.now",{"_index":138,"title":{},"body":{"classes/DateTimeProvider.html":{},"injectables/SystemDateTimeProvider.html":{}}}],["datetimeprovider",{"_index":125,"title":{"classes/DateTimeProvider.html":{}},"body":{"classes/DateTimeProvider.html":{},"modules/OAuthModule.html":{},"injectables/SystemDateTimeProvider.html":{},"changelog.html":{}}}],["datetimeprovider:10",{"_index":555,"title":{},"body":{"injectables/SystemDateTimeProvider.html":{}}}],["datetimeprovider:14",{"_index":554,"title":{},"body":{"injectables/SystemDateTimeProvider.html":{}}}],["deal",{"_index":1262,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1307,"title":{},"body":{"license.html":{}}}],["debug",{"_index":474,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["debug(message",{"_index":329,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["debugging",{"_index":1541,"title":{},"body":{"additional-documentation/events.html":{}}}],["decide",{"_index":1601,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["declarations",{"_index":511,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["decodekey",{"_index":596,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodekey(k",{"_index":600,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodeuricomponent(escapedkey",{"_index":580,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["decodeuricomponent(escapedvalue",{"_index":581,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["decodeuricomponent(hash",{"_index":565,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["decodeuricomponent(k",{"_index":612,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodeuricomponent(v",{"_index":613,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodeutf8(s",{"_index":160,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["decodevalue",{"_index":597,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodevalue(v",{"_index":603,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["default",{"_index":283,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthInfoEvent.html":{},"modules/OAuthModule.html":{},"classes/OAuthSuccessEvent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["defaultextension",{"_index":1687,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["defaulthashhandler",{"_index":139,"title":{"injectables/DefaultHashHandler.html":{}},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"modules/OAuthModule.html":{}}}],["defaulthashhandler.encodeutf8(fsha256(defaulthashhandler.decodeutf8(valuetohash",{"_index":157,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["defaultoauthinterceptor",{"_index":169,"title":{"interceptors/DefaultOAuthInterceptor.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["defaults",{"_index":1401,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["define",{"_index":1446,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["defined",{"_index":32,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["defines",{"_index":303,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["deleted",{"_index":1610,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["demand",{"_index":1044,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["demands",{"_index":1127,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["demo",{"_index":811,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["demonstration",{"_index":1510,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["dep",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["dependancy",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":920,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":326,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["depending",{"_index":1154,"title":{},"body":{"index.html":{}}}],["deprecated",{"_index":1694,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{}}}],["deps",{"_index":1681,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["described",{"_index":1380,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/using-password-flow.html":{}}}],["describes",{"_index":1793,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{}}}],["design",{"_index":1759,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["details",{"_index":820,"title":{},"body":{"changelog.html":{},"additional-documentation/events.html":{},"additional-documentation/original-config-api.html":{}}}],["different",{"_index":1549,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["directed",{"_index":1789,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["directly",{"_index":1178,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-password-flow.html":{}}}],["directory",{"_index":1001,"title":{"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["disable",{"_index":286,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["disableathashcheck",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["disabled",{"_index":1561,"title":{},"body":{"additional-documentation/events.html":{}}}],["disablenoncecheck",{"_index":249,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["disableoauth2statecheck",{"_index":250,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["discovery",{"_index":382,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["discovery_document_load_error",{"_index":445,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["discovery_document_loaded",{"_index":442,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["discovery_document_validation_error",{"_index":446,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["display",{"_index":1173,"title":{},"body":{"index.html":{}}}],["display_values_supported",{"_index":408,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["displayed",{"_index":313,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["distribute",{"_index":1269,"title":{},"body":{"license.html":{}}}],["docs",{"_index":819,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{}}}],["docs(readme",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":383,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["documentation",{"_index":969,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["documentation/refreshing",{"_index":1193,"title":{},"body":{"index.html":{}}}],["documentation/using",{"_index":1207,"title":{},"body":{"index.html":{}}}],["documented",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["doesn't",{"_index":1653,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["doing",{"_index":305,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["domain",{"_index":1443,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["domains",{"_index":1665,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["don't",{"_index":1172,"title":{},"body":{"index.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["dosn't",{"_index":1799,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["draft",{"_index":1112,"title":{},"body":{"index.html":{}}}],["dummy",{"_index":1731,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["dummyclientsecret",{"_index":1137,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["during",{"_index":1436,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["dynamic",{"_index":928,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":851,"title":{},"body":{"changelog.html":{},"additional-documentation/using-password-flow.html":{}}}],["e.g",{"_index":1441,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["e.type",{"_index":226,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["e2599e0",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["e89aa6d",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":1039,"title":{},"body":{"index.html":{}}}],["ease",{"_index":1072,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["easier",{"_index":1383,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["easiest",{"_index":1493,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["edge",{"_index":1419,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["elements",{"_index":933,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":1148,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["enable",{"_index":1648,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["encode",{"_index":1236,"title":{},"body":{"index.html":{}}}],["encodekey",{"_index":598,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodekey(k",{"_index":606,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encoder",{"_index":591,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{},"dependencies.html":{}}}],["encodeuricomponent",{"_index":1224,"title":{},"body":{"index.html":{}}}],["encodeuricomponent(k",{"_index":610,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodeuricomponent(v",{"_index":611,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodevalue",{"_index":599,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodevalue(v",{"_index":608,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encounter",{"_index":1556,"title":{},"body":{"additional-documentation/events.html":{}}}],["end",{"_index":1008,"title":{},"body":{"index.html":{},"additional-documentation/authorization-servers/auth0.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["end_session_endpoint",{"_index":392,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["endpoint",{"_index":366,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["endpoints",{"_index":1657,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["endpont",{"_index":1744,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["ends",{"_index":1608,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["enforce",{"_index":1132,"title":{},"body":{"index.html":{}}}],["enhancements",{"_index":1049,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":1181,"title":{},"body":{"index.html":{}}}],["ensures",{"_index":1656,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["enter",{"_index":1715,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["enters",{"_index":1066,"title":{},"body":{"index.html":{}}}],["enum",{"_index":1573,"title":{},"body":{"additional-documentation/events.html":{}}}],["environment",{"_index":977,"title":{},"body":{"index.html":{}}}],["environments",{"_index":295,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["erazerbrecht",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["err",{"_index":536,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["err));when",{"_index":1458,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["error",{"_index":201,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"changelog.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{}}}],["error('algorithm",{"_index":117,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["error(message",{"_index":335,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["errorhandler",{"_index":177,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["errors",{"_index":1472,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/original-config-api.html":{}}}],["escapedkey",{"_index":574,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["escapedvalue",{"_index":575,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["esm",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["etc",{"_index":1104,"title":{},"body":{"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["event",{"_index":691,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["events",{"_index":1535,"title":{"additional-documentation/events.html":{}},"body":{"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["events.ts",{"_index":1574,"title":{},"body":{"additional-documentation/events.html":{}}}],["eventtype",{"_index":437,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["example",{"_index":1006,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/authorization-servers/auth0.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["examples",{"_index":1085,"title":{},"body":{"index.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["execute",{"_index":1158,"title":{},"body":{"index.html":{}}}],["existing",{"_index":1169,"title":{},"body":{"index.html":{}}}],["expected",{"_index":1562,"title":{},"body":{"additional-documentation/events.html":{}}}],["expects",{"_index":1822,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["experience",{"_index":1807,"title":{},"body":{"additional-documentation/authorization-servers.html":{}}}],["expired",{"_index":1760,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["expires",{"_index":1070,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["expires_in",{"_index":373,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["explicit",{"_index":831,"title":{},"body":{"changelog.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["explicitly",{"_index":1600,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["export",{"_index":78,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["exports",{"_index":512,"title":{},"body":{"modules/OAuthModule.html":{}}}],["express",{"_index":1286,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1769,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["extends",{"_index":137,"title":{},"body":{"classes/DateTimeProvider.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"injectables/SystemDateTimeProvider.html":{}}}],["extensions",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["extensive",{"_index":1547,"title":{},"body":{"additional-documentation/events.html":{}}}],["extraction",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["f42f943",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["f5bd96c",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["fact",{"_index":1386,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["factor",{"_index":1367,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["factories",{"_index":509,"title":{},"body":{"modules/OAuthModule.html":{}}}],["factory",{"_index":1766,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["fail",{"_index":1669,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["fails",{"_index":1654,"title":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{}}],["fall",{"_index":1520,"title":{},"body":{"additional-documentation/popup-based-login.html":{}}}],["fallback",{"_index":1439,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["false",{"_index":284,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["far",{"_index":1382,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["fast",{"_index":153,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"dependencies.html":{}}}],["fb3afe4",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["feat(oauth",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":673,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["feel",{"_index":1046,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["fetch",{"_index":1160,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["fetching",{"_index":1748,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["ff7d1d9",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":51,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["files",{"_index":1261,"title":{},"body":{"license.html":{}}}],["filter",{"_index":193,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["filter(e",{"_index":225,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["finally",{"_index":1438,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["find",{"_index":1337,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["fine",{"_index":1198,"title":{},"body":{"index.html":{}}}],["fired",{"_index":1361,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["first",{"_index":1140,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{}}}],["fitness",{"_index":1291,"title":{},"body":{"license.html":{}}}],["fix",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["fix(lib",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["fixed",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":622,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["flag",{"_index":292,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["flight",{"_index":1698,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["flow",{"_index":268,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["flow.html",{"_index":1208,"title":{},"body":{"index.html":{}}}],["flow.md",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["flows",{"_index":264,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["focusing",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["folder",{"_index":1053,"title":{},"body":{"index.html":{}}}],["followed",{"_index":271,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["following",{"_index":276,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"license.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{}}}],["follows",{"_index":1765,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/authorization-servers.html":{}}}],["for(var",{"_index":1424,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["form",{"_index":1171,"title":{"additional-documentation/manually-skipping-login-form.html":{}},"body":{"index.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["format",{"_index":1685,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["former",{"_index":1593,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["forroot",{"_index":489,"title":{},"body":{"modules/OAuthModule.html":{}}}],["forroot(config",{"_index":490,"title":{},"body":{"modules/OAuthModule.html":{}}}],["forward",{"_index":1430,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["forwards",{"_index":1165,"title":{},"body":{"index.html":{}}}],["found",{"_index":1500,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["foundation",{"_index":1114,"title":{},"body":{"index.html":{}}}],["four",{"_index":1141,"title":{},"body":{"index.html":{}}}],["fragment",{"_index":254,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["free",{"_index":1047,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["fsha256",{"_index":152,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["full",{"_index":1572,"title":{},"body":{"additional-documentation/events.html":{}}}],["function",{"_index":540,"title":{},"body":{"classes/OAuthResourceServerConfig.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["furnished",{"_index":1276,"title":{},"body":{"license.html":{}}}],["further",{"_index":1077,"title":{},"body":{"index.html":{}}}],["g",{"_index":852,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["geheim",{"_index":1737,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["geheim').then",{"_index":1758,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["geheim').then((resp",{"_index":1753,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["general",{"_index":1129,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1056,"title":{},"body":{"index.html":{}}}],["gethashfragmentparams",{"_index":558,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["gethashfragmentparams(customhashfragment",{"_index":560,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["getitem",{"_index":415,"title":{},"body":{"injectables/MemoryStorage.html":{},"classes/OAuthStorage.html":{}}}],["getitem(key",{"_index":346,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["gets",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["getting",{"_index":614,"title":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/getting-started.html":{}},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["github.com/manfredsteyer/angular",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":1461,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["go",{"_index":1420,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["gone",{"_index":1568,"title":{},"body":{"additional-documentation/events.html":{}}}],["google",{"_index":1662,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["grant",{"_index":682,"title":{},"body":{"changelog.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["grant_types_supported",{"_index":399,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["granted",{"_index":1254,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1308,"title":{},"body":{"modules.html":{}}}],["great",{"_index":1514,"title":{},"body":{"additional-documentation/popup-based-login.html":{},"additional-documentation/server-side-rendering.html":{}}}],["guard",{"_index":836,"title":{},"body":{"changelog.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["guards",{"_index":975,"title":{},"body":{"index.html":{}}}],["guide",{"_index":1338,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["guidelines",{"_index":799,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["half",{"_index":1374,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["hallo",{"_index":1711,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["handle",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["handleerror",{"_index":533,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["handleerror(err",{"_index":534,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["handler",{"_index":77,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["handler.ts",{"_index":8,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["handler.ts:12",{"_index":429,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["handler.ts:14",{"_index":151,"title":{},"body":{"injectables/DefaultHashHandler.html":{}}}],["handler.ts:22",{"_index":588,"title":{},"body":{"classes/ValidationHandler.html":{}}}],["handler.ts:27",{"_index":587,"title":{},"body":{"classes/ValidationHandler.html":{}}}],["handler.ts:34",{"_index":149,"title":{},"body":{"injectables/DefaultHashHandler.html":{}}}],["handler.ts:39",{"_index":70,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["handler.ts:42",{"_index":146,"title":{},"body":{"injectables/DefaultHashHandler.html":{}}}],["handler.ts:44",{"_index":61,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["handler.ts:5",{"_index":543,"title":{},"body":{"classes/OAuthResourceServerErrorHandler.html":{}}}],["handler.ts:67",{"_index":48,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["handler.ts:84",{"_index":33,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["handler.ts:86",{"_index":58,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["handler.ts:9",{"_index":240,"title":{},"body":{"classes/HashHandler.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{}}}],["handlers",{"_index":86,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["handling",{"_index":1470,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["hash",{"_index":35,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["hash.indexof",{"_index":566,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["hash.substr(1",{"_index":570,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["hash.substr(questionmarkposition",{"_index":569,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["hashalg",{"_index":92,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["hashhandler",{"_index":21,"title":{"classes/HashHandler.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"modules/OAuthModule.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["hashing",{"_index":959,"title":{},"body":{"index.html":{}}}],["hashlocationstrategy",{"_index":983,"title":{},"body":{"index.html":{}}}],["hashstrategy",{"_index":1201,"title":{"additional-documentation/routing-with-the-hashstrategy.html":{}},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["hasreceivedtokens",{"_index":1775,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["header",{"_index":56,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["headers",{"_index":237,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["helper",{"_index":76,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["helper.service",{"_index":502,"title":{},"body":{"modules/OAuthModule.html":{}}}],["helper.service.ts",{"_index":557,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["helper.service.ts:25",{"_index":563,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["helper.service.ts:5",{"_index":561,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["helper.ts",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hence",{"_index":1062,"title":{},"body":{"index.html":{},"additional-documentation/authorization-servers.html":{}}}],["here",{"_index":997,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["here's",{"_index":1555,"title":{},"body":{"additional-documentation/events.html":{}}}],["hereby",{"_index":1253,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":1388,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["holders",{"_index":1296,"title":{},"body":{"license.html":{}}}],["home",{"_index":1511,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["homecomponent",{"_index":1107,"title":{},"body":{"index.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["hook",{"_index":1076,"title":{},"body":{"index.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{}}}],["hooked",{"_index":87,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["html",{"_index":1433,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["http",{"_index":1473,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["http://localhost:4200",{"_index":1089,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/#/home",{"_index":1589,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["http://openid.net/specs/openid",{"_index":367,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["http://www.angular.at/api",{"_index":1189,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["http_interceptors",{"_index":498,"title":{},"body":{"modules/OAuthModule.html":{}}}],["httpclientmodule",{"_index":1103,"title":{},"body":{"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["httperrorresponse",{"_index":1496,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["httpevent",{"_index":188,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["httphandler",{"_index":185,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["httpinterceptor",{"_index":189,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["httpinterceptors",{"_index":1467,"title":{"additional-documentation/working-with-httpinterceptors.html":{}},"body":{}}],["httpmodule",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["httpparametercodec",{"_index":595,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["httprequest",{"_index":183,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["httpresponse",{"_index":535,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["https://dev",{"_index":1813,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["https://github.com/jeroenheijmans/sample",{"_index":974,"title":{},"body":{"index.html":{}}}],["https://github.com/lankaapura/angular",{"_index":1635,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["https://github.com/manfredsteyer/angular",{"_index":684,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["https://idsvr4.azurewebsites.net",{"_index":1119,"title":{},"body":{"index.html":{}}}],["https://manfredsteyer.github.io/angular",{"_index":970,"title":{},"body":{"index.html":{}}}],["https://medium.com/lankapura/angular",{"_index":1631,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["https://steyer",{"_index":1399,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["i.e",{"_index":1661,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["i=0",{"_index":1425,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["id",{"_index":357,"title":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["id_token",{"_index":52,"title":{"additional-documentation/adapt-id_token-validation.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["id_token's",{"_index":54,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["id_token_encryption_alg_values_supported",{"_index":405,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["id_token_encryption_enc_values_supported",{"_index":406,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["id_token_signing_alg_values_supported",{"_index":404,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["idclaims",{"_index":359,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ideas",{"_index":1048,"title":{},"body":{"index.html":{}}}],["identity",{"_index":875,"title":{"additional-documentation/authorization-servers/using-identity-server.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{}}}],["identityserver",{"_index":989,"title":{},"body":{"index.html":{}}}],["idsvr",{"_index":781,"title":{},"body":{"changelog.html":{},"additional-documentation/server-side-rendering.html":{}}}],["idtoken",{"_index":80,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["idtokenclaims",{"_index":83,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["idtokenclaimsjson",{"_index":362,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["idtokenexpiresat",{"_index":364,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["idtokenheader",{"_index":82,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["idtokenheaderjson",{"_index":363,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ie",{"_index":841,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/popup-based-login.html":{}}}],["iframe",{"_index":1389,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["iframes",{"_index":262,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ignores",{"_index":1828,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["implcit",{"_index":1728,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["implemantion",{"_index":1484,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["implement",{"_index":1482,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["implementation",{"_index":11,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["implementations",{"_index":344,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["implemented",{"_index":1604,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["implementing",{"_index":1217,"title":{},"body":{"index.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["implements",{"_index":14,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["implicit",{"_index":643,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{}}}],["implied",{"_index":1287,"title":{},"body":{"license.html":{}}}],["import",{"_index":72,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["important",{"_index":1142,"title":{},"body":{"index.html":{}}}],["imports",{"_index":510,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["included",{"_index":1281,"title":{},"body":{"license.html":{}}}],["includes",{"_index":304,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["including",{"_index":775,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["indeed",{"_index":1426,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1121,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["indexable",{"_index":585,"title":{},"body":{"interfaces/UserInfo.html":{}}}],["inferhashalgorithm",{"_index":25,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["inferhashalgorithm(jwtheader",{"_index":46,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["infers",{"_index":49,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/using-password-flow.html":{}}}],["info(message",{"_index":332,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["info.state",{"_index":1346,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["information",{"_index":1013,"title":{},"body":{"index.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{}}}],["informs",{"_index":1536,"title":{},"body":{"additional-documentation/events.html":{}}}],["inherited",{"_index":440,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"injectables/SystemDateTimeProvider.html":{}}}],["initial",{"_index":1437,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["initialize",{"_index":1150,"title":{},"body":{"index.html":{}}}],["initializes",{"_index":1153,"title":{},"body":{"index.html":{}}}],["initialnavigation",{"_index":1585,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["initimplicitflow",{"_index":1226,"title":{},"body":{"index.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/using-implicit-flow.html":{}}}],["initloginflow",{"_index":784,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/popup-based-login.html":{}}}],["initloginflowinpopup",{"_index":700,"title":{},"body":{"changelog.html":{},"additional-documentation/popup-based-login.html":{}}}],["inject",{"_index":1495,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["injectable",{"_index":134,"title":{"injectables/DefaultHashHandler.html":{},"injectables/MemoryStorage.html":{},"injectables/SystemDateTimeProvider.html":{},"injectables/UrlHelperService.html":{}},"body":{"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["injectables",{"_index":140,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"injectables/MemoryStorage.html":{},"injectables/SystemDateTimeProvider.html":{},"injectables/UrlHelperService.html":{},"overview.html":{}}}],["injecting",{"_index":1489,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["injection",{"_index":327,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["injectiontoken",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["injectiontoken('auth_config",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inline",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["install",{"_index":1059,"title":{},"body":{"index.html":{}}}],["installing",{"_index":1101,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1371,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["instanceof",{"_index":1552,"title":{},"body":{"additional-documentation/events.html":{}}}],["instead",{"_index":256,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["intended",{"_index":1692,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["interaction",{"_index":1395,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["intercept",{"_index":173,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["intercept(req",{"_index":182,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["intercepted",{"_index":525,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["interceptor",{"_index":168,"title":{"interceptors/DefaultOAuthInterceptor.html":{}},"body":{"index.html":{}}}],["interceptors",{"_index":170,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["interceptors/default",{"_index":505,"title":{},"body":{"modules/OAuthModule.html":{}}}],["interceptors/resource",{"_index":504,"title":{},"body":{"modules/OAuthModule.html":{}}}],["interesting",{"_index":1773,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["interface",{"_index":79,"title":{"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationParams.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["interfaces",{"_index":549,"title":{},"body":{"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationParams.html":{},"overview.html":{}}}],["internally",{"_index":281,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["introduce",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["invalid_nonce_in_state",{"_index":444,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["ionic",{"_index":1246,"title":{},"body":{"index.html":{}}}],["isn't",{"_index":424,"title":{},"body":{"classes/NullValidationHandler.html":{},"additional-documentation/using-password-flow.html":{}}}],["isresponse(str",{"_index":1423,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["issue",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["issuer",{"_index":385,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["issues",{"_index":812,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["issuing",{"_index":1387,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["ivy",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["java",{"_index":965,"title":{},"body":{"index.html":{}}}],["jeroenheijmans",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["jie",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["job",{"_index":916,"title":{},"body":{"changelog.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["js",{"_index":741,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/using-systemjs.html":{}}}],["jsrsasign",{"_index":648,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/using-systemjs.html":{}}}],["jwks",{"_index":84,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["jwks';instead",{"_index":1220,"title":{},"body":{"index.html":{}}}],["jwks_load_error",{"_index":443,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["jwks_uri",{"_index":393,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["jwksvalidationhandler",{"_index":1215,"title":{},"body":{"index.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["jwksvalidationhandler();in",{"_index":1598,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["jwt",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["jwtheader",{"_index":53,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["jwtheader['alg",{"_index":112,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["k",{"_index":602,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["keep",{"_index":1408,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["kevin",{"_index":1676,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["key",{"_index":380,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{}}}],["key.substr(0",{"_index":582,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["key.substr(1",{"_index":583,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["keycloak",{"_index":963,"title":{"additional-documentation/authorization-servers/using-keycloak.html":{}},"body":{"index.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{}}}],["keys",{"_index":1594,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["kicks",{"_index":1725,"title":{},"body":{"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["kind",{"_index":1285,"title":{},"body":{"license.html":{}}}],["known",{"_index":1384,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["known/openid",{"_index":1740,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["labat",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["labels",{"_index":1050,"title":{},"body":{"index.html":{}}}],["laing",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["later",{"_index":1595,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["leads",{"_index":1492,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/session-checks.html":{}}}],["leftmosthalf",{"_index":99,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["levels",{"_index":1550,"title":{},"body":{"additional-documentation/events.html":{}}}],["leveraging",{"_index":1575,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["liability",{"_index":1300,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1297,"title":{},"body":{"license.html":{}}}],["lib",{"_index":310,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/authorization-servers.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["library",{"_index":998,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["library's",{"_index":1670,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["license",{"_index":788,"title":{"license.html":{}},"body":{"changelog.html":{},"properties.html":{}}}],["life",{"_index":1364,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["lifetime",{"_index":1621,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["limitation",{"_index":1265,"title":{},"body":{"license.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["limited",{"_index":1288,"title":{},"body":{"license.html":{}}}],["lin",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":1448,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/using-password-flow.html":{}}}],["linjie997",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":1007,"title":{},"body":{"index.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["links",{"_index":1011,"title":{},"body":{"index.html":{}}}],["list",{"_index":1351,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/events.html":{}}}],["listed",{"_index":1480,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["listen",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["lite",{"_index":948,"title":{},"body":{"dependencies.html":{}}}],["load",{"_index":1738,"title":{},"body":{"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["loaddiscoverydocumentandlogin",{"_index":783,"title":{},"body":{"changelog.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["loaddiscoverydocumentandtrylogin",{"_index":1771,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["loaded",{"_index":1409,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/using-password-flow.html":{}}}],["loading",{"_index":1754,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["loadkeys",{"_index":85,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["loaduserprofile",{"_index":1564,"title":{},"body":{"additional-documentation/events.html":{}}}],["local",{"_index":1609,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["localhost:[4200",{"_index":1097,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":341,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["location",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["location.hash",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["location.origin",{"_index":1414,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["location.search",{"_index":1413,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["locationstrategy",{"_index":1576,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["log",{"_index":475,"title":{},"body":{"classes/OAuthLogger.html":{},"additional-documentation/events.html":{}}}],["log(message",{"_index":333,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["logged",{"_index":1392,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["loggin",{"_index":1745,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["logging",{"_index":319,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["login",{"_index":666,"title":{"additional-documentation/callback-after-login.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/manually-skipping-login-form.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{}}}],["loginhint",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["loginoptions",{"_index":241,"title":{"classes/LoginOptions.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["logoff",{"_index":1706,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["logout",{"_index":462,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["logouturl",{"_index":1817,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["logs",{"_index":1548,"title":{},"body":{"additional-documentation/events.html":{}}}],["long",{"_index":1571,"title":{},"body":{"additional-documentation/events.html":{}}}],["longer",{"_index":1546,"title":{},"body":{"additional-documentation/events.html":{}}}],["look",{"_index":994,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["lookup",{"_index":1206,"title":{},"body":{"index.html":{}}}],["lower",{"_index":1187,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["main",{"_index":1410,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/using-systemjs.html":{}}}],["maintain",{"_index":1671,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["major",{"_index":1038,"title":{},"body":{"index.html":{}}}],["make",{"_index":17,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/using-password-flow.html":{}}}],["making",{"_index":1526,"title":{},"body":{"additional-documentation/popup-based-login.html":{}}}],["management",{"_index":1605,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["mandatory",{"_index":1228,"title":{},"body":{"index.html":{}}}],["manfred",{"_index":907,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["manner",{"_index":266,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["manually",{"_index":1167,"title":{"additional-documentation/manually-skipping-login-form.html":{}},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["map",{"_index":194,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/using-systemjs.html":{}}}],["map(_",{"_index":231,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["mark",{"_index":274,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["matching",{"_index":124,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{},"additional-documentation/authorization-servers/auth0.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["max/geheim",{"_index":1091,"title":{},"body":{"index.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["mccloghry",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["mean",{"_index":1518,"title":{},"body":{"additional-documentation/popup-based-login.html":{}}}],["means",{"_index":1373,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{}}}],["meanwhile",{"_index":1693,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["memorystorage",{"_index":351,"title":{"injectables/MemoryStorage.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"miscellaneous/variables.html":{}}}],["mentioned",{"_index":1348,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/original-config-api.html":{}}}],["merchantability",{"_index":1290,"title":{},"body":{"license.html":{}}}],["merge",{"_index":191,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"license.html":{}}}],["mergemap",{"_index":196,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["mergemap((token",{"_index":235,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["message",{"_index":478,"title":{},"body":{"classes/OAuthLogger.html":{},"additional-documentation/silent-refresh.html":{}}}],["meta",{"_index":1680,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["method",{"_index":15,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{}}}],["methods",{"_index":23,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"injectables/SystemDateTimeProvider.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{}}}],["mind",{"_index":1131,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["minutes",{"_index":1244,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":1317,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":1316,"title":{},"body":{"properties.html":{}}}],["mode",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["moderating",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["modern",{"_index":1083,"title":{},"body":{"index.html":{}}}],["modify",{"_index":1267,"title":{},"body":{"license.html":{}}}],["module",{"_index":484,"title":{"modules/OAuthModule.html":{}},"body":{"overview.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["module.config",{"_index":203,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["module.config.ts",{"_index":519,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["module.config.ts:11",{"_index":539,"title":{},"body":{"classes/OAuthResourceServerConfig.html":{}}}],["module.config.ts:12",{"_index":542,"title":{},"body":{"classes/OAuthResourceServerConfig.html":{}}}],["module.config.ts:13",{"_index":541,"title":{},"body":{"classes/OAuthResourceServerConfig.html":{}}}],["module.config.ts:2",{"_index":522,"title":{},"body":{"classes/OAuthModuleConfig.html":{}}}],["moduleconfig",{"_index":179,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["modules",{"_index":486,"title":{"modules.html":{}},"body":{"modules/OAuthModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":494,"title":{},"body":{"modules/OAuthModule.html":{}}}],["moment",{"_index":1623,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["moos",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["more",{"_index":1012,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["moved",{"_index":1216,"title":{},"body":{"index.html":{}}}],["msec",{"_index":1464,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["much",{"_index":1030,"title":{},"body":{"index.html":{}}}],["multi",{"_index":517,"title":{},"body":{"modules/OAuthModule.html":{}}}],["multiple",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["multiplying",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":41,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["navigation",{"_index":1578,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["need",{"_index":1034,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["needed",{"_index":1126,"title":{},"body":{"index.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["needs",{"_index":1618,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["net",{"_index":990,"title":{},"body":{"index.html":{}}}],["net/.net",{"_index":961,"title":{},"body":{"index.html":{}}}],["never",{"_index":293,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["new",{"_index":116,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{}}}],["newer",{"_index":1028,"title":{},"body":{"index.html":{}}}],["newest",{"_index":1617,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["next",{"_index":184,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["next.handle(req",{"_index":217,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["next.handle(req).catch(err",{"_index":1505,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["next.handle(req).pipe(catcherror(err",{"_index":220,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["ngmodule",{"_index":495,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["ngx",{"_index":941,"title":{},"body":{"dependencies.html":{}}}],["ngzone",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["node_modules/jsrsasign/lib/jsrsasign",{"_index":1688,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["nonce",{"_index":287,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/events.html":{}}}],["noninfringement",{"_index":1294,"title":{},"body":{"license.html":{}}}],["normally",{"_index":307,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["notable",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":1222,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["notes",{"_index":1378,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["nothing",{"_index":426,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["notice",{"_index":1279,"title":{},"body":{"license.html":{}}}],["notification",{"_index":1602,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["notifications",{"_index":1615,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["notified",{"_index":1624,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["now",{"_index":129,"title":{},"body":{"classes/DateTimeProvider.html":{},"injectables/SystemDateTimeProvider.html":{},"changelog.html":{},"index.html":{}}}],["nowadays",{"_index":1202,"title":{},"body":{"index.html":{},"additional-documentation/original-config-api.html":{}}}],["npm",{"_index":1058,"title":{},"body":{"index.html":{}}}],["null",{"_index":347,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["nullvalidationhandler",{"_index":421,"title":{"classes/NullValidationHandler.html":{}},"body":{"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["number",{"_index":133,"title":{},"body":{"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["oauth",{"_index":202,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{}}}],["oauth.interceptor",{"_index":506,"title":{},"body":{"modules/OAuthModule.html":{}}}],["oauth.interceptor.ts",{"_index":172,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["oauth.interceptor.ts:11",{"_index":181,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["oauth.interceptor.ts:30",{"_index":186,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["oauth2",{"_index":297,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["oauth2/oidc",{"_index":1690,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{}}}],["oautherrorevent",{"_index":431,"title":{"classes/OAuthErrorEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"additional-documentation/events.html":{}}}],["oauthevent",{"_index":433,"title":{"classes/OAuthEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["oauthevent:29",{"_index":441,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["oauthinfoevent",{"_index":469,"title":{"classes/OAuthInfoEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["oauthlogger",{"_index":328,"title":{"classes/OAuthLogger.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["oauthmodule",{"_index":485,"title":{"modules/OAuthModule.html":{}},"body":{"modules/OAuthModule.html":{},"index.html":{},"modules.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["oauthmodule.forroot",{"_index":1105,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["oauthmoduleconfig",{"_index":180,"title":{"classes/OAuthModuleConfig.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["oauthnoopresourceservererrorhandler",{"_index":503,"title":{"classes/OAuthNoopResourceServerErrorHandler.html":{}},"body":{"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["oauthresourceserverconfig",{"_index":521,"title":{"classes/OAuthResourceServerConfig.html":{}},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["oauthresourceservererrorhandler",{"_index":178,"title":{"classes/OAuthResourceServerErrorHandler.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["oauthservice",{"_index":176,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["oauthstorage",{"_index":345,"title":{"classes/OAuthStorage.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["oauthsuccessevent",{"_index":467,"title":{"classes/OAuthSuccessEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["object",{"_index":47,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["observable",{"_index":68,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{}}}],["obtaining",{"_index":1257,"title":{},"body":{"license.html":{}}}],["occur",{"_index":1540,"title":{},"body":{"additional-documentation/events.html":{}}}],["of(athash",{"_index":110,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["of(null",{"_index":230,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/NullValidationHandler.html":{}}}],["of(this.oauthservice.getaccesstoken()).pipe(filter(token",{"_index":222,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["of(true",{"_index":430,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["officially",{"_index":992,"title":{},"body":{"index.html":{}}}],["offline_access",{"_index":1143,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["oidc",{"_index":302,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["oidc';please",{"_index":1221,"title":{},"body":{"index.html":{}}}],["oidc.module.ts",{"_index":488,"title":{},"body":{"modules/OAuthModule.html":{}}}],["oidc.module.ts:27",{"_index":492,"title":{},"body":{"modules/OAuthModule.html":{}}}],["oidc.umd.js",{"_index":1684,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["oidc/docs",{"_index":971,"title":{},"body":{"index.html":{}}}],["oidc/docs/additional",{"_index":1192,"title":{},"body":{"index.html":{}}}],["oidc/issues/728#issuecomment",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["oidc/pull/1020",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["oidc/pull/919",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["oidc/pull/935",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["oidc/pull/936",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["oidc/pull/938",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["oidc/pull/965",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["oidcdiscoverydoc",{"_index":384,"title":{"interfaces/OidcDiscoveryDoc.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ok",{"_index":1455,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["okta",{"_index":1009,"title":{},"body":{"index.html":{}}}],["older",{"_index":1017,"title":{},"body":{"index.html":{},"additional-documentation/original-config-api.html":{}}}],["one",{"_index":258,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["online",{"_index":1241,"title":{},"body":{"index.html":{}}}],["ontokenreceived",{"_index":1344,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["open",{"_index":1810,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["opened",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["opener",{"_index":1435,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/popup-based-login.html":{}}}],["openid",{"_index":381,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["opens",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["opht1tkt9e9fvqtzpbvf1thvhjrxvyvx",{"_index":1816,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["option",{"_index":699,"title":{},"body":{"changelog.html":{},"additional-documentation/session-checks.html":{}}}],["optional",{"_index":43,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["optionalparams",{"_index":330,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["options",{"_index":244,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/events.html":{}}}],["original",{"_index":1347,"title":{"additional-documentation/original-config-api.html":{}},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["originally",{"_index":1691,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["otherparam",{"_index":1533,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["otherwise",{"_index":1199,"title":{},"body":{"index.html":{},"license.html":{}}}],["out",{"_index":1080,"title":{},"body":{"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["output",{"_index":789,"title":{},"body":{"changelog.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/callback-after-login.html":{}}}],["outside",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["over",{"_index":1365,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["override",{"_index":19,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["overview",{"_index":1310,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1729,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["package",{"_index":919,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["package.json",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["packages",{"_index":1592,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["page",{"_index":996,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{},"additional-documentation/authorization-servers/auth0.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["pair",{"_index":573,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["pair.indexof",{"_index":577,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["pair.substr(0",{"_index":578,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["pair.substr(separatorindex",{"_index":579,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["param",{"_index":111,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["parameter",{"_index":884,"title":{},"body":{"changelog.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["parameters",{"_index":39,"title":{"additional-documentation/custom-query-parameters.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["params",{"_index":67,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"changelog.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["params.idtokenclaims['at_hash'].replace(/=/g",{"_index":106,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["parent",{"_index":1431,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["parse",{"_index":1652,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["parsed",{"_index":55,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["parsedidtoken",{"_index":361,"title":{"interfaces/ParsedIdToken.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["parsequerystring",{"_index":559,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["parsequerystring(querystring",{"_index":562,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["particular",{"_index":1292,"title":{},"body":{"license.html":{}}}],["pass",{"_index":261,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["passed",{"_index":36,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{}}}],["passes",{"_index":1485,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["passing",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["password",{"_index":1065,"title":{"additional-documentation/using-password-flow.html":{}},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["passwords",{"_index":594,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["path",{"_index":1197,"title":{},"body":{"index.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["pathlocationstrategy",{"_index":982,"title":{},"body":{"index.html":{}}}],["perform",{"_index":1451,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{}}}],["performs",{"_index":1577,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{}}}],["permission",{"_index":1252,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1138,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["permit",{"_index":1274,"title":{},"body":{"license.html":{}}}],["person",{"_index":1256,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1275,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":1716,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["phil",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["pingone",{"_index":1664,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["pipe",{"_index":233,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["pkce",{"_index":1061,"title":{},"body":{"index.html":{}}}],["plan",{"_index":1037,"title":{},"body":{"index.html":{}}}],["please",{"_index":876,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["pls",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["plus",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["pmccloghrylaing",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["popperjs/core",{"_index":930,"title":{},"body":{"dependencies.html":{}}}],["popup",{"_index":263,"title":{"additional-documentation/popup-based-login.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/popup-based-login.html":{}}}],["popup_blocked",{"_index":464,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["popup_closed",{"_index":463,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["portions",{"_index":1283,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1723,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["post",{"_index":1005,"title":{},"body":{"index.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["postlogoutredirecturi",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["ppanthony",{"_index":1682,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["practice",{"_index":300,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["practices",{"_index":1133,"title":{},"body":{"index.html":{}}}],["predefined",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["prefixes",{"_index":1186,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["prepared",{"_index":955,"title":{},"body":{"index.html":{}}}],["present",{"_index":275,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["preserving",{"_index":1339,"title":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["prevent",{"_index":701,"title":{},"body":{"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["preventclearhashafterlogin",{"_index":251,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["prevents",{"_index":1459,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["previously",{"_index":1783,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["private",{"_index":158,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["production",{"_index":294,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["profile",{"_index":1147,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["progressing",{"_index":1786,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["project",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["project's",{"_index":1637,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["projects/.../base64",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../events.ts",{"_index":1320,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../factories.ts",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../tokens.ts",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/lib/src/angular",{"_index":487,"title":{},"body":{"modules/OAuthModule.html":{}}}],["projects/lib/src/base64",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/lib/src/date",{"_index":126,"title":{},"body":{"classes/DateTimeProvider.html":{},"injectables/SystemDateTimeProvider.html":{}}}],["projects/lib/src/encoder.ts",{"_index":590,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/encoder.ts:10",{"_index":609,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/encoder.ts:14",{"_index":601,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/encoder.ts:18",{"_index":604,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/encoder.ts:6",{"_index":607,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/events.ts",{"_index":432,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["projects/lib/src/events.ts:28",{"_index":470,"title":{},"body":{"classes/OAuthEvent.html":{}}}],["projects/lib/src/events.ts:29",{"_index":471,"title":{},"body":{"classes/OAuthEvent.html":{}}}],["projects/lib/src/events.ts:32",{"_index":547,"title":{},"body":{"classes/OAuthSuccessEvent.html":{}}}],["projects/lib/src/events.ts:33",{"_index":548,"title":{},"body":{"classes/OAuthSuccessEvent.html":{}}}],["projects/lib/src/events.ts:38",{"_index":472,"title":{},"body":{"classes/OAuthInfoEvent.html":{}}}],["projects/lib/src/events.ts:39",{"_index":473,"title":{},"body":{"classes/OAuthInfoEvent.html":{}}}],["projects/lib/src/events.ts:44",{"_index":438,"title":{},"body":{"classes/OAuthErrorEvent.html":{}}}],["projects/lib/src/events.ts:45",{"_index":439,"title":{},"body":{"classes/OAuthErrorEvent.html":{}}}],["projects/lib/src/factories.ts",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/lib/src/interceptors/default",{"_index":171,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["projects/lib/src/interceptors/resource",{"_index":532,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["projects/lib/src/oauth",{"_index":518,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["projects/lib/src/token",{"_index":6,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["projects/lib/src/tokens.ts",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/lib/src/types.ts",{"_index":242,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["projects/lib/src/types.ts:103",{"_index":552,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/types.ts:104",{"_index":550,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/types.ts:105",{"_index":551,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/types.ts:106",{"_index":553,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/types.ts:140",{"_index":586,"title":{},"body":{"interfaces/UserInfo.html":{}}}],["projects/lib/src/types.ts:18",{"_index":252,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:28",{"_index":296,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:37",{"_index":285,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:45",{"_index":306,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:52",{"_index":277,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:62",{"_index":477,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:63",{"_index":481,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:64",{"_index":482,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:65",{"_index":483,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:66",{"_index":480,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:76",{"_index":544,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["projects/lib/src/types.ts:77",{"_index":545,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["projects/lib/src/types.ts:78",{"_index":546,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["projects/lib/src/types.ts:85",{"_index":418,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["projects/lib/src/types.ts:89",{"_index":419,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["projects/lib/src/types.ts:93",{"_index":420,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["projects/lib/src/url",{"_index":556,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["promise",{"_index":1787,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["promise(resolve",{"_index":1790,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["promise.resolve",{"_index":1777,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["properties",{"_index":246,"title":{"properties.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationParams.html":{},"properties.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["property",{"_index":1368,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-password-flow.html":{}}}],["proposes",{"_index":1349,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["protected",{"_index":24,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["provding",{"_index":1481,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["provide",{"_index":323,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["provided",{"_index":973,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["provider",{"_index":499,"title":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{"modules/OAuthModule.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/original-config-api.html":{}}}],["provider.ts",{"_index":128,"title":{},"body":{"classes/DateTimeProvider.html":{},"injectables/SystemDateTimeProvider.html":{}}}],["provider.ts:4",{"_index":132,"title":{},"body":{"classes/DateTimeProvider.html":{}}}],["provider.ts:5",{"_index":130,"title":{},"body":{"classes/DateTimeProvider.html":{}}}],["providers",{"_index":513,"title":{},"body":{"modules/OAuthModule.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["provides",{"_index":1494,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["providing",{"_index":1749,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["prs",{"_index":1041,"title":{},"body":{"index.html":{}}}],["public",{"_index":26,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["publish",{"_index":1268,"title":{},"body":{"license.html":{}}}],["published",{"_index":1557,"title":{},"body":{"additional-documentation/events.html":{}}}],["publishes",{"_index":1538,"title":{},"body":{"additional-documentation/events.html":{}}}],["pull",{"_index":877,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["purpose",{"_index":1293,"title":{},"body":{"license.html":{},"additional-documentation/callback-after-login.html":{}}}],["put",{"_index":1478,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["pwa",{"_index":1245,"title":{},"body":{"index.html":{}}}],["query",{"_index":317,"title":{"additional-documentation/custom-query-parameters.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/custom-query-parameters.html":{}}}],["querying",{"_index":1071,"title":{},"body":{"index.html":{}}}],["querystring",{"_index":272,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["querystring.split('&').reduce((data",{"_index":572,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["question",{"_index":273,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/session-checks.html":{}}}],["questionmarkposition",{"_index":567,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["quite",{"_index":1726,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["read",{"_index":311,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["reading",{"_index":1579,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["readme",{"_index":1157,"title":{},"body":{"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["readonly",{"_index":434,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["ready",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":435,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["receive",{"_index":687,"title":{},"body":{"changelog.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{}}}],["received",{"_index":65,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["receivedtokens",{"_index":358,"title":{"classes/ReceivedTokens.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["receives",{"_index":1780,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["receiving",{"_index":1801,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["recommend",{"_index":1003,"title":{},"body":{"index.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["recommended",{"_index":1204,"title":{},"body":{"index.html":{}}}],["redhat",{"_index":964,"title":{},"body":{"index.html":{}}}],["redhat's",{"_index":991,"title":{},"body":{"index.html":{}}}],["redirect",{"_index":278,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["redirected",{"_index":1064,"title":{},"body":{"index.html":{}}}],["redirecting",{"_index":1081,"title":{},"body":{"index.html":{}}}],["redirects",{"_index":1179,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["redirecturi",{"_index":677,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["redirecturis",{"_index":1096,"title":{},"body":{"index.html":{}}}],["refactor",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":282,"title":{"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["refresh.html",{"_index":880,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/session-checks.html":{}}}],["refresh.html\";please",{"_index":1407,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["refresh_token",{"_index":374,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["refresh_tokens",{"_index":1354,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["refreshed",{"_index":1569,"title":{},"body":{"additional-documentation/events.html":{}}}],["refreshes",{"_index":260,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["refreshing",{"_index":1068,"title":{"additional-documentation/refreshing-a-token.html":{}},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["refreshtoken",{"_index":1357,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["regarding",{"_index":1074,"title":{},"body":{"index.html":{},"additional-documentation/using-systemjs.html":{}}}],["regards",{"_index":1211,"title":{},"body":{"index.html":{}}}],["register",{"_index":1613,"title":{},"body":{"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["registerd",{"_index":1123,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["registered",{"_index":527,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["registration_endpoint",{"_index":394,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["related",{"_index":1471,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/original-config-api.html":{}}}],["relations",{"_index":1721,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["release",{"_index":1035,"title":{},"body":{"index.html":{}}}],["removal",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":743,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["removed",{"_index":1230,"title":{},"body":{"index.html":{}}}],["removeitem",{"_index":416,"title":{},"body":{"injectables/MemoryStorage.html":{},"classes/OAuthStorage.html":{}}}],["removeitem(key",{"_index":348,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["removing",{"_index":316,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["rendering",{"_index":1629,"title":{"additional-documentation/server-side-rendering.html":{}},"body":{"additional-documentation/server-side-rendering.html":{}}}],["replace",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["replaced",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["replacements",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["replay",{"_index":290,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["represents",{"_index":355,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["req",{"_index":187,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["req.clone",{"_index":239,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["req.headers",{"_index":1503,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["req.headers.set('authorization",{"_index":238,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["req.url.tolowercase",{"_index":213,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["request",{"_index":1139,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["request_object_signing_alg_values_supported",{"_index":407,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["requested",{"_index":1340,"title":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{}}}],["requests",{"_index":878,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["require','jsrsasign",{"_index":1689,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["requirements",{"_index":1352,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["reset",{"_index":1312,"title":{},"body":{"overview.html":{}}}],["resolve",{"_index":1788,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["resolve(true",{"_index":1792,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["resolves",{"_index":1565,"title":{},"body":{"additional-documentation/events.html":{}}}],["resource",{"_index":199,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-password-flow.html":{}}}],["resources",{"_index":967,"title":{},"body":{"index.html":{}}}],["resourceserver",{"_index":520,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["resourceservererrorhandler",{"_index":526,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["respect",{"_index":1355,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/authorization-servers.html":{}}}],["respective",{"_index":995,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["respond",{"_index":1394,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["response",{"_index":365,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/silent-refresh.html":{}}}],["response_modes_supported",{"_index":398,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["response_types",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["response_types_supported",{"_index":396,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["responsetype",{"_index":756,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["restriction",{"_index":1264,"title":{},"body":{"license.html":{}}}],["result",{"_index":1434,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["results",{"_index":123,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{},"additional-documentation/authorization-servers/auth0.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["retrieved",{"_index":1559,"title":{},"body":{"additional-documentation/events.html":{}}}],["retrieving",{"_index":280,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["return",{"_index":109,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["returned",{"_index":1427,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["returns",{"_index":45,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"injectables/SystemDateTimeProvider.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"additional-documentation/using-password-flow.html":{}}}],["returnto",{"_index":1824,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["reverse",{"_index":1231,"title":{},"body":{"index.html":{}}}],["revocation",{"_index":822,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["revocation_endpoint",{"_index":414,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["revocationendpoint",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["revoke",{"_index":823,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["revoketokenandlogout",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["rfc",{"_index":872,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rights",{"_index":1266,"title":{},"body":{"license.html":{}}}],["risk",{"_index":428,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["robin",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["roblabat",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":1581,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["rotation",{"_index":1812,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["route",{"_index":1196,"title":{},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["router",{"_index":981,"title":{},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["routermodule.forroot(app_routes",{"_index":1583,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["routes",{"_index":1580,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["routing",{"_index":845,"title":{"additional-documentation/routing-with-the-hashstrategy.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["run",{"_index":858,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["running",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["runs",{"_index":1088,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["rxjs",{"_index":73,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"dependencies.html":{}}}],["rxjs/add/operator/catch",{"_index":1498,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["rxjs/observable",{"_index":1497,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["rxjs/operators",{"_index":198,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["s",{"_index":162,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["safe",{"_index":1063,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["sake",{"_index":1794,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["same",{"_index":265,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["sample",{"_index":809,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["save",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["saveafter",{"_index":1218,"title":{},"body":{"index.html":{}}}],["saved",{"_index":1560,"title":{},"body":{"additional-documentation/events.html":{}}}],["saveimporting",{"_index":1102,"title":{},"body":{"index.html":{}}}],["scenario",{"_index":1803,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["scope",{"_index":375,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["scope/state",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["scopes_supported",{"_index":395,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["script",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["search",{"_index":1418,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["seconds",{"_index":1466,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["secret",{"_index":1128,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["section",{"_index":1200,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{}}}],["security",{"_index":301,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/popup-based-login.html":{}}}],["see",{"_index":796,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["selector",{"_index":1697,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["sell",{"_index":1272,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["send",{"_index":528,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["sendaccesstoken",{"_index":218,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["sending",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["sends",{"_index":1612,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["sense",{"_index":835,"title":{},"body":{"changelog.html":{},"additional-documentation/using-password-flow.html":{}}}],["separatorindex",{"_index":576,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["server",{"_index":200,"title":{"additional-documentation/server-side-rendering.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{}}}],["server's",{"_index":1082,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["server.azurewebsites.net/identity",{"_index":1400,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["server.azurewebsites.net/identity/.well",{"_index":1739,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["server.azurewebsites.net/identity/connect/authorize",{"_index":1641,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["server.azurewebsites.net/identity/connect/endsession",{"_index":1650,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["server.azurewebsites.net/identity/connect/token",{"_index":1743,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["server.azurewebsites.net/identity/connect/userinfo",{"_index":1747,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["server.code",{"_index":1125,"title":{},"body":{"index.html":{}}}],["servers",{"_index":1166,"title":{"additional-documentation/authorization-servers.html":{}},"body":{"index.html":{},"additional-documentation/authorization-servers.html":{}}}],["service",{"_index":204,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{}}}],["service_documentation",{"_index":412,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["session",{"_index":693,"title":{"additional-documentation/session-checks.html":{}},"body":{"changelog.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["session's",{"_index":1620,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["session_changed",{"_index":458,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["session_error",{"_index":459,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["session_state",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["session_terminated",{"_index":460,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/session-checks.html":{}}}],["session_terminated')).subscribe(e",{"_index":1626,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["session_unchanged",{"_index":461,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["sessionchecksenabled",{"_index":1616,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["sessionstorage",{"_index":342,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["set",{"_index":269,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["set('authorization",{"_index":1504,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["setitem",{"_index":417,"title":{},"body":{"injectables/MemoryStorage.html":{},"classes/OAuthStorage.html":{}}}],["setitem(key",{"_index":349,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["sets",{"_index":1523,"title":{},"body":{"additional-documentation/popup-based-login.html":{}}}],["setstorage",{"_index":1645,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["setting",{"_index":806,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["settings",{"_index":1525,"title":{},"body":{"additional-documentation/popup-based-login.html":{},"additional-documentation/authorization-servers.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["setup",{"_index":1191,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["several",{"_index":1660,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["sha",{"_index":119,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{}}}],["sha256",{"_index":122,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"dependencies.html":{}}}],["sha256(accesstoken",{"_index":96,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["shaking",{"_index":1213,"title":{},"body":{"index.html":{}}}],["shall",{"_index":1280,"title":{},"body":{"license.html":{}}}],["share",{"_index":1658,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["sharing",{"_index":1683,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["ship",{"_index":1722,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["short",{"_index":1542,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{}}}],["showdebuginformation",{"_index":1149,"title":{},"body":{"index.html":{}}}],["shown",{"_index":1156,"title":{},"body":{"index.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["shows",{"_index":1483,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/authorization-servers.html":{}}}],["side",{"_index":340,"title":{"additional-documentation/server-side-rendering.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/server-side-rendering.html":{}}}],["sign",{"_index":655,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["signature",{"_index":71,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["signs",{"_index":1603,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["silent",{"_index":259,"title":{"additional-documentation/silent-refresh.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["silent_refresh_error",{"_index":453,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["silent_refresh_timeout",{"_index":455,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["silently_refreshed",{"_index":454,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["silentrefresh",{"_index":1452,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["silentrefreshredirecturi",{"_index":1397,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{}}}],["silentrefreshtimeout",{"_index":1463,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["similar",{"_index":1727,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["simple",{"_index":336,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/silent-refresh.html":{}}}],["single",{"_index":1079,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["site",{"_index":813,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["size",{"_index":1033,"title":{},"body":{"index.html":{}}}],["sizes",{"_index":1223,"title":{},"body":{"index.html":{}}}],["skip",{"_index":427,"title":{},"body":{"classes/NullValidationHandler.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-password-flow.html":{}}}],["skipping",{"_index":1770,"title":{"additional-documentation/manually-skipping-login-form.html":{}},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["skips",{"_index":1596,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["smaller",{"_index":1031,"title":{},"body":{"index.html":{}}}],["snippet",{"_index":1543,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["software",{"_index":1259,"title":{},"body":{"license.html":{}}}],["solution",{"_index":1116,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["something",{"_index":1779,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["somevalue",{"_index":1534,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{}}}],["sources",{"_index":968,"title":{},"body":{"index.html":{}}}],["spa",{"_index":1095,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["spa's",{"_index":1122,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["spas",{"_index":1130,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["spec",{"_index":1563,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["special",{"_index":1808,"title":{},"body":{"additional-documentation/authorization-servers.html":{}}}],["specific",{"_index":1146,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["specification",{"_index":1668,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["specifies",{"_index":1350,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["specs",{"_index":1075,"title":{},"body":{"index.html":{},"additional-documentation/authorization-servers.html":{}}}],["src",{"_index":1052,"title":{},"body":{"index.html":{}}}],["standard",{"_index":797,"title":{},"body":{"changelog.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/using-password-flow.html":{}}}],["start",{"_index":1674,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["started",{"_index":615,"title":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/getting-started.html":{}},"body":{"additional-documentation/getting-started.html":{}}}],["starting",{"_index":1529,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["starts",{"_index":1695,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["startup",{"_index":1724,"title":{},"body":{"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["state",{"_index":298,"title":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/events.html":{}}}],["static",{"_index":159,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"modules/OAuthModule.html":{}}}],["status",{"_index":1474,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["steyer",{"_index":908,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["still",{"_index":1391,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["stopautomaticrefresh",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["stops",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["storage",{"_index":337,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["storagefactory",{"_index":1768,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["store",{"_index":1164,"title":{},"body":{"index.html":{}}}],["stored",{"_index":1566,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["storing",{"_index":338,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["str",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/silent-refresh.html":{}}}],["strategy",{"_index":1379,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["stream",{"_index":1539,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["strict",{"_index":1802,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["strictdiscoverydocumentvalidation",{"_index":1655,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["string",{"_index":30,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/variables.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{}}}],["strong",{"_index":1719,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["sub",{"_index":379,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["subject",{"_index":1277,"title":{},"body":{"license.html":{}}}],["subject_types_supported",{"_index":400,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["sublicense",{"_index":1270,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1282,"title":{},"body":{"license.html":{}}}],["succeeded",{"_index":1342,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["successful",{"_index":1508,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["successfully",{"_index":978,"title":{},"body":{"index.html":{},"additional-documentation/events.html":{}}}],["such",{"_index":1135,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-password-flow.html":{}}}],["sufficient",{"_index":1415,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["suited",{"_index":1718,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["summary.json",{"_index":1055,"title":{},"body":{"index.html":{}}}],["super(type",{"_index":468,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["support",{"_index":679,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/authorization-servers.html":{}}}],["supported",{"_index":118,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/original-config-api.html":{}}}],["supports",{"_index":1109,"title":{},"body":{"index.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/session-checks.html":{}}}],["sure",{"_index":1054,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/popup-based-login.html":{}}}],["switching",{"_index":1185,"title":{},"body":{"index.html":{}}}],["symbol",{"_index":270,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["system.config",{"_index":1679,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["systemdatetimeprovider",{"_index":136,"title":{"injectables/SystemDateTimeProvider.html":{}},"body":{"classes/DateTimeProvider.html":{},"modules/OAuthModule.html":{},"injectables/SystemDateTimeProvider.html":{}}}],["systemjs",{"_index":1675,"title":{"additional-documentation/using-systemjs.html":{}},"body":{"additional-documentation/using-systemjs.html":{}}}],["table",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":195,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["take(1",{"_index":234,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["takes",{"_index":1417,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{}}}],["targeting",{"_index":1519,"title":{},"body":{"additional-documentation/popup-based-login.html":{}}}],["task",{"_index":1184,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{}}}],["tasks",{"_index":1537,"title":{},"body":{"additional-documentation/events.html":{}}}],["tells",{"_index":1174,"title":{},"body":{"index.html":{}}}],["template",{"_index":1710,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["templateurl",{"_index":1699,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["tenant",{"_index":1531,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["terminated",{"_index":1628,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["tested",{"_index":976,"title":{},"body":{"index.html":{}}}],["testen",{"_index":1714,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["testing",{"_index":960,"title":{},"body":{"index.html":{}}}],["tests",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["text",{"_index":947,"title":{},"body":{"dependencies.html":{}}}],["thanks",{"_index":899,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/using-systemjs.html":{}}}],["that's",{"_index":1735,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["then(info",{"_index":1453,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["things",{"_index":1517,"title":{},"body":{"additional-documentation/popup-based-login.html":{}}}],["third",{"_index":1377,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["this.authservice.events.subscribe(event",{"_index":1551,"title":{},"body":{"additional-documentation/events.html":{}}}],["this.authstorage.getitem('access_token",{"_index":1502,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.calchash(params.accesstoken",{"_index":95,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["this.calchash(valuetohash",{"_index":121,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["this.checkurl(url",{"_index":216,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.configure",{"_index":1701,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["this.data.delete(key",{"_index":353,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["this.data.get(key",{"_index":352,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["this.data.set(key",{"_index":354,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["this.document",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["this.errorhandler.handleerror(err",{"_index":221,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.inferhashalgorithm(params.idtokenheader",{"_index":93,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["this.moduleconfig",{"_index":214,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.moduleconfig.resourceserver",{"_index":215,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.moduleconfig.resourceserver.allowedurls",{"_index":209,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.moduleconfig.resourceserver.allowedurls.find(u",{"_index":210,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.moduleconfig.resourceserver.customurlvalidation",{"_index":207,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["this.moduleconfig.resourceserver.customurlvalidation(url",{"_index":208,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["this.moduleconfig.resourceserver.sendaccesstoken",{"_index":219,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.oauthservice",{"_index":1774,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["this.oauthservice.clientid",{"_index":1643,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["this.oauthservice.configure(authcodeflowconfig",{"_index":1161,"title":{},"body":{"index.html":{}}}],["this.oauthservice.configure(authconfig",{"_index":1702,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["this.oauthservice.customqueryparams",{"_index":1530,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["this.oauthservice.dummyclientsecret",{"_index":1736,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.events(filter(e",{"_index":1781,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["this.oauthservice.events.pipe",{"_index":224,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["this.oauthservice.events.pipe(filter(e",{"_index":1625,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["this.oauthservice.events.subscribe(e",{"_index":1544,"title":{},"body":{"additional-documentation/events.html":{}}}],["this.oauthservice.fetchtokenusingpasswordflow('max",{"_index":1752,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.fetchtokenusingpasswordflowandloaduserprofile('max",{"_index":1757,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.getaccesstoken",{"_index":232,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["this.oauthservice.getidentityclaims",{"_index":1708,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.hasvalidaccesstoken",{"_index":1784,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["this.oauthservice.hasvalididtoken",{"_index":1785,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["this.oauthservice.initcodeflow();there",{"_index":1151,"title":{},"body":{"index.html":{}}}],["this.oauthservice.initimplicitflow('http://www.myurl.com/x/y/z');after",{"_index":1341,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["this.oauthservice.initloginflow",{"_index":1705,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["this.oauthservice.initloginflow();also",{"_index":1155,"title":{},"body":{"index.html":{}}}],["this.oauthservice.issuer",{"_index":1797,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["this.oauthservice.loaddiscoverydocument().then",{"_index":1798,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["this.oauthservice.loaddiscoverydocument(url).then",{"_index":1741,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.loaddiscoverydocumentandlogin",{"_index":1175,"title":{},"body":{"index.html":{}}}],["this.oauthservice.loaddiscoverydocumentandtrylogin",{"_index":1176,"title":{},"body":{"index.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["this.oauthservice.loaddiscoverydocumentandtrylogin();logging",{"_index":1162,"title":{},"body":{"index.html":{}}}],["this.oauthservice.loaduserprofile",{"_index":1755,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.loginurl",{"_index":1640,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["this.oauthservice.logout",{"_index":1707,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["this.oauthservice.logout();if",{"_index":1168,"title":{},"body":{"index.html":{}}}],["this.oauthservice.logouturl",{"_index":1649,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["this.oauthservice.redirecturi",{"_index":1642,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["this.oauthservice.refreshtoken().then",{"_index":1761,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.refreshtoken();automatically",{"_index":1358,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["this.oauthservice.revoketokenandlogout",{"_index":1825,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["this.oauthservice.revoketokenandlogout();skipping",{"_index":1170,"title":{},"body":{"index.html":{}}}],["this.oauthservice.scope",{"_index":1644,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["this.oauthservice.setstorage(sessionstorage",{"_index":1647,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.setupautomaticsilentrefresh();by",{"_index":1360,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["this.oauthservice.silentrefreshredirecturi",{"_index":1406,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["this.oauthservice.tokenendpoint",{"_index":1742,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.tokenvalidationhandler",{"_index":1597,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["this.oauthservice.trylogin",{"_index":1343,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["this.oauthservice.trylogin().then(_",{"_index":1586,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["this.oauthservice.userinfoendpoint",{"_index":1746,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.parsequerystring(hash",{"_index":571,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["this.router.navigate",{"_index":1587,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["this.window.addeventlistener('unload",{"_index":1791,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["those",{"_index":1356,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["three",{"_index":1402,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["through",{"_index":325,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["throw",{"_index":115,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["throwerror",{"_index":537,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["throwerror(err",{"_index":538,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["time",{"_index":127,"title":{},"body":{"classes/DateTimeProvider.html":{},"modules/OAuthModule.html":{},"injectables/SystemDateTimeProvider.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["timeout",{"_index":197,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/silent-refresh.html":{}}}],["timeout(this.oauthservice.config.waitfortokeninmsec",{"_index":228,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["timeoutfactor",{"_index":1369,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["timer",{"_index":1567,"title":{},"body":{"additional-documentation/events.html":{}}}],["timers",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["timespan",{"_index":1462,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["together",{"_index":1630,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["tohashstring",{"_index":142,"title":{},"body":{"injectables/DefaultHashHandler.html":{}}}],["tohashstring(buffer",{"_index":144,"title":{},"body":{"injectables/DefaultHashHandler.html":{}}}],["tohashstring2",{"_index":143,"title":{},"body":{"injectables/DefaultHashHandler.html":{}}}],["tohashstring2(bytearray",{"_index":148,"title":{},"body":{"injectables/DefaultHashHandler.html":{}}}],["token",{"_index":223,"title":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["token's",{"_index":1363,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["token(s",{"_index":312,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/events.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["token.html",{"_index":1194,"title":{},"body":{"index.html":{}}}],["token_endpoint",{"_index":387,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_endpoint_auth_methods_supported",{"_index":388,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_endpoint_auth_signing_alg_values_supported",{"_index":389,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_error",{"_index":449,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_expires",{"_index":457,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_received",{"_index":227,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["token_received')).subscribe",{"_index":1782,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["token_refresh_error",{"_index":452,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_refreshed",{"_index":451,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_revoke_error",{"_index":465,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_type",{"_index":372,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_validation_error",{"_index":456,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["tokenhash",{"_index":94,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["tokenhash.length",{"_index":101,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["tokenhash.substr(0",{"_index":100,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["tokenresponse",{"_index":371,"title":{"interfaces/TokenResponse.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["tokens",{"_index":89,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["tokensetup",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["tokenvalidator",{"_index":1591,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["tort",{"_index":1304,"title":{},"body":{"license.html":{}}}],["tosha256",{"_index":27,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["tosha256(valuetohash",{"_index":57,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["transmit",{"_index":1732,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["transmitted",{"_index":1528,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["transmitting",{"_index":1469,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["tree",{"_index":1212,"title":{},"body":{"index.html":{}}}],["tries",{"_index":1651,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["triggers",{"_index":1376,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["true",{"_index":98,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["true);the",{"_index":1826,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["trust",{"_index":1720,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["try",{"_index":1027,"title":{},"body":{"index.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{}}}],["trylogin",{"_index":245,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["trylogincodeflow",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["ts",{"_index":1646,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["tsickle",{"_index":950,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":952,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":1673,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["tutorial",{"_index":1239,"title":{},"body":{"index.html":{}}}],["tutorials",{"_index":1238,"title":{},"body":{"index.html":{}}}],["two",{"_index":1516,"title":{},"body":{"additional-documentation/popup-based-login.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["type",{"_index":42,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["typealiases",{"_index":1318,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeerror('expected",{"_index":163,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["typeof",{"_index":161,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":500,"title":{},"body":{"modules/OAuthModule.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["typo",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["ui_locales_supported",{"_index":413,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["uint8array(d.length",{"_index":166,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["unchanged",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["under",{"_index":1524,"title":{},"body":{"additional-documentation/popup-based-login.html":{}}}],["unfortunately",{"_index":1622,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["universal",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":1177,"title":{},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["upcoming",{"_index":956,"title":{},"body":{"index.html":{}}}],["update",{"_index":647,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["upgrade",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":1233,"title":{},"body":{"index.html":{}}}],["uri",{"_index":279,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["url",{"_index":212,"title":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{}}}],["url.startswith(u",{"_index":1501,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["url.tolowercase().startswith(u.tolowercase",{"_index":211,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["url?x=1",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["urlhelperservice",{"_index":501,"title":{"injectables/UrlHelperService.html":{}},"body":{"modules/OAuthModule.html":{},"injectables/UrlHelperService.html":{}}}],["urls",{"_index":523,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["usage",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":18,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["usecase",{"_index":1145,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["useclass",{"_index":515,"title":{},"body":{"modules/OAuthModule.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["used",{"_index":255,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/using-password-flow.html":{}}}],["usefactory",{"_index":514,"title":{},"body":{"modules/OAuthModule.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["usehash",{"_index":1584,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["user",{"_index":376,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{}}}],["user's",{"_index":1750,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["user_profile_load_error",{"_index":448,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["user_profile_loaded",{"_index":447,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["userinfo",{"_index":378,"title":{"interfaces/UserInfo.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{}}}],["userinfo_encryption_alg_values_supported",{"_index":402,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["userinfo_encryption_enc_values_supported",{"_index":403,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["userinfo_endpoint",{"_index":390,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["userinfo_signing_alg_values_supported",{"_index":401,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["username/password",{"_index":1090,"title":{},"body":{"index.html":{}}}],["username/passwort",{"_index":1712,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["users",{"_index":1633,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["uses",{"_index":320,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/original-config-api.html":{}}}],["usesilentrefresh",{"_index":807,"title":{},"body":{"changelog.html":{},"additional-documentation/silent-refresh.html":{}}}],["usevalue",{"_index":516,"title":{},"body":{"modules/OAuthModule.html":{}}}],["using",{"_index":38,"title":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/authorization-servers.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{},"additional-documentation/authorization-servers/auth0.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["v",{"_index":605,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["valid",{"_index":1180,"title":{},"body":{"index.html":{}}}],["validate",{"_index":88,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["validateathash",{"_index":16,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validateathash(params",{"_index":59,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validateathash(validationparams",{"_index":90,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validated",{"_index":360,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/callback-after-login.html":{}}}],["validates",{"_index":62,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["validatesignature",{"_index":28,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{}}}],["validatesignature(validationparams",{"_index":69,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validating",{"_index":425,"title":{},"body":{"classes/NullValidationHandler.html":{},"index.html":{}}}],["validation",{"_index":423,"title":{"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"changelog.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["validation/hash",{"_index":141,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"modules/OAuthModule.html":{}}}],["validation/null",{"_index":422,"title":{},"body":{"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{}}}],["validation/validation",{"_index":7,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"modules/OAuthModule.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validationhandler",{"_index":12,"title":{"classes/ValidationHandler.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["validationhandlerclass",{"_index":491,"title":{},"body":{"modules/OAuthModule.html":{}}}],["validationparams",{"_index":60,"title":{"interfaces/ValidationParams.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validations",{"_index":1078,"title":{},"body":{"index.html":{}}}],["value",{"_index":37,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthInfoEvent.html":{},"modules/OAuthModule.html":{},"classes/OAuthSuccessEvent.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"miscellaneous/variables.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/original-config-api.html":{}}}],["values",{"_index":318,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["valuetohash",{"_index":44,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["var",{"_index":1422,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["variables",{"_index":1321,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1666,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["vdveer",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["versatility",{"_index":1190,"title":{},"body":{"index.html":{}}}],["version",{"_index":716,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"properties.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["versions",{"_index":1016,"title":{},"body":{"index.html":{}}}],["via",{"_index":986,"title":{},"body":{"index.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["vital",{"_index":1134,"title":{},"body":{"index.html":{}}}],["void",{"_index":331,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["voucher",{"_index":1404,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["want",{"_index":308,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["warn",{"_index":476,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["warn(message",{"_index":334,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["warning",{"_index":1599,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["warranties",{"_index":1289,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1284,"title":{},"body":{"license.html":{}}}],["way",{"_index":832,"title":{},"body":{"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["we've",{"_index":988,"title":{},"body":{"index.html":{}}}],["web",{"_index":1087,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["webcomponents/custom",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["webhttpurlencodingcodec",{"_index":589,"title":{"classes/WebHttpUrlEncodingCodec.html":{}},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["webpack",{"_index":987,"title":{},"body":{"index.html":{}}}],["websocket",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["well",{"_index":324,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/callback-after-login.html":{}}}],["when/some",{"_index":1069,"title":{},"body":{"index.html":{}}}],["whenever",{"_index":1558,"title":{},"body":{"additional-documentation/events.html":{}}}],["whether",{"_index":1301,"title":{},"body":{"license.html":{}}}],["white",{"_index":1479,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["widow",{"_index":1432,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["window",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["window.location.hash",{"_index":564,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["window.location.origin",{"_index":1120,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["window.opener",{"_index":1411,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/popup-based-login.html":{}}}],["window.parent",{"_index":1522,"title":{},"body":{"additional-documentation/popup-based-login.html":{}}}],["window.parent).postmessage(location.hash",{"_index":1412,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["windowref",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":1778,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["within",{"_index":1381,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["without",{"_index":1263,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}},"body":{"license.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["work",{"_index":817,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/authorization-servers.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["working",{"_index":896,"title":{"additional-documentation/working-with-httpinterceptors.html":{}},"body":{"changelog.html":{}}}],["works",{"_index":1764,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["workshops",{"_index":1247,"title":{},"body":{"index.html":{}}}],["write",{"_index":1488,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["ws02",{"_index":1663,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["yes",{"_index":479,"title":{},"body":{"classes/OAuthLogger.html":{},"injectables/UrlHelperService.html":{}}}],["you're",{"_index":1232,"title":{},"body":{"index.html":{}}}],["you've",{"_index":1703,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["yourself",{"_index":1800,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["zone.js",{"_index":953,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1311,"title":{},"body":{"overview.html":{}}}],["zum",{"_index":1713,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractValidationHandler.html":{"url":"classes/AbstractValidationHandler.html","title":"class - AbstractValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractValidationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/validation-handler.ts\n        \n\n\n            \n                Description\n            \n            \n                This abstract implementation of ValidationHandler already implements\nthe method validateAtHash. However, to make use of it,\nyou have to override the method calcHash.\n\n            \n\n\n            \n                Implements\n            \n            \n                            ValidationHandler\n                            HashHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                calcHash\n                            \n                            \n                                    Protected\n                                inferHashAlgorithm\n                            \n                            \n                                    Public\n                                toSha256\n                            \n                            \n                                    Public\n                                validateAtHash\n                            \n                            \n                                    Public\n                                    Abstract\n                                validateSignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        calcHash\n                        \n                    \n                \n            \n            \n                \n                    \n                    calcHash(valueToHash: string, algorithm: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/validation-handler.ts:84\n                \n            \n\n\n            \n                \n                    Calculates the hash for the passed value by using\nthe passed hash algorithm.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueToHash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    algorithm\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        inferHashAlgorithm\n                        \n                    \n                \n            \n            \n                \n                    \n                    inferHashAlgorithm(jwtHeader: object)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/validation-handler.ts:67\n                \n            \n\n\n            \n                \n                    Infers the name of the hash algorithm to use\nfrom the alg field of an id_token.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jwtHeader\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the id_token's parsed header\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toSha256\n                        \n                    \n                \n            \n            \n                \n                    \n                    toSha256(valueToHash: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/validation-handler.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueToHash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        validateAtHash\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateAtHash(params: ValidationParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/validation-handler.ts:44\n                \n            \n\n\n            \n                \n                    Validates the at_hash in an id_token against the received access_token.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        validateSignature\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSignature(validationParams: ValidationParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/validation-handler.ts:39\n                \n            \n\n\n            \n                \n                    Validates the signature of an id_token.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationParams\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of } from 'rxjs'\nimport { base64UrlEncode } from '../base64-helper'\nimport { HashHandler } from './hash-handler'\n\nexport interface ValidationParams {\n  idToken: string\n  accessToken: string\n  idTokenHeader: object\n  idTokenClaims: object\n  jwks: object\n  loadKeys: () => Observable\n}\n\n/**\n * Interface for Handlers that are hooked in to\n * validate tokens.\n */\nexport abstract class ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  public abstract validateSignature(validationParams: ValidationParams): Observable\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  public abstract validateAtHash(validationParams: ValidationParams): Observable\n}\n\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n */\nexport abstract class AbstractValidationHandler implements ValidationHandler, HashHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  public abstract validateSignature(validationParams: ValidationParams): Observable\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  public validateAtHash(params: ValidationParams): Observable {\n    const hashAlg = this.inferHashAlgorithm(params.idTokenHeader)\n    const tokenHash = this.calcHash(params.accessToken, hashAlg) // sha256(accessToken, { asString: true })\n    const leftMostHalf = tokenHash.substr(0, tokenHash.length / 2)\n\n    const atHash = base64UrlEncode(leftMostHalf)\n\n    const claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '')\n\n    if (atHash !== claimsAtHash) {\n      console.error('exptected at_hash: ' + atHash)\n      console.error('actual at_hash: ' + claimsAtHash)\n    }\n\n    return of(atHash === claimsAtHash)\n  }\n\n  /**\n   * Infers the name of the hash algorithm to use\n   * from the alg field of an id_token.\n   *\n   * @param jwtHeader the id_token's parsed header\n   */\n  protected inferHashAlgorithm(jwtHeader: object): string {\n    const alg: string = jwtHeader['alg']\n\n    if (!alg.match(/^.S[0-9]{3}$/)) {\n      throw new Error('Algorithm not supported: ' + alg)\n    }\n\n    return 'sha-' + alg.substr(2)\n  }\n\n  /**\n   * Calculates the hash for the passed value by using\n   * the passed hash algorithm.\n   *\n   * @param valueToHash\n   * @param algorithm\n   */\n  protected abstract calcHash(valueToHash: string, algorithm: string): string\n\n  public toSha256(valueToHash: string): string {\n    return this.calcHash(valueToHash, 'sha256')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DateTimeProvider.html":{"url":"classes/DateTimeProvider.html","title":"class - DateTimeProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DateTimeProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/date-time-provider.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                new\n                            \n                            \n                                    Public\n                                    Abstract\n                                now\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        new\n                        \n                    \n                \n            \n            \n                \n                    \n                    new()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/date-time-provider.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        now\n                        \n                    \n                \n            \n            \n                \n                    \n                    now()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/date-time-provider.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\n\nexport abstract class DateTimeProvider {\n  public abstract now(): number\n  public abstract new(): Date\n}\n\n@Injectable()\nexport class SystemDateTimeProvider extends DateTimeProvider {\n  public now(): number {\n    return Date.now()\n  }\n\n  public new(): Date {\n    return new Date()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DefaultHashHandler.html":{"url":"injectables/DefaultHashHandler.html","title":"injectable - DefaultHashHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DefaultHashHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/hash-handler.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toHashString\n                            \n                            \n                                    Public\n                                toHashString2\n                            \n                            \n                                    Public\n                                toSha256\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toHashString\n                        \n                    \n                \n            \n            \n                \n                    \n                    toHashString(buffer: ArrayBuffer)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/hash-handler.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buffer\n                                    \n                                            ArrayBuffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toHashString2\n                        \n                    \n                \n            \n            \n                \n                    \n                    toHashString2(byteArray: number[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/hash-handler.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    byteArray\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toSha256\n                        \n                    \n                \n            \n            \n                \n                    \n                    toSha256(valueToHash: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/hash-handler.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueToHash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\n\nimport fsha256 from 'fast-sha256'\n\n/**\n * Abstraction for crypto algorithms\n */\nexport abstract class HashHandler {\n  public abstract toSha256(valueToHash: string): string\n}\n\n@Injectable()\nexport class DefaultHashHandler implements HashHandler {\n  public toSha256(valueToHash: string): string {\n    return DefaultHashHandler.encodeUTF8(fsha256(DefaultHashHandler.decodeUTF8(valueToHash)))\n  }\n\n  private static decodeUTF8(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string')\n    let i: number\n    const d = s\n    const b = new Uint8Array(d.length)\n    for (i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/DefaultOAuthInterceptor.html":{"url":"interceptors/DefaultOAuthInterceptor.html","title":"interceptor - DefaultOAuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  DefaultOAuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/interceptors/default-oauth.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(oAuthService: OAuthService, errorHandler: OAuthResourceServerErrorHandler, moduleConfig: OAuthModuleConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/interceptors/default-oauth.interceptor.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        oAuthService\n                                                  \n                                                        \n                                                                        OAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        OAuthResourceServerErrorHandler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleConfig\n                                                  \n                                                        \n                                                                        OAuthModuleConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        intercept\n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/interceptors/default-oauth.interceptor.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core'\n\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Observable, of, merge } from 'rxjs'\nimport { catchError, filter, map, take, mergeMap, timeout } from 'rxjs/operators'\nimport { OAuthResourceServerErrorHandler } from './resource-server-error-handler'\nimport { OAuthModuleConfig } from '../oauth-module.config'\nimport { OAuthService } from '../oauth-service'\n\n@Injectable()\nexport class DefaultOAuthInterceptor implements HttpInterceptor {\n  public constructor(\n    private oAuthService: OAuthService,\n    private errorHandler: OAuthResourceServerErrorHandler,\n    @Optional() private moduleConfig: OAuthModuleConfig\n  ) {}\n\n  private checkUrl(url: string): boolean {\n    if (this.moduleConfig.resourceServer.customUrlValidation) {\n      return this.moduleConfig.resourceServer.customUrlValidation(url)\n    }\n\n    if (this.moduleConfig.resourceServer.allowedUrls) {\n      return !!this.moduleConfig.resourceServer.allowedUrls.find(u => url.toLowerCase().startsWith(u.toLowerCase()))\n    }\n\n    return true\n  }\n\n  public intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const url = req.url.toLowerCase()\n\n    if (!this.moduleConfig || !this.moduleConfig.resourceServer || !this.checkUrl(url)) {\n      return next.handle(req)\n    }\n\n    const sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken\n\n    if (!sendAccessToken) {\n      return next.handle(req).pipe(catchError(err => this.errorHandler.handleError(err)))\n    }\n\n    return merge(\n      of(this.oAuthService.getAccessToken()).pipe(filter(token => !!token)),\n      this.oAuthService.events.pipe(\n        filter(e => e.type === 'token_received'),\n        timeout(this.oAuthService.config.waitForTokenInMsec || 0),\n        catchError(_ => of(null)), // timeout is not an error\n        map(_ => this.oAuthService.getAccessToken())\n      )\n    ).pipe(\n      take(1),\n      mergeMap((token) => {\n        if (token) {\n          const header = 'Bearer ' + token\n          const headers = req.headers.set('Authorization', header)\n          req = req.clone({ headers })\n        }\n\n        return next.handle(req).pipe(catchError(err => this.errorHandler.handleError(err)))\n      })\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HashHandler.html":{"url":"classes/HashHandler.html","title":"class - HashHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HashHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/hash-handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstraction for crypto algorithms\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                toSha256\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        toSha256\n                        \n                    \n                \n            \n            \n                \n                    \n                    toSha256(valueToHash: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/hash-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueToHash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\n\nimport fsha256 from 'fast-sha256'\n\n/**\n * Abstraction for crypto algorithms\n */\nexport abstract class HashHandler {\n  public abstract toSha256(valueToHash: string): string\n}\n\n@Injectable()\nexport class DefaultHashHandler implements HashHandler {\n  public toSha256(valueToHash: string): string {\n    return DefaultHashHandler.encodeUTF8(fsha256(DefaultHashHandler.decodeUTF8(valueToHash)))\n  }\n\n  private static decodeUTF8(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string')\n    let i: number\n    const d = s\n    const b = new Uint8Array(d.length)\n    for (i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOptions.html":{"url":"classes/LoginOptions.html","title":"class - LoginOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Additional options that can be passed to tryLogin.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                customHashFragment\n                            \n                            \n                                    Public\n                                    Optional\n                                customRedirectUri\n                            \n                            \n                                    Public\n                                    Optional\n                                disableNonceCheck\n                            \n                            \n                                    Public\n                                    Optional\n                                disableOAuth2StateCheck\n                            \n                            \n                                    Public\n                                    Optional\n                                preventClearHashAfterLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        customHashFragment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:18\n                        \n                    \n\n            \n                \n                    A custom hash fragment to be used instead of the\nactual one. This is used for silent refreshes, to\npass the iframes hash fragment to this method, and\nis also used by popup flows in the same manner.\nThis can be used with code flow, where is must be set\nto a hash symbol followed by the querystring. The\nquestion mark is optional, but may be present following\nthe hash symbol.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        customRedirectUri\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:52\n                        \n                    \n\n            \n                \n                    Set this for code flow if you used a custom redirect Uri\nwhen retrieving the code. This is used internally for silent\nrefresh and popup flows.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        disableNonceCheck\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:37\n                        \n                    \n\n            \n                \n                    Set this to true to disable the nonce\ncheck which is used to avoid\nreplay attacks.\nThis flag should never be true in\nproduction environments.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        disableOAuth2StateCheck\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:28\n                        \n                    \n\n            \n                \n                    Set this to true to disable the oauth2 state\ncheck which is a best practice to avoid\nsecurity attacks.\nAs OIDC defines a nonce check that includes\nthis, this can be set to true when only doing\nOIDC.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        preventClearHashAfterLogin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:45\n                        \n                    \n\n            \n                \n                    Normally, you want to clear your hash fragment after\nthe lib read the token(s) so that they are not displayed\nanymore in the url. If not, set this to true. For code flow\nthis controls removing query string values.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  public customHashFragment?: string\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  public disableOAuth2StateCheck?: boolean\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  public disableNonceCheck? = false\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  public preventClearHashAfterLogin? = false\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  public customRedirectUri?: string\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  public abstract debug(message?: any, ...optionalParams: any[]): void\n  public abstract info(message?: any, ...optionalParams: any[]): void\n  public abstract log(message?: any, ...optionalParams: any[]): void\n  public abstract warn(message?: any, ...optionalParams: any[]): void\n  public abstract error(message?: any, ...optionalParams: any[]): void\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  public abstract getItem(key: string): string | null\n  public abstract removeItem(key: string): void\n  public abstract setItem(key: string, data: string): void\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map()\n\n  public getItem(key: string): string {\n    return this.data.get(key)\n  }\n\n  public removeItem(key: string): void {\n    this.data.delete(key)\n  }\n\n  public setItem(key: string, data: string): void {\n    this.data.set(key, data)\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  public idToken: string\n  public accessToken: string\n  public idClaims?: object\n  public state?: string\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string\n  idTokenClaims: object\n  idTokenHeader: object\n  idTokenClaimsJson: string\n  idTokenHeaderJson: string\n  idTokenExpiresAt: number\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string\n  id_token: string\n  token_type: string\n  expires_in: number\n  refresh_token: string\n  scope: string\n  state?: string\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string\n  [key: string]: any\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string\n  authorization_endpoint: string\n  token_endpoint: string\n  token_endpoint_auth_methods_supported: string[]\n  token_endpoint_auth_signing_alg_values_supported: string[]\n  userinfo_endpoint: string\n  check_session_iframe: string\n  end_session_endpoint: string\n  jwks_uri: string\n  registration_endpoint: string\n  scopes_supported: string[]\n  response_types_supported: string[]\n  acr_values_supported: string[]\n  response_modes_supported: string[]\n  grant_types_supported: string[]\n  subject_types_supported: string[]\n  userinfo_signing_alg_values_supported: string[]\n  userinfo_encryption_alg_values_supported: string[]\n  userinfo_encryption_enc_values_supported: string[]\n  id_token_signing_alg_values_supported: string[]\n  id_token_encryption_alg_values_supported: string[]\n  id_token_encryption_enc_values_supported: string[]\n  request_object_signing_alg_values_supported: string[]\n  display_values_supported: string[]\n  claim_types_supported: string[]\n  claims_supported: string[]\n  claims_parameter_supported: boolean\n  service_documentation: string\n  ui_locales_supported: string[]\n  revocation_endpoint: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemoryStorage.html":{"url":"injectables/MemoryStorage.html","title":"injectable - MemoryStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MemoryStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getItem\n                            \n                            \n                                    Public\n                                removeItem\n                            \n                            \n                                    Public\n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    getItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    setItem(key: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  public customHashFragment?: string\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  public disableOAuth2StateCheck?: boolean\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  public disableNonceCheck? = false\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  public preventClearHashAfterLogin? = false\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  public customRedirectUri?: string\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  public abstract debug(message?: any, ...optionalParams: any[]): void\n  public abstract info(message?: any, ...optionalParams: any[]): void\n  public abstract log(message?: any, ...optionalParams: any[]): void\n  public abstract warn(message?: any, ...optionalParams: any[]): void\n  public abstract error(message?: any, ...optionalParams: any[]): void\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  public abstract getItem(key: string): string | null\n  public abstract removeItem(key: string): void\n  public abstract setItem(key: string, data: string): void\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map()\n\n  public getItem(key: string): string {\n    return this.data.get(key)\n  }\n\n  public removeItem(key: string): void {\n    this.data.delete(key)\n  }\n\n  public setItem(key: string, data: string): void {\n    this.data.set(key, data)\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  public idToken: string\n  public accessToken: string\n  public idClaims?: object\n  public state?: string\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string\n  idTokenClaims: object\n  idTokenHeader: object\n  idTokenClaimsJson: string\n  idTokenHeaderJson: string\n  idTokenExpiresAt: number\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string\n  id_token: string\n  token_type: string\n  expires_in: number\n  refresh_token: string\n  scope: string\n  state?: string\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string\n  [key: string]: any\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string\n  authorization_endpoint: string\n  token_endpoint: string\n  token_endpoint_auth_methods_supported: string[]\n  token_endpoint_auth_signing_alg_values_supported: string[]\n  userinfo_endpoint: string\n  check_session_iframe: string\n  end_session_endpoint: string\n  jwks_uri: string\n  registration_endpoint: string\n  scopes_supported: string[]\n  response_types_supported: string[]\n  acr_values_supported: string[]\n  response_modes_supported: string[]\n  grant_types_supported: string[]\n  subject_types_supported: string[]\n  userinfo_signing_alg_values_supported: string[]\n  userinfo_encryption_alg_values_supported: string[]\n  userinfo_encryption_enc_values_supported: string[]\n  id_token_signing_alg_values_supported: string[]\n  id_token_encryption_alg_values_supported: string[]\n  id_token_encryption_enc_values_supported: string[]\n  request_object_signing_alg_values_supported: string[]\n  display_values_supported: string[]\n  claim_types_supported: string[]\n  claims_supported: string[]\n  claims_parameter_supported: boolean\n  service_documentation: string\n  ui_locales_supported: string[]\n  revocation_endpoint: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NullValidationHandler.html":{"url":"classes/NullValidationHandler.html","title":"class - NullValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NullValidationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/null-validation-handler.ts\n        \n\n\n            \n                Description\n            \n            \n                A validation handler that isn't validating nothing.\nCan be used to skip validation (at your own risk).\n\n            \n\n\n            \n                Implements\n            \n            \n                            ValidationHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                validateAtHash\n                            \n                            \n                                    Public\n                                validateSignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        validateAtHash\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateAtHash(validationParams: ValidationParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/null-validation-handler.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationParams\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        validateSignature\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSignature(validationParams: ValidationParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/null-validation-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationParams\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of } from 'rxjs'\nimport { ValidationHandler, ValidationParams } from './validation-handler'\n\n/**\n * A validation handler that isn't validating nothing.\n * Can be used to skip validation (at your own risk).\n */\nexport class NullValidationHandler implements ValidationHandler {\n  public validateSignature(validationParams: ValidationParams): Observable {\n    return of(null)\n  }\n  public validateAtHash(validationParams: ValidationParams): Observable {\n    return of(true)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthErrorEvent.html":{"url":"classes/OAuthErrorEvent.html","title":"class - OAuthErrorEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthErrorEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        OAuthEvent\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                params\n                            \n                            \n                                    Public\n                                    Readonly\n                                reason\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(type: EventType, reason: object, params: object)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        EventType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reason\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/events.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        reason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/events.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventType\n\n                    \n                \n                        \n                            \n                                Inherited from         OAuthEvent\n\n                            \n                        \n                    \n                        \n                                Defined in         OAuthEvent:29\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'code_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'session_unchanged'\n  | 'logout'\n  | 'popup_closed'\n  | 'popup_blocked'\n  | 'token_revoke_error'\n\nexport abstract class OAuthEvent {\n  public constructor(public readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  public constructor(type: EventType, public readonly info: any = null) {\n    super(type)\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  public constructor(type: EventType, public readonly info: any = null) {\n    super(type)\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  public constructor(type: EventType, public readonly reason: object, public readonly params: object = null) {\n    super(type)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthEvent.html":{"url":"classes/OAuthEvent.html","title":"class - OAuthEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(type: EventType)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        EventType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventType\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/events.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'code_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'session_unchanged'\n  | 'logout'\n  | 'popup_closed'\n  | 'popup_blocked'\n  | 'token_revoke_error'\n\nexport abstract class OAuthEvent {\n  public constructor(public readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  public constructor(type: EventType, public readonly info: any = null) {\n    super(type)\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  public constructor(type: EventType, public readonly info: any = null) {\n    super(type)\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  public constructor(type: EventType, public readonly reason: object, public readonly params: object = null) {\n    super(type)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthInfoEvent.html":{"url":"classes/OAuthInfoEvent.html","title":"class - OAuthInfoEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthInfoEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        OAuthEvent\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                info\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(type: EventType, info: any)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        EventType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        info\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        info\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/events.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventType\n\n                    \n                \n                        \n                            \n                                Inherited from         OAuthEvent\n\n                            \n                        \n                    \n                        \n                                Defined in         OAuthEvent:29\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'code_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'session_unchanged'\n  | 'logout'\n  | 'popup_closed'\n  | 'popup_blocked'\n  | 'token_revoke_error'\n\nexport abstract class OAuthEvent {\n  public constructor(public readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  public constructor(type: EventType, public readonly info: any = null) {\n    super(type)\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  public constructor(type: EventType, public readonly info: any = null) {\n    super(type)\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  public constructor(type: EventType, public readonly reason: object, public readonly params: object = null) {\n    super(type)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthLogger.html":{"url":"classes/OAuthLogger.html","title":"class - OAuthLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the logging interface the OAuthService uses\ninternally. Is compatible with the console object,\nbut you can provide your own implementation as well\nthrough dependency injection.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                debug\n                            \n                            \n                                    Public\n                                    Abstract\n                                error\n                            \n                            \n                                    Public\n                                    Abstract\n                                info\n                            \n                            \n                                    Public\n                                    Abstract\n                                log\n                            \n                            \n                                    Public\n                                    Abstract\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        debug\n                        \n                    \n                \n            \n            \n                \n                    \n                    debug(message?: any, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        error\n                        \n                    \n                \n            \n            \n                \n                    \n                    error(message?: any, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        info\n                        \n                    \n                \n            \n            \n                \n                    \n                    info(message?: any, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        log\n                        \n                    \n                \n            \n            \n                \n                    \n                    log(message?: any, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        warn\n                        \n                    \n                \n            \n            \n                \n                    \n                    warn(message?: any, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  public customHashFragment?: string\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  public disableOAuth2StateCheck?: boolean\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  public disableNonceCheck? = false\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  public preventClearHashAfterLogin? = false\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  public customRedirectUri?: string\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  public abstract debug(message?: any, ...optionalParams: any[]): void\n  public abstract info(message?: any, ...optionalParams: any[]): void\n  public abstract log(message?: any, ...optionalParams: any[]): void\n  public abstract warn(message?: any, ...optionalParams: any[]): void\n  public abstract error(message?: any, ...optionalParams: any[]): void\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  public abstract getItem(key: string): string | null\n  public abstract removeItem(key: string): void\n  public abstract setItem(key: string, data: string): void\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map()\n\n  public getItem(key: string): string {\n    return this.data.get(key)\n  }\n\n  public removeItem(key: string): void {\n    this.data.delete(key)\n  }\n\n  public setItem(key: string, data: string): void {\n    this.data.set(key, data)\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  public idToken: string\n  public accessToken: string\n  public idClaims?: object\n  public state?: string\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string\n  idTokenClaims: object\n  idTokenHeader: object\n  idTokenClaimsJson: string\n  idTokenHeaderJson: string\n  idTokenExpiresAt: number\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string\n  id_token: string\n  token_type: string\n  expires_in: number\n  refresh_token: string\n  scope: string\n  state?: string\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string\n  [key: string]: any\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string\n  authorization_endpoint: string\n  token_endpoint: string\n  token_endpoint_auth_methods_supported: string[]\n  token_endpoint_auth_signing_alg_values_supported: string[]\n  userinfo_endpoint: string\n  check_session_iframe: string\n  end_session_endpoint: string\n  jwks_uri: string\n  registration_endpoint: string\n  scopes_supported: string[]\n  response_types_supported: string[]\n  acr_values_supported: string[]\n  response_modes_supported: string[]\n  grant_types_supported: string[]\n  subject_types_supported: string[]\n  userinfo_signing_alg_values_supported: string[]\n  userinfo_encryption_alg_values_supported: string[]\n  userinfo_encryption_enc_values_supported: string[]\n  id_token_signing_alg_values_supported: string[]\n  id_token_encryption_alg_values_supported: string[]\n  id_token_encryption_enc_values_supported: string[]\n  request_object_signing_alg_values_supported: string[]\n  display_values_supported: string[]\n  claim_types_supported: string[]\n  claims_supported: string[]\n  claims_parameter_supported: boolean\n  service_documentation: string\n  ui_locales_supported: string[]\n  revocation_endpoint: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OAuthModule.html":{"url":"modules/OAuthModule.html","title":"module - OAuthModule","body":"\n                   \n\n\n\n\n    Modules\n    OAuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/lib/src/angular-oauth-oidc.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OAuthModuleConfig, validationHandlerClass)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/angular-oauth-oidc.module.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OAuthModuleConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    validationHandlerClass\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        NullValidationHandler\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { HTTP_INTERCEPTORS } from '@angular/common/http'\n\nimport { DateTimeProvider, SystemDateTimeProvider } from './date-time-provider'\nimport { OAuthStorage, OAuthLogger } from './types'\nimport { OAuthService } from './oauth-service'\nimport { UrlHelperService } from './url-helper.service'\n\nimport { OAuthModuleConfig } from './oauth-module.config'\nimport {\n  OAuthResourceServerErrorHandler,\n  OAuthNoopResourceServerErrorHandler,\n} from './interceptors/resource-server-error-handler'\nimport { DefaultOAuthInterceptor } from './interceptors/default-oauth.interceptor'\nimport { ValidationHandler } from './token-validation/validation-handler'\nimport { NullValidationHandler } from './token-validation/null-validation-handler'\nimport { createDefaultLogger, createDefaultStorage } from './factories'\nimport { HashHandler, DefaultHashHandler } from './token-validation/hash-handler'\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [],\n  exports: [],\n})\nexport class OAuthModule {\n  public static forRoot(\n    config: OAuthModuleConfig = null,\n    validationHandlerClass = NullValidationHandler\n  ): ModuleWithProviders {\n    return {\n      ngModule: OAuthModule,\n      providers: [\n        OAuthService,\n        UrlHelperService,\n        { provide: OAuthLogger, useFactory: createDefaultLogger },\n        { provide: OAuthStorage, useFactory: createDefaultStorage },\n        { provide: ValidationHandler, useClass: validationHandlerClass },\n        { provide: HashHandler, useClass: DefaultHashHandler },\n        {\n          provide: OAuthResourceServerErrorHandler,\n          useClass: OAuthNoopResourceServerErrorHandler,\n        },\n        { provide: OAuthModuleConfig, useValue: config },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: DefaultOAuthInterceptor,\n          multi: true,\n        },\n        { provide: DateTimeProvider, useClass: SystemDateTimeProvider },\n      ],\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthModuleConfig.html":{"url":"classes/OAuthModuleConfig.html","title":"class - OAuthModuleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthModuleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/oauth-module.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resourceServer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resourceServer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OAuthResourceServerConfig\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/oauth-module.config.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class OAuthModuleConfig {\n  public resourceServer: OAuthResourceServerConfig\n}\n\nexport abstract class OAuthResourceServerConfig {\n  /**\n   * Urls for which calls should be intercepted.\n   * If there is an ResourceServerErrorHandler registered, it is used for them.\n   * If sendAccessToken is set to true, the access_token is send to them too.\n   */\n  public allowedUrls?: Array\n  public sendAccessToken: boolean\n  public customUrlValidation?: (url: string) => boolean\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthNoopResourceServerErrorHandler.html":{"url":"classes/OAuthNoopResourceServerErrorHandler.html","title":"class - OAuthNoopResourceServerErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthNoopResourceServerErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/interceptors/resource-server-error-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            OAuthResourceServerErrorHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(err: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/interceptors/resource-server-error-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpResponse } from '@angular/common/http'\nimport { Observable, throwError } from 'rxjs'\n\nexport abstract class OAuthResourceServerErrorHandler {\n  public abstract handleError(err: HttpResponse): Observable\n}\n\nexport class OAuthNoopResourceServerErrorHandler implements OAuthResourceServerErrorHandler {\n  public handleError(err: HttpResponse): Observable {\n    return throwError(err)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthResourceServerConfig.html":{"url":"classes/OAuthResourceServerConfig.html","title":"class - OAuthResourceServerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthResourceServerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/oauth-module.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                allowedUrls\n                            \n                            \n                                    Public\n                                    Optional\n                                customUrlValidation\n                            \n                            \n                                    Public\n                                sendAccessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        allowedUrls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/oauth-module.config.ts:11\n                        \n                    \n\n            \n                \n                    Urls for which calls should be intercepted.\nIf there is an ResourceServerErrorHandler registered, it is used for them.\nIf sendAccessToken is set to true, the access_token is send to them too.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        customUrlValidation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/oauth-module.config.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendAccessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/oauth-module.config.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class OAuthModuleConfig {\n  public resourceServer: OAuthResourceServerConfig\n}\n\nexport abstract class OAuthResourceServerConfig {\n  /**\n   * Urls for which calls should be intercepted.\n   * If there is an ResourceServerErrorHandler registered, it is used for them.\n   * If sendAccessToken is set to true, the access_token is send to them too.\n   */\n  public allowedUrls?: Array\n  public sendAccessToken: boolean\n  public customUrlValidation?: (url: string) => boolean\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthResourceServerErrorHandler.html":{"url":"classes/OAuthResourceServerErrorHandler.html","title":"class - OAuthResourceServerErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthResourceServerErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/interceptors/resource-server-error-handler.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(err: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/interceptors/resource-server-error-handler.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpResponse } from '@angular/common/http'\nimport { Observable, throwError } from 'rxjs'\n\nexport abstract class OAuthResourceServerErrorHandler {\n  public abstract handleError(err: HttpResponse): Observable\n}\n\nexport class OAuthNoopResourceServerErrorHandler implements OAuthResourceServerErrorHandler {\n  public handleError(err: HttpResponse): Observable {\n    return throwError(err)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthStorage.html":{"url":"classes/OAuthStorage.html","title":"class - OAuthStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines a simple storage that can be used for\nstoring the tokens at client side.\nIs compatible to localStorage and sessionStorage,\nbut you can also create your own implementations.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                getItem\n                            \n                            \n                                    Public\n                                    Abstract\n                                removeItem\n                            \n                            \n                                    Public\n                                    Abstract\n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    getItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        removeItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    setItem(key: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  public customHashFragment?: string\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  public disableOAuth2StateCheck?: boolean\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  public disableNonceCheck? = false\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  public preventClearHashAfterLogin? = false\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  public customRedirectUri?: string\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  public abstract debug(message?: any, ...optionalParams: any[]): void\n  public abstract info(message?: any, ...optionalParams: any[]): void\n  public abstract log(message?: any, ...optionalParams: any[]): void\n  public abstract warn(message?: any, ...optionalParams: any[]): void\n  public abstract error(message?: any, ...optionalParams: any[]): void\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  public abstract getItem(key: string): string | null\n  public abstract removeItem(key: string): void\n  public abstract setItem(key: string, data: string): void\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map()\n\n  public getItem(key: string): string {\n    return this.data.get(key)\n  }\n\n  public removeItem(key: string): void {\n    this.data.delete(key)\n  }\n\n  public setItem(key: string, data: string): void {\n    this.data.set(key, data)\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  public idToken: string\n  public accessToken: string\n  public idClaims?: object\n  public state?: string\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string\n  idTokenClaims: object\n  idTokenHeader: object\n  idTokenClaimsJson: string\n  idTokenHeaderJson: string\n  idTokenExpiresAt: number\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string\n  id_token: string\n  token_type: string\n  expires_in: number\n  refresh_token: string\n  scope: string\n  state?: string\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string\n  [key: string]: any\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string\n  authorization_endpoint: string\n  token_endpoint: string\n  token_endpoint_auth_methods_supported: string[]\n  token_endpoint_auth_signing_alg_values_supported: string[]\n  userinfo_endpoint: string\n  check_session_iframe: string\n  end_session_endpoint: string\n  jwks_uri: string\n  registration_endpoint: string\n  scopes_supported: string[]\n  response_types_supported: string[]\n  acr_values_supported: string[]\n  response_modes_supported: string[]\n  grant_types_supported: string[]\n  subject_types_supported: string[]\n  userinfo_signing_alg_values_supported: string[]\n  userinfo_encryption_alg_values_supported: string[]\n  userinfo_encryption_enc_values_supported: string[]\n  id_token_signing_alg_values_supported: string[]\n  id_token_encryption_alg_values_supported: string[]\n  id_token_encryption_enc_values_supported: string[]\n  request_object_signing_alg_values_supported: string[]\n  display_values_supported: string[]\n  claim_types_supported: string[]\n  claims_supported: string[]\n  claims_parameter_supported: boolean\n  service_documentation: string\n  ui_locales_supported: string[]\n  revocation_endpoint: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthSuccessEvent.html":{"url":"classes/OAuthSuccessEvent.html","title":"class - OAuthSuccessEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthSuccessEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        OAuthEvent\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                info\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(type: EventType, info: any)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        EventType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        info\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        info\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/events.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventType\n\n                    \n                \n                        \n                            \n                                Inherited from         OAuthEvent\n\n                            \n                        \n                    \n                        \n                                Defined in         OAuthEvent:29\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'code_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'session_unchanged'\n  | 'logout'\n  | 'popup_closed'\n  | 'popup_blocked'\n  | 'token_revoke_error'\n\nexport abstract class OAuthEvent {\n  public constructor(public readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  public constructor(type: EventType, public readonly info: any = null) {\n    super(type)\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  public constructor(type: EventType, public readonly info: any = null) {\n    super(type)\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  public constructor(type: EventType, public readonly reason: object, public readonly params: object = null) {\n    super(type)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OidcDiscoveryDoc.html":{"url":"interfaces/OidcDiscoveryDoc.html","title":"interface - OidcDiscoveryDoc","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OidcDiscoveryDoc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an OpenID Connect discovery document\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            acr_values_supported\n                                        \n                                \n                                \n                                        \n                                            authorization_endpoint\n                                        \n                                \n                                \n                                        \n                                            check_session_iframe\n                                        \n                                \n                                \n                                        \n                                            claim_types_supported\n                                        \n                                \n                                \n                                        \n                                            claims_parameter_supported\n                                        \n                                \n                                \n                                        \n                                            claims_supported\n                                        \n                                \n                                \n                                        \n                                            display_values_supported\n                                        \n                                \n                                \n                                        \n                                            end_session_endpoint\n                                        \n                                \n                                \n                                        \n                                            grant_types_supported\n                                        \n                                \n                                \n                                        \n                                            id_token_encryption_alg_values_supported\n                                        \n                                \n                                \n                                        \n                                            id_token_encryption_enc_values_supported\n                                        \n                                \n                                \n                                        \n                                            id_token_signing_alg_values_supported\n                                        \n                                \n                                \n                                        \n                                            issuer\n                                        \n                                \n                                \n                                        \n                                            jwks_uri\n                                        \n                                \n                                \n                                        \n                                            registration_endpoint\n                                        \n                                \n                                \n                                        \n                                            request_object_signing_alg_values_supported\n                                        \n                                \n                                \n                                        \n                                            response_modes_supported\n                                        \n                                \n                                \n                                        \n                                            response_types_supported\n                                        \n                                \n                                \n                                        \n                                            revocation_endpoint\n                                        \n                                \n                                \n                                        \n                                            scopes_supported\n                                        \n                                \n                                \n                                        \n                                            service_documentation\n                                        \n                                \n                                \n                                        \n                                            subject_types_supported\n                                        \n                                \n                                \n                                        \n                                            token_endpoint\n                                        \n                                \n                                \n                                        \n                                            token_endpoint_auth_methods_supported\n                                        \n                                \n                                \n                                        \n                                            token_endpoint_auth_signing_alg_values_supported\n                                        \n                                \n                                \n                                        \n                                            ui_locales_supported\n                                        \n                                \n                                \n                                        \n                                            userinfo_encryption_alg_values_supported\n                                        \n                                \n                                \n                                        \n                                            userinfo_encryption_enc_values_supported\n                                        \n                                \n                                \n                                        \n                                            userinfo_endpoint\n                                        \n                                \n                                \n                                        \n                                            userinfo_signing_alg_values_supported\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        acr_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        acr_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        authorization_endpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authorization_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        check_session_iframe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        check_session_iframe:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        claim_types_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        claim_types_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        claims_parameter_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        claims_parameter_supported:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        claims_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        claims_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end_session_endpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end_session_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grant_types_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grant_types_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_token_encryption_alg_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_token_encryption_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_token_encryption_enc_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_token_encryption_enc_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_token_signing_alg_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_token_signing_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issuer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issuer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwks_uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwks_uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registration_endpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registration_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request_object_signing_alg_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        request_object_signing_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response_modes_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        response_modes_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response_types_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        response_types_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        revocation_endpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        revocation_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scopes_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scopes_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service_documentation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        service_documentation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject_types_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject_types_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_endpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_endpoint_auth_methods_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token_endpoint_auth_methods_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_endpoint_auth_signing_alg_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token_endpoint_auth_signing_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ui_locales_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ui_locales_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userinfo_encryption_alg_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userinfo_encryption_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userinfo_encryption_enc_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userinfo_encryption_enc_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userinfo_endpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userinfo_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userinfo_signing_alg_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userinfo_signing_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core'\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  public customHashFragment?: string\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  public disableOAuth2StateCheck?: boolean\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  public disableNonceCheck? = false\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  public preventClearHashAfterLogin? = false\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  public customRedirectUri?: string\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  public abstract debug(message?: any, ...optionalParams: any[]): void\n  public abstract info(message?: any, ...optionalParams: any[]): void\n  public abstract log(message?: any, ...optionalParams: any[]): void\n  public abstract warn(message?: any, ...optionalParams: any[]): void\n  public abstract error(message?: any, ...optionalParams: any[]): void\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  public abstract getItem(key: string): string | null\n  public abstract removeItem(key: string): void\n  public abstract setItem(key: string, data: string): void\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map()\n\n  public getItem(key: string): string {\n    return this.data.get(key)\n  }\n\n  public removeItem(key: string): void {\n    this.data.delete(key)\n  }\n\n  public setItem(key: string, data: string): void {\n    this.data.set(key, data)\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  public idToken: string\n  public accessToken: string\n  public idClaims?: object\n  public state?: string\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string\n  idTokenClaims: object\n  idTokenHeader: object\n  idTokenClaimsJson: string\n  idTokenHeaderJson: string\n  idTokenExpiresAt: number\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string\n  id_token: string\n  token_type: string\n  expires_in: number\n  refresh_token: string\n  scope: string\n  state?: string\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string\n  [key: string]: any\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string\n  authorization_endpoint: string\n  token_endpoint: string\n  token_endpoint_auth_methods_supported: string[]\n  token_endpoint_auth_signing_alg_values_supported: string[]\n  userinfo_endpoint: string\n  check_session_iframe: string\n  end_session_endpoint: string\n  jwks_uri: string\n  registration_endpoint: string\n  scopes_supported: string[]\n  response_types_supported: string[]\n  acr_values_supported: string[]\n  response_modes_supported: string[]\n  grant_types_supported: string[]\n  subject_types_supported: string[]\n  userinfo_signing_alg_values_supported: string[]\n  userinfo_encryption_alg_values_supported: string[]\n  userinfo_encryption_enc_values_supported: string[]\n  id_token_signing_alg_values_supported: string[]\n  id_token_encryption_alg_values_supported: string[]\n  id_token_encryption_enc_values_supported: string[]\n  request_object_signing_alg_values_supported: string[]\n  display_values_supported: string[]\n  claim_types_supported: string[]\n  claims_supported: string[]\n  claims_parameter_supported: boolean\n  service_documentation: string\n  ui_locales_supported: string[]\n  revocation_endpoint: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParsedIdToken.html":{"url":"interfaces/ParsedIdToken.html","title":"interface - ParsedIdToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ParsedIdToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the parsed and validated id_token.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            idToken\n                                        \n                                \n                                \n                                        \n                                            idTokenClaims\n                                        \n                                \n                                \n                                        \n                                            idTokenClaimsJson\n                                        \n                                \n                                \n                                        \n                                            idTokenExpiresAt\n                                        \n                                \n                                \n                                        \n                                            idTokenHeader\n                                        \n                                \n                                \n                                        \n                                            idTokenHeaderJson\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        idToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenClaims\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idTokenClaims:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenClaimsJson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idTokenClaimsJson:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenExpiresAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idTokenExpiresAt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idTokenHeader:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenHeaderJson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idTokenHeaderJson:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core'\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  public customHashFragment?: string\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  public disableOAuth2StateCheck?: boolean\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  public disableNonceCheck? = false\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  public preventClearHashAfterLogin? = false\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  public customRedirectUri?: string\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  public abstract debug(message?: any, ...optionalParams: any[]): void\n  public abstract info(message?: any, ...optionalParams: any[]): void\n  public abstract log(message?: any, ...optionalParams: any[]): void\n  public abstract warn(message?: any, ...optionalParams: any[]): void\n  public abstract error(message?: any, ...optionalParams: any[]): void\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  public abstract getItem(key: string): string | null\n  public abstract removeItem(key: string): void\n  public abstract setItem(key: string, data: string): void\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map()\n\n  public getItem(key: string): string {\n    return this.data.get(key)\n  }\n\n  public removeItem(key: string): void {\n    this.data.delete(key)\n  }\n\n  public setItem(key: string, data: string): void {\n    this.data.set(key, data)\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  public idToken: string\n  public accessToken: string\n  public idClaims?: object\n  public state?: string\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string\n  idTokenClaims: object\n  idTokenHeader: object\n  idTokenClaimsJson: string\n  idTokenHeaderJson: string\n  idTokenExpiresAt: number\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string\n  id_token: string\n  token_type: string\n  expires_in: number\n  refresh_token: string\n  scope: string\n  state?: string\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string\n  [key: string]: any\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string\n  authorization_endpoint: string\n  token_endpoint: string\n  token_endpoint_auth_methods_supported: string[]\n  token_endpoint_auth_signing_alg_values_supported: string[]\n  userinfo_endpoint: string\n  check_session_iframe: string\n  end_session_endpoint: string\n  jwks_uri: string\n  registration_endpoint: string\n  scopes_supported: string[]\n  response_types_supported: string[]\n  acr_values_supported: string[]\n  response_modes_supported: string[]\n  grant_types_supported: string[]\n  subject_types_supported: string[]\n  userinfo_signing_alg_values_supported: string[]\n  userinfo_encryption_alg_values_supported: string[]\n  userinfo_encryption_enc_values_supported: string[]\n  id_token_signing_alg_values_supported: string[]\n  id_token_encryption_alg_values_supported: string[]\n  id_token_encryption_enc_values_supported: string[]\n  request_object_signing_alg_values_supported: string[]\n  display_values_supported: string[]\n  claim_types_supported: string[]\n  claims_supported: string[]\n  claims_parameter_supported: boolean\n  service_documentation: string\n  ui_locales_supported: string[]\n  revocation_endpoint: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReceivedTokens.html":{"url":"classes/ReceivedTokens.html","title":"class - ReceivedTokens","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReceivedTokens\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the received tokens, the received state\nand the parsed claims from the id-token.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accessToken\n                            \n                            \n                                    Public\n                                    Optional\n                                idClaims\n                            \n                            \n                                    Public\n                                idToken\n                            \n                            \n                                    Public\n                                    Optional\n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        idClaims\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        idToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:106\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  public customHashFragment?: string\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  public disableOAuth2StateCheck?: boolean\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  public disableNonceCheck? = false\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  public preventClearHashAfterLogin? = false\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  public customRedirectUri?: string\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  public abstract debug(message?: any, ...optionalParams: any[]): void\n  public abstract info(message?: any, ...optionalParams: any[]): void\n  public abstract log(message?: any, ...optionalParams: any[]): void\n  public abstract warn(message?: any, ...optionalParams: any[]): void\n  public abstract error(message?: any, ...optionalParams: any[]): void\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  public abstract getItem(key: string): string | null\n  public abstract removeItem(key: string): void\n  public abstract setItem(key: string, data: string): void\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map()\n\n  public getItem(key: string): string {\n    return this.data.get(key)\n  }\n\n  public removeItem(key: string): void {\n    this.data.delete(key)\n  }\n\n  public setItem(key: string, data: string): void {\n    this.data.set(key, data)\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  public idToken: string\n  public accessToken: string\n  public idClaims?: object\n  public state?: string\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string\n  idTokenClaims: object\n  idTokenHeader: object\n  idTokenClaimsJson: string\n  idTokenHeaderJson: string\n  idTokenExpiresAt: number\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string\n  id_token: string\n  token_type: string\n  expires_in: number\n  refresh_token: string\n  scope: string\n  state?: string\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string\n  [key: string]: any\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string\n  authorization_endpoint: string\n  token_endpoint: string\n  token_endpoint_auth_methods_supported: string[]\n  token_endpoint_auth_signing_alg_values_supported: string[]\n  userinfo_endpoint: string\n  check_session_iframe: string\n  end_session_endpoint: string\n  jwks_uri: string\n  registration_endpoint: string\n  scopes_supported: string[]\n  response_types_supported: string[]\n  acr_values_supported: string[]\n  response_modes_supported: string[]\n  grant_types_supported: string[]\n  subject_types_supported: string[]\n  userinfo_signing_alg_values_supported: string[]\n  userinfo_encryption_alg_values_supported: string[]\n  userinfo_encryption_enc_values_supported: string[]\n  id_token_signing_alg_values_supported: string[]\n  id_token_encryption_alg_values_supported: string[]\n  id_token_encryption_enc_values_supported: string[]\n  request_object_signing_alg_values_supported: string[]\n  display_values_supported: string[]\n  claim_types_supported: string[]\n  claims_supported: string[]\n  claims_parameter_supported: boolean\n  service_documentation: string\n  ui_locales_supported: string[]\n  revocation_endpoint: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SystemDateTimeProvider.html":{"url":"injectables/SystemDateTimeProvider.html","title":"injectable - SystemDateTimeProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SystemDateTimeProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/date-time-provider.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DateTimeProvider\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                new\n                            \n                            \n                                    Public\n                                now\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        new\n                        \n                    \n                \n            \n            \n                \n                    \n                    new()\n                \n            \n\n\n            \n                \n                    Inherited from         DateTimeProvider\n\n                \n            \n            \n                \n                        Defined in         DateTimeProvider:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        now\n                        \n                    \n                \n            \n            \n                \n                    \n                    now()\n                \n            \n\n\n            \n                \n                    Inherited from         DateTimeProvider\n\n                \n            \n            \n                \n                        Defined in         DateTimeProvider:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\n\nexport abstract class DateTimeProvider {\n  public abstract now(): number\n  public abstract new(): Date\n}\n\n@Injectable()\nexport class SystemDateTimeProvider extends DateTimeProvider {\n  public now(): number {\n    return Date.now()\n  }\n\n  public new(): Date {\n    return new Date()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenResponse.html":{"url":"interfaces/TokenResponse.html","title":"interface - TokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the response from the token endpoint\nhttp://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                                \n                                        \n                                            expires_in\n                                        \n                                \n                                \n                                        \n                                            id_token\n                                        \n                                \n                                \n                                        \n                                            refresh_token\n                                        \n                                \n                                \n                                        \n                                            scope\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            token_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires_in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expires_in:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refresh_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scope:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core'\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  public customHashFragment?: string\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  public disableOAuth2StateCheck?: boolean\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  public disableNonceCheck? = false\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  public preventClearHashAfterLogin? = false\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  public customRedirectUri?: string\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  public abstract debug(message?: any, ...optionalParams: any[]): void\n  public abstract info(message?: any, ...optionalParams: any[]): void\n  public abstract log(message?: any, ...optionalParams: any[]): void\n  public abstract warn(message?: any, ...optionalParams: any[]): void\n  public abstract error(message?: any, ...optionalParams: any[]): void\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  public abstract getItem(key: string): string | null\n  public abstract removeItem(key: string): void\n  public abstract setItem(key: string, data: string): void\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map()\n\n  public getItem(key: string): string {\n    return this.data.get(key)\n  }\n\n  public removeItem(key: string): void {\n    this.data.delete(key)\n  }\n\n  public setItem(key: string, data: string): void {\n    this.data.set(key, data)\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  public idToken: string\n  public accessToken: string\n  public idClaims?: object\n  public state?: string\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string\n  idTokenClaims: object\n  idTokenHeader: object\n  idTokenClaimsJson: string\n  idTokenHeaderJson: string\n  idTokenExpiresAt: number\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string\n  id_token: string\n  token_type: string\n  expires_in: number\n  refresh_token: string\n  scope: string\n  state?: string\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string\n  [key: string]: any\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string\n  authorization_endpoint: string\n  token_endpoint: string\n  token_endpoint_auth_methods_supported: string[]\n  token_endpoint_auth_signing_alg_values_supported: string[]\n  userinfo_endpoint: string\n  check_session_iframe: string\n  end_session_endpoint: string\n  jwks_uri: string\n  registration_endpoint: string\n  scopes_supported: string[]\n  response_types_supported: string[]\n  acr_values_supported: string[]\n  response_modes_supported: string[]\n  grant_types_supported: string[]\n  subject_types_supported: string[]\n  userinfo_signing_alg_values_supported: string[]\n  userinfo_encryption_alg_values_supported: string[]\n  userinfo_encryption_enc_values_supported: string[]\n  id_token_signing_alg_values_supported: string[]\n  id_token_encryption_alg_values_supported: string[]\n  id_token_encryption_enc_values_supported: string[]\n  request_object_signing_alg_values_supported: string[]\n  display_values_supported: string[]\n  claim_types_supported: string[]\n  claims_supported: string[]\n  claims_parameter_supported: boolean\n  service_documentation: string\n  ui_locales_supported: string[]\n  revocation_endpoint: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UrlHelperService.html":{"url":"injectables/UrlHelperService.html","title":"injectable - UrlHelperService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UrlHelperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/url-helper.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHashFragmentParams\n                            \n                            \n                                    Public\n                                parseQueryString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getHashFragmentParams\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHashFragmentParams(customHashFragment?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/url-helper.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    customHashFragment\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        parseQueryString\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseQueryString(queryString: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/url-helper.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\n\n@Injectable()\nexport class UrlHelperService {\n  public getHashFragmentParams(customHashFragment?: string): object {\n    let hash = customHashFragment || window.location.hash\n\n    hash = decodeURIComponent(hash)\n\n    if (hash.indexOf('#') !== 0) {\n      return {}\n    }\n\n    const questionMarkPosition = hash.indexOf('?')\n\n    if (questionMarkPosition > -1) {\n      hash = hash.substr(questionMarkPosition + 1)\n    } else {\n      hash = hash.substr(1)\n    }\n\n    return this.parseQueryString(hash)\n  }\n\n  public parseQueryString(queryString: string): object {\n    if (!queryString) {\n      return {}\n    }\n\n    return queryString.split('&').reduce((data: object, pair) => {\n      let escapedKey: string\n      let escapedValue: string\n\n      const separatorIndex = pair.indexOf('=')\n\n      if (separatorIndex === -1) {\n        escapedKey = pair\n        escapedValue = null\n      } else {\n        escapedKey = pair.substr(0, separatorIndex)\n        escapedValue = pair.substr(separatorIndex + 1)\n      }\n\n      let key = decodeURIComponent(escapedKey)\n      const value = decodeURIComponent(escapedValue)\n\n      if (key.substr(0, 1) === '/') {\n        key = key.substr(1)\n      }\n\n      data[key] = value\n      return { ...data }\n    }, {})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInfo.html":{"url":"interfaces/UserInfo.html","title":"interface - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the response from the user info endpoint\nhttp://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/types.ts:140\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core'\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  public customHashFragment?: string\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  public disableOAuth2StateCheck?: boolean\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  public disableNonceCheck? = false\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  public preventClearHashAfterLogin? = false\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  public customRedirectUri?: string\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  public abstract debug(message?: any, ...optionalParams: any[]): void\n  public abstract info(message?: any, ...optionalParams: any[]): void\n  public abstract log(message?: any, ...optionalParams: any[]): void\n  public abstract warn(message?: any, ...optionalParams: any[]): void\n  public abstract error(message?: any, ...optionalParams: any[]): void\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  public abstract getItem(key: string): string | null\n  public abstract removeItem(key: string): void\n  public abstract setItem(key: string, data: string): void\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map()\n\n  public getItem(key: string): string {\n    return this.data.get(key)\n  }\n\n  public removeItem(key: string): void {\n    this.data.delete(key)\n  }\n\n  public setItem(key: string, data: string): void {\n    this.data.set(key, data)\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  public idToken: string\n  public accessToken: string\n  public idClaims?: object\n  public state?: string\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string\n  idTokenClaims: object\n  idTokenHeader: object\n  idTokenClaimsJson: string\n  idTokenHeaderJson: string\n  idTokenExpiresAt: number\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string\n  id_token: string\n  token_type: string\n  expires_in: number\n  refresh_token: string\n  scope: string\n  state?: string\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string\n  [key: string]: any\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string\n  authorization_endpoint: string\n  token_endpoint: string\n  token_endpoint_auth_methods_supported: string[]\n  token_endpoint_auth_signing_alg_values_supported: string[]\n  userinfo_endpoint: string\n  check_session_iframe: string\n  end_session_endpoint: string\n  jwks_uri: string\n  registration_endpoint: string\n  scopes_supported: string[]\n  response_types_supported: string[]\n  acr_values_supported: string[]\n  response_modes_supported: string[]\n  grant_types_supported: string[]\n  subject_types_supported: string[]\n  userinfo_signing_alg_values_supported: string[]\n  userinfo_encryption_alg_values_supported: string[]\n  userinfo_encryption_enc_values_supported: string[]\n  id_token_signing_alg_values_supported: string[]\n  id_token_encryption_alg_values_supported: string[]\n  id_token_encryption_enc_values_supported: string[]\n  request_object_signing_alg_values_supported: string[]\n  display_values_supported: string[]\n  claim_types_supported: string[]\n  claims_supported: string[]\n  claims_parameter_supported: boolean\n  service_documentation: string\n  ui_locales_supported: string[]\n  revocation_endpoint: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationHandler.html":{"url":"classes/ValidationHandler.html","title":"class - ValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/validation-handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for Handlers that are hooked in to\nvalidate tokens.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                validateAtHash\n                            \n                            \n                                    Public\n                                    Abstract\n                                validateSignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        validateAtHash\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateAtHash(validationParams: ValidationParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/validation-handler.ts:27\n                \n            \n\n\n            \n                \n                    Validates the at_hash in an id_token against the received access_token.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationParams\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        validateSignature\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSignature(validationParams: ValidationParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/validation-handler.ts:22\n                \n            \n\n\n            \n                \n                    Validates the signature of an id_token.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationParams\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of } from 'rxjs'\nimport { base64UrlEncode } from '../base64-helper'\nimport { HashHandler } from './hash-handler'\n\nexport interface ValidationParams {\n  idToken: string\n  accessToken: string\n  idTokenHeader: object\n  idTokenClaims: object\n  jwks: object\n  loadKeys: () => Observable\n}\n\n/**\n * Interface for Handlers that are hooked in to\n * validate tokens.\n */\nexport abstract class ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  public abstract validateSignature(validationParams: ValidationParams): Observable\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  public abstract validateAtHash(validationParams: ValidationParams): Observable\n}\n\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n */\nexport abstract class AbstractValidationHandler implements ValidationHandler, HashHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  public abstract validateSignature(validationParams: ValidationParams): Observable\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  public validateAtHash(params: ValidationParams): Observable {\n    const hashAlg = this.inferHashAlgorithm(params.idTokenHeader)\n    const tokenHash = this.calcHash(params.accessToken, hashAlg) // sha256(accessToken, { asString: true })\n    const leftMostHalf = tokenHash.substr(0, tokenHash.length / 2)\n\n    const atHash = base64UrlEncode(leftMostHalf)\n\n    const claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '')\n\n    if (atHash !== claimsAtHash) {\n      console.error('exptected at_hash: ' + atHash)\n      console.error('actual at_hash: ' + claimsAtHash)\n    }\n\n    return of(atHash === claimsAtHash)\n  }\n\n  /**\n   * Infers the name of the hash algorithm to use\n   * from the alg field of an id_token.\n   *\n   * @param jwtHeader the id_token's parsed header\n   */\n  protected inferHashAlgorithm(jwtHeader: object): string {\n    const alg: string = jwtHeader['alg']\n\n    if (!alg.match(/^.S[0-9]{3}$/)) {\n      throw new Error('Algorithm not supported: ' + alg)\n    }\n\n    return 'sha-' + alg.substr(2)\n  }\n\n  /**\n   * Calculates the hash for the passed value by using\n   * the passed hash algorithm.\n   *\n   * @param valueToHash\n   * @param algorithm\n   */\n  protected abstract calcHash(valueToHash: string, algorithm: string): string\n\n  public toSha256(valueToHash: string): string {\n    return this.calcHash(valueToHash, 'sha256')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationParams.html":{"url":"interfaces/ValidationParams.html","title":"interface - ValidationParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/validation-handler.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            idToken\n                                        \n                                \n                                \n                                        \n                                            idTokenClaims\n                                        \n                                \n                                \n                                        \n                                            idTokenHeader\n                                        \n                                \n                                \n                                        \n                                            jwks\n                                        \n                                \n                                \n                                        \n                                            loadKeys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenClaims\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idTokenClaims:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idTokenHeader:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwks:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadKeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loadKeys:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of } from 'rxjs'\nimport { base64UrlEncode } from '../base64-helper'\nimport { HashHandler } from './hash-handler'\n\nexport interface ValidationParams {\n  idToken: string\n  accessToken: string\n  idTokenHeader: object\n  idTokenClaims: object\n  jwks: object\n  loadKeys: () => Observable\n}\n\n/**\n * Interface for Handlers that are hooked in to\n * validate tokens.\n */\nexport abstract class ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  public abstract validateSignature(validationParams: ValidationParams): Observable\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  public abstract validateAtHash(validationParams: ValidationParams): Observable\n}\n\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n */\nexport abstract class AbstractValidationHandler implements ValidationHandler, HashHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  public abstract validateSignature(validationParams: ValidationParams): Observable\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  public validateAtHash(params: ValidationParams): Observable {\n    const hashAlg = this.inferHashAlgorithm(params.idTokenHeader)\n    const tokenHash = this.calcHash(params.accessToken, hashAlg) // sha256(accessToken, { asString: true })\n    const leftMostHalf = tokenHash.substr(0, tokenHash.length / 2)\n\n    const atHash = base64UrlEncode(leftMostHalf)\n\n    const claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '')\n\n    if (atHash !== claimsAtHash) {\n      console.error('exptected at_hash: ' + atHash)\n      console.error('actual at_hash: ' + claimsAtHash)\n    }\n\n    return of(atHash === claimsAtHash)\n  }\n\n  /**\n   * Infers the name of the hash algorithm to use\n   * from the alg field of an id_token.\n   *\n   * @param jwtHeader the id_token's parsed header\n   */\n  protected inferHashAlgorithm(jwtHeader: object): string {\n    const alg: string = jwtHeader['alg']\n\n    if (!alg.match(/^.S[0-9]{3}$/)) {\n      throw new Error('Algorithm not supported: ' + alg)\n    }\n\n    return 'sha-' + alg.substr(2)\n  }\n\n  /**\n   * Calculates the hash for the passed value by using\n   * the passed hash algorithm.\n   *\n   * @param valueToHash\n   * @param algorithm\n   */\n  protected abstract calcHash(valueToHash: string, algorithm: string): string\n\n  public toSha256(valueToHash: string): string {\n    return this.calcHash(valueToHash, 'sha256')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WebHttpUrlEncodingCodec.html":{"url":"classes/WebHttpUrlEncodingCodec.html","title":"class - WebHttpUrlEncodingCodec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WebHttpUrlEncodingCodec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/encoder.ts\n        \n\n\n            \n                Description\n            \n            \n                This custom encoder allows charactes like +, % and / to be used in passwords\n\n            \n\n\n            \n                Implements\n            \n            \n                            HttpParameterCodec\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                decodeKey\n                            \n                            \n                                    Public\n                                decodeValue\n                            \n                            \n                                    Public\n                                encodeKey\n                            \n                            \n                                    Public\n                                encodeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        decodeKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    decodeKey(k: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/encoder.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        decodeValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    decodeValue(v: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/encoder.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        encodeKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    encodeKey(k: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/encoder.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        encodeValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    encodeValue(v: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/encoder.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpParameterCodec } from '@angular/common/http'\n/**\n * This custom encoder allows charactes like +, % and / to be used in passwords\n */\nexport class WebHttpUrlEncodingCodec implements HttpParameterCodec {\n  public encodeKey(k: string): string {\n    return encodeURIComponent(k)\n  }\n\n  public encodeValue(v: string): string {\n    return encodeURIComponent(v)\n  }\n\n  public decodeKey(k: string): string {\n    return decodeURIComponent(k)\n  }\n\n  public decodeValue(v: string) {\n    return decodeURIComponent(v)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n12.0.0 (2021-07-16)\nBug Fixes\n\n#728 (51e438a), closes /github.com/manfredsteyer/angular-oauth2-oidc/issues/728#issuecomment-808969225\nclear location.hash only if it is present (c2b2753), closes #970\ncorrectly handle ? and & in location replacements (70fd826)\nDisable nonce validation for id token for e2e tests (f5bd96c)\nfix scope/state removal for implicit flow with hash (9e257d0)\nin code flow pass options to error handler (c9a2c55), closes #972\njwks: update jsrsasign dependency to 10.2.0 (a05bd8a), closes #1061\nmultiplying calls to token endpoint in code flow (59f65d2)\nRefresh tokens with a plus sign get corrupted before sending to token endpoint (2204c5a)\nrevoketokenandlogout: 'customParameters' should accept boolean (9761bad)\nWhile Using POPUP mode, we click on login button multiple time it opens multiple popup instead of focusing already opened (bbff95b)\n\nFeatures\n\nintroduce DateTimeProvider (0c0a4a7)\nlogout: postLogoutRedirectUri should not default to redirectUri (ff7d1d9)\nsupport JWT response on userinfo endpoint (da16494)\nCustom grant type added (https://github.com/manfredsteyer/angular-oauth2-oidc/pull/919)\nListen for storage to receive auth hash from popup (https://github.com/manfredsteyer/angular-oauth2-oidc/pull/935)\nAdd event for unchanged session (https://github.com/manfredsteyer/angular-oauth2-oidc/pull/936)\nAdd loginHint to codeFlow (https://github.com/manfredsteyer/angular-oauth2-oidc/pull/938)\nAdd a windowRef option to initLoginFlowInPopup to prevent the window from beeing blocked by popup blockers (https://github.com/manfredsteyer/angular-oauth2-oidc/pull/965)\nUse configured revocationEndpoint by default (https://github.com/manfredsteyer/angular-oauth2-oidc/pull/1020)\n\n10.0.0 (2020-06-30)\n\nchore: increase version in package.json (84d95a7)\nchore: make version 9.2 ready (415e053)\nchore(deps): bump jsrsasign from 8.0.12 to 8.0.19 (4def1c1)\nchore(deps): bump websocket-extensions from 0.1.3 to 0.1.4 (cae715e)\nchore(release): 9.2.1 (7a15194)\nchore(release): 9.2.2 (40f5ae5)\nchore(release): 9.3.0 (f42f943)\nrefactor: inline js-sha256 (ca435c0)\nrefactor: remove dep on contributer-table (b486546)\nrefactor: use esm for sha-256 (92ee76d)\nfeat(oauth-service): pass custom url params to logOut (4607d55)\nfeat(oauth-service): revokeTokenAndLogout with cust params (026dcb3)\n'disableAtHashCheck' by default if responseType is 'id_token' (169d749)\n#825: (38c7c3f), closes #825\n#825: (fb3afe4), closes #825\nFix issue with ambient type in constructor when running Universal with Ivy (9e95c73)\nFix typo in code-flow.md (1816e7b)\nReplaced document by this.document #773 (678ff95), closes #773\nresponse_types including 'code' gets a code_challenge (58a8132)\nUpdate code-flow.md (5c5288c)\ndocs(readme): use our own idsvr (65c2b95)\nfix: loadDiscoveryDocumentAndLogin should pass state into initLoginFlow (132c624)\nfix(lib): copying LICENSE file to output build (e89aa6d)\n\n10.0.0 (2020-06-30)\nBug Fixes\n\nloadDiscoveryDocumentAndLogin should pass state into initLoginFlow (132c624)\nlib: copying LICENSE file to output build (e89aa6d)\n\nFeatures\n\noauth-service: pass custom url params to logOut (4607d55)\noauth-service: revokeTokenAndLogout with cust params (026dcb3)\n\n10.0.0 (2020-06-30)\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\nFeatures\n\nautomatic silent refresh: stopAutomaticRefresh stops all timers. (8ab853b)\ncode-flow: allow using implicit flow by setting useSilentRefresh to true (93902a5)\noauth-service: pass custom url params to logOut (4607d55)\noauth-service: revokeTokenAndLogout with cust params (026dcb3)\nsample: also use new idsvr 4 for implicit flow demo to prevent issues with same site cookies (58c6354)\nsession checks: Session checks work now for code flow too. Pls see Docs for details. (4bf8901)\ntoken-revocation: also revoke refresh_token (429ed2c)\nremove jsrsasign dependancy (77cb37a)\nUpgrade to angular 8 (31c6273)\n\nBug Fixes\n\nloadDiscoveryDocumentAndLogin should pass state into initLoginFlow (132c624)\nlib: copying LICENSE file to output build (e89aa6d)\nrevoketokenandlogout: explicit way to revoke an access token (c799ead)\nsample: make sense of the guard (1cae011)\n#687 (e2599e0)\ncode flow: Fixed code flow for IE 11 (0f03d39)\nsample: use hash-based routing (3f44eca)\nsession state: save session_state also when using code flow (8fa99ff)\nstate: passing an url with a querystring as the state, e. g. url?x=1 (71b705c)\nmissing HttpModule dependency (7eac8ae)\nrun tokensetup outside ngzone (07bb62d)\ntypo (3d331f2)\n\n9.2.2 (2020-05-09)\n9.2.1 (2020-04-23)\n9.2.0 (2020-03-28)\nFeatures\n\nrevoketokenandlogout: explicit way to revoke an access token according to RFC 7009 (c799ead)\n\ntoken-revocation: also revoke refresh_token (429ed2c)\n\n\nBug Fixes\n\nsample: make sense of the guard (1cae011)\n\n9.1.0 (2020-03-23)\nFeatures\n\nautomatic silent refresh: stopAutomaticRefresh stops all timers. (8ab853b)\ncode-flow: allow using silent refresh by setting useSilentRefresh to true (93902a5)\nsample: Also use new Identity Server 4 for implicit flow demo to prevent issues with same site cookies (58c6354)\nsession checks: Session checks work now for code flow too. Please see docs for details. (4bf8901)\n\nBug Fixes\n\ncode flow: Fixed code flow for IE 11 (0f03d39)\nsample: use hash-based routing (3f44eca)\nsession state: save session_state also when using code flow (8fa99ff)\nstate: passing an url with a querystring as the state, e. g. url?x=1 (71b705c)\n#687 (e2599e0)\nmissing HttpModule dependency (7eac8ae)\nrun tokensetup outside ngzone (07bb62d)\ntypo (3d331f2)\n\nPull Requests\n\nUpdate sample app and silent-refresh.html script #755, linjie997\nAdd optional state parameter for logout, pmccloghrylaing\nfix customHashFragment usage in tryLoginCodeFlow, roblabat\nreplace document with injectionToken #741, d-moos\nSupport predefined custom parameters extraction from the TokenResponse, vdveer\nFixed not working silent refresh when using 'code' #735, ErazerBrecht\n\nThanks\nBig Thanks to all contributers: Brecht Carlier, Daniel Moos, Jie Lin, Manfred Steyer, Phil McCloghry-Laing, robin labat, vdveer\nAlso, big thanks to jeroenheijmans for doing an awesome job with moderating and analyzing the issues!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 13.0.1\n        \n            @angular/common : 13.0.1\n        \n            @angular/compiler : 13.0.1\n        \n            @angular/core : 13.0.1\n        \n            @angular/elements : 13.0.1\n        \n            @angular/forms : 13.0.1\n        \n            @angular/platform-browser : 13.0.1\n        \n            @angular/platform-browser-dynamic : 13.0.1\n        \n            @angular/router : 13.0.1\n        \n            @popperjs/core : ^2.9.2\n        \n            @webcomponents/custom-elements : ^1.4.3\n        \n            angular-oauth2-oidc : ^10.0.3\n        \n            base64-js : ^1.5.1\n        \n            bootstrap : ^3.4.1\n        \n            fast-sha256 : ^1.3.0\n        \n            jsrsasign : ^10.3.0\n        \n            ngx-semantic-version : ^2.3.0\n        \n            rxjs : ^6.5.3\n        \n            rxjs-compat : ^6.6.7\n        \n            text-encoder-lite : ^2.0.0\n        \n            tsickle : ^0.43.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nangular-oauth2-oidc\nSupport for OAuth 2 and OpenId Connect (OIDC) in Angular. Already prepared for the upcoming OAuth 2.1.\n\nCredits\n\njsrsasign for validating token signature and for hashing\nIdentity Server for testing with an .NET/.NET Core Backend\nKeycloak (Redhat) for testing with Java\nAuth0\n\nResources\n\nSources and Sample: https://github.com/manfredsteyer/angular-oauth2-oidc\nSource Code Documentation: https://manfredsteyer.github.io/angular-oauth2-oidc/docs\nCommunity-provided sample implementation: https://github.com/jeroenheijmans/sample-angular-oauth2-oidc-with-auth-guards/\n\nTested Environment\nSuccessfully tested with Angular 4.3 to Angular 12 and its Router, PathLocationStrategy as well as HashLocationStrategy and CommonJS-Bundling via webpack. \nAt server side we've used IdentityServer (.NET / .NET Core), Redhat's Keycloak (Java), and Auth0 (Auth0 is officially supported since version 10 of this lib). For Auth0, please have a look into the respective documentation page here.\nFor using this library with Azure Active Directory (Azure AD), we recommend an additional look to this blog post and the example linked at the end of this blog post.\nAlso, the Okta community created some guidelines on how to use this lib with Okta. See the links at the end of this page for more information.\nAngular 13: Use 13.x versions of this library (should also work with older Angular versions!).\nAngular 12: Use 12.x versions of this library (should also work with older Angular versions!).\nAngular 11: Use 10.x versions of this library (should also work with older Angular versions!).\nAngular 10: Use 10.x versions of this library (should also work with older Angular versions!).\nAngular 9: Use 9.x versions of this library (should also work with older Angular versions!).\nAngular 8: Use 8.x versions of this library.\nAngular 7: Use 7.x versions of this library.\nAngular 6: Use Version 4.x of this library. Version 4.x was tested with Angular 6. You can also try the newer version 5.x of this library which has a much smaller bundle size.\nAngular 5.x or 4.3: If you need support for Angular \nRelease Cycle\n\nWe plan one major release for each Angular version\nWill contain new features\nWill contain bug fixes and PRs\n\n\nCritical bugfixes on demand\n\nContributions\n\nFeel free to file pull requests\n\nThe issues contain some ideas for PRs and enhancements (see labels)\n\nIf you want to contribute to the docs, you can do so in the docs-src folder. Make sure you update summary.json as well. Then generate the docs with the following commands:\nnpm install -g @compodoc/compodoc\nnpm run docs\n\nFeatures\n\nLogging in via Code Flow + PKCE\nHence, you are safe for the upcoming OAuth 2.1\n\n\nLogging in via Implicit Flow (where a user is redirected to Identity Provider)\n\"Logging in\" via Password Flow (where a user enters their password into the client)\nToken Refresh for all supported flows\nAutomatically refreshing a token when/some time before it expires\nQuerying Userinfo Endpoint\nQuerying Discovery Document to ease configuration\nValidating claims of the id_token regarding the specs\nHook for further custom validations\nSingle-Sign-Out by redirecting to the auth-server's logout-endpoint\nTested with all modern browsers and IE\nToken Revocation according to RFC 7009\n\nSample-Auth-Server\nYou can use the OIDC-Sample-Server used in our examples. It assumes, that your Web-App runs on http://localhost:4200\nUsername/Password:\n\nmax/geheim\nbob/bob\nalice/alice\n\nclientIds:\n\nspa (Code Flow + PKCE)\nimplicit (implicit flow)\n\nredirectUris:\n\nlocalhost:[4200-4202]\nlocalhost:[4200-4202]/index.html\nlocalhost:[4200-4202]/silent-refresh.html\n\nInstalling\nnpm i angular-oauth2-oidc --saveImporting the NgModule\nimport { HttpClientModule } from '@angular/common/http';\nimport { OAuthModule } from 'angular-oauth2-oidc';\n// etc.\n\n@NgModule({\n  imports: [\n    // etc.\n    HttpClientModule,\n    OAuthModule.forRoot()\n  ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    // etc.\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule {\n}Logging in\nSince Version 8, this library supports code flow and PKCE to align with the current draft of the OAuth 2.0 Security Best Current Practice document. This is also the foundation of the upcoming OAuth 2.1.\nTo configure your solution for code flow + PKCE you have to set the responseType to code:\n  import { AuthConfig } from 'angular-oauth2-oidc';\n\n  export const authCodeFlowConfig: AuthConfig = {\n    // Url of the Identity Provider\n    issuer: 'https://idsvr4.azurewebsites.net',\n\n    // URL of the SPA to redirect the user to after login\n    redirectUri: window.location.origin + '/index.html',\n\n    // The SPA's id. The SPA is registerd with this id at the auth-server\n    // clientId: 'server.code',\n    clientId: 'spa',\n\n    // Just needed if your auth server demands a secret. In general, this\n    // is a sign that the auth server is not configured with SPAs in mind\n    // and it might not enforce further best practices vital for security\n    // such applications.\n    // dummyClientSecret: 'secret',\n\n    responseType: 'code',\n\n    // set the scope for the permissions the client should request\n    // The first four are defined by OIDC.\n    // Important: Request offline_access to get a refresh token\n    // The api scope is a usecase specific one\n    scope: 'openid profile email offline_access api',\n\n    showDebugInformation: true,\n  };After this, you can initialize the code flow using:\nthis.oauthService.initCodeFlow();There is also a convenience method initLoginFlow which initializes either the code flow or the implicit flow depending on your configuration.\nthis.oauthService.initLoginFlow();Also -- as shown in the readme -- you have to execute the following code when bootstrapping to make the library to fetch the token:\nthis.oauthService.configure(authCodeFlowConfig);\nthis.oauthService.loadDiscoveryDocumentAndTryLogin();Logging out\nThe logOut method clears the used token store (by default sessionStorage) and forwards the user to the auth servers logout endpoint if one was configured (manually or via the discovery document).\nthis.oauthService.logOut();If you want to revoke the existing access token and the existing refresh token before logging out, use the following method:\nthis.oauthService.revokeTokenAndLogout();Skipping the Login Form\nIf you don't want to display a login form that tells the user that they are redirected to the identity server, you can use the convenience function this.oauthService.loadDiscoveryDocumentAndLogin(); instead of this.oauthService.loadDiscoveryDocumentAndTryLogin(); when setting up the library.\nThis directly redirects the user to the identity server if there are no valid tokens. Ensure you have your issuer set to your discovery document endpoint!\nCalling a Web API with an Access Token\nYou can automate this task by switching sendAccessToken on and by setting allowedUrls to an array with prefixes for the respective URLs. Use lower case for the prefixes.\nOAuthModule.forRoot({\n    resourceServer: {\n        allowedUrls: ['http://www.angular.at/api'],\n        sendAccessToken: true\n    }\n})If you need more versatility, you can look in the documentation how to setup a custom interceptor.\nToken Refresh\nSee docs: https://manfredsteyer.github.io/angular-oauth2-oidc/docs/additional-documentation/refreshing-a-token.html\nRouting\nIf you use the PathLocationStrategy (which is on by default) and have a general catch-all-route (path: '**') you should be fine. Otherwise look up the section Routing with the HashStrategy in the documentation.\nImplicit Flow\nNowadays, using code flow + PKCE -- as shown above -- is the recommended OAuth 2/OIDC flow for SPAs. To use the older implicit flow, lookup this docs: https://manfredsteyer.github.io/angular-oauth2-oidc/docs/additional-documentation/using-implicit-flow.html\nMore Documentation (!)\nSee the documentation for more information about this library.\nBreaking Change in Version 9\nWith regards to tree shaking, beginning with version 9, the JwksValidationHandler has been moved to a library of its own. If you need it for implementing implicit flow, please install it using npm:\nnpm i angular-oauth2-oidc-jwks --saveAfter that, you can import it into your application by using this:\nimport { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';instead of that:\nimport { JwksValidationHandler } from 'angular-oauth2-oidc';Please note, that this dependency is not needed for the code flow, which is nowadays the recommended flow for single page applications. This also results in smaller bundle sizes.\nBreaking change in 9.1.0\nThe use of encodeURIComponent on the argument passed to initImplicitFlow and its Code Flow counterparts was mandatory before this version.\nSince that was considered a bug, the need to do so was removed.\nNow the reverse is true if you're upgrading from before 9.0.0: you need to remove any call to encode URI components in your own application, as the library will now do it for you.\nTutorials\n\nTutorial with Demo Servers available online\nAngular Authentication with OpenID Connect and Okta in 20 Minutes\nAdd Authentication to Your Angular PWA\nBuild an Ionic App with User Authentication\nOn-Site Workshops\nAngular 6 with Auth0 using this library\n\nThanks to all Contributors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2017 Manfred Steyer\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        OAuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    19 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 13.0.0\n        \n            License : MIT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EventType   (projects/.../events.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/events.ts\n    \n    \n        \n            \n                \n                    \n                    EventType\n                \n            \n            \n                \n                        \"discovery_document_loaded\" | \"jwks_load_error\" | \"invalid_nonce_in_state\" | \"discovery_document_load_error\" | \"discovery_document_validation_error\" | \"user_profile_loaded\" | \"user_profile_load_error\" | \"token_received\" | \"token_error\" | \"code_error\" | \"token_refreshed\" | \"token_refresh_error\" | \"silent_refresh_error\" | \"silently_refreshed\" | \"silent_refresh_timeout\" | \"token_validation_error\" | \"token_expires\" | \"session_changed\" | \"session_error\" | \"session_terminated\" | \"session_unchanged\" | \"logout\" | \"popup_closed\" | \"popup_blocked\" | \"token_revoke_error\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AUTH_CONFIG   (projects/.../tokens.ts)\n                        \n                        \n                            b64DecodeUnicode   (projects/.../base64-helper.ts)\n                        \n                        \n                            base64UrlEncode   (projects/.../base64-helper.ts)\n                        \n                        \n                            createDefaultLogger   (projects/.../factories.ts)\n                        \n                        \n                            createDefaultStorage   (projects/.../factories.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/tokens.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('AUTH_CONFIG')\n                    \n                \n\n\n        \n    \n\n    projects/lib/src/base64-helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        b64DecodeUnicode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (base64: string) => Buffer.from(base64, 'base64url').toString('utf8')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        base64UrlEncode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (str: string): string => Buffer.from(str).toString('base64url')\n                    \n                \n\n\n        \n    \n\n    projects/lib/src/factories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createDefaultLogger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => console\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createDefaultStorage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => (typeof sessionStorage !== 'undefined' ? sessionStorage : new MemoryStorage())\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/getting-started.html":{"url":"additional-documentation/getting-started.html","title":"additional-page - Getting Started","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGetting Started\nPlease find the Getting Started Guide in the README above.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/preserving-state-(like-the-requested-url).html":{"url":"additional-documentation/preserving-state-(like-the-requested-url).html","title":"additional-page - Preserving State (like the Requested URL)","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPreserving State (like the Requested URL)\nWhen calling initImplicitFlow, you can pass an optional state which could be the requested url:\nthis.oauthService.initImplicitFlow('http://www.myurl.com/x/y/z');After login succeeded, you can read this state:\nthis.oauthService.tryLogin({\n    onTokenReceived: (info) => {\n        console.debug('state', info.state);\n    }\n})\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/refreshing-a-token.html":{"url":"additional-documentation/refreshing-a-token.html","title":"additional-page - Refreshing a Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRefreshing a Token using Code Flow (not Implicit Flow!)\nWhen using code flow, you can get an refresh_token. While the original standard DOES NOT allow this for SPAs, the mentioned OAuth 2.0 Security Best Current Practice document proposes to ease this limitation. However, it specifies a list of requirements one should take care about before using refresh_tokens. Please make sure you respect those requirements.\nPlease also note, that you have to request the offline_access scope to get a refresh token.\nTo refresh your token, just call the refreshToken method:\nthis.oauthService.refreshToken();Automatically refreshing a token when/ before it expires (Code Flow and Implicit Flow)\nTo automatically refresh a token when/ some time before it expires, just call the following method after configuring the OAuthService:\nthis.oauthService.setupAutomaticSilentRefresh();By default, this event is fired after 75% of the token's life time is over. You can adjust this factor by setting the property timeoutFactor to a value between 0 and 1. For instance, 0.5 means, that the event is fired after half of the life time is over and 0.33 triggers the event after a third.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/silent-refresh.html":{"url":"additional-documentation/silent-refresh.html","title":"additional-page - Silent Refresh","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRefreshing when using Implicit Flow (Implicit Flow and Code Flow)\nNotes for Code Flow: You can also use this strategy for refreshing tokens when using code flow. However, please note, the strategy described within Token Refresh is far easier in this case.\nTo refresh your tokens when using implicit flow you can use a silent refresh. This is a well-known solution that compensates the fact that implicit flow does not allow for issuing a refresh token. It uses a hidden iframe to get another token from the auth server. When the user is there still logged in (by using a cookie) it will respond without user interaction and provide new tokens.\nTo use this approach, setup a redirect uri for the silent refresh.\nFor this, you can set the property silentRefreshRedirectUri in the config object:\n// This api will come in the next version\n\nimport { AuthConfig } from 'angular-oauth2-oidc';\n\nexport const authConfig: AuthConfig = {\n\n  // Url of the Identity Provider\n  issuer: 'https://steyer-identity-server.azurewebsites.net/identity',\n\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.origin + '/index.html',\n\n  // URL of the SPA to redirect the user after silent refresh\n  silentRefreshRedirectUri: window.location.origin + '/silent-refresh.html',\n\n  // defaults to true for implicit flow and false for code flow\n  // as for code code the default is using a refresh_token\n  // Also see docs section 'Token Refresh'\n  useSilentRefresh: true,\n\n  // The SPA's id. The SPA is registerd with this id at the auth-server\n  clientId: 'spa-demo',\n\n  // set the scope for the permissions the client should request\n  // The first three are defined by OIDC. The 4th is a usecase-specific one\n  scope: 'openid profile email voucher',\n}As an alternative, you can set the same property directly with the OAuthService:\nthis.oauthService.silentRefreshRedirectUri = window.location.origin + \"/silent-refresh.html\";Please keep in mind that this uri has to be configured at the auth-server too.\nThis file is loaded into the hidden iframe after getting new tokens. Its only task is to send the received tokens to the main application:\n\n\n    \n        (window.opener || window.parent).postMessage(location.hash || ('#' + location.search), location.origin);\n    \n\nThis simple implementation within silent-refresh.html is sufficient in most cases. It takes care of the hash fragment as well as of the query string (property search). For edge cases you need to check if the received hash fragment is a token response. For this, please go with the following more advanced implementation:\n\n    \n        \n            var checks = [/[\\?|&|#]code=/, /[\\?|&|#]error=/, /[\\?|&|#]token=/, /[\\?|&|#]id_token=/];\n\n            function isResponse(str) {\n                if (!str) return false;\n                for(var i=0; i\n    \nThe above example checks if the message in the URL (either hash or query string) is indeed a message returned with a response from an authentication provider and not an arbitrary value and then attempts to forward this message to a parent widow either by .parent (when this html is loaded in an iframe as a result of silent refresh) or by .opener (when the html is loaded into a popup during initial login) or finally using a storage event (as a fallback for complex cases, e.g. initial login in a popup with a cross-domain auth provider).\nPlease make sure that this file is copied to your output directory by your build task. When using the CLI you can define it as an asset for this. For this, you have to add the following line to the file .angular-cli.json:\n\"assets\": [\n    [...],\n    \"silent-refresh.html\"\n],To perform a silent refresh, just call the following method:\nthis\n    .oauthService\n    .silentRefresh()\n    .then(info => console.debug('refresh ok', info))\n    .catch(err => console.error('refresh error', err));When there is an error in the iframe that prevents the communication with the main application, silentRefresh will give you a timeout. To configure the timespan for this, you can set the property silentRefreshTimeout (msec). The default value is 20.000 (20 seconds).\nAutomatically refreshing a token when/ before it expires (Code Flow and Implicit Flow)\nTo automatically refresh a token when/ some time before it expires, just call the following method after configuring the OAuthService:\nthis.oauthService.setupAutomaticSilentRefresh();By default, this event is fired after 75% of the token's life time is over. You can adjust this factor by setting the property timeoutFactor to a value between 0 and 1. For instance, 0.5 means, that the event is fired after half of the life time is over and 0.33 triggers the event after a third.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/token-refresh.html":{"url":"additional-documentation/token-refresh.html","title":"additional-page - Token Refresh","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRefreshing a Token using Code Flow (not Implicit Flow!)\nWhen using code flow, you can get an refresh_token. While the original standard DOES NOT allow this for SPAs, the mentioned OAuth 2.0 Security Best Current Practice document proposes to ease this limitation. However, it specifies a list of requirements one should take care about before using refresh_tokens. Please make sure you respect those requirements.\nPlease also note, that you have to request the offline_access scope to get a refresh token.\nTo refresh your token, just call the refreshToken method:\nthis.oauthService.refreshToken();Automatically refreshing a token when/ before it expires (Code Flow and Implicit Flow)\nTo automatically refresh a token when/ some time before it expires, just call the following method after configuring the OAuthService:\nthis.oauthService.setupAutomaticSilentRefresh();By default, this event is fired after 75% of the token's life time is over. You can adjust this factor by setting the property timeoutFactor to a value between 0 and 1. For instance, 0.5 means, that the event is fired after half of the life time is over and 0.33 triggers the event after a third.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/working-with-httpinterceptors.html":{"url":"additional-documentation/working-with-httpinterceptors.html","title":"additional-page - Working with HttpInterceptors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInterceptors\nSince 3.1 the library uses a default HttpInterceptor that takes care about transmitting the access_token to the resource server and about error handling for security related errors (HTTP status codes 401 and 403) received from the resource server. To put in on, just set sendAccessToken to true and set allowedUrls to an array with prefixes for the respective urls. Use lower case for the prefixes:\nOAuthModule.forRoot({\n    resourceServer: {\n        allowedUrls: ['http://www.angular.at/api'],\n        sendAccessToken: true\n    }\n})You can provide an error handler for the urls white listed here by provding a service for the token OAuthResourceServerErrorHandler.\nTo implement such a service, implement the abstract class OAuthResourceServerErrorHandler. The following example shows the default implemantion that just passes the cought error through:\nexport class OAuthNoopResourceServerErrorHandler implements OAuthResourceServerErrorHandler {\n    \n    handleError(err: HttpResponse): Observable {\n        return _throw(err);\n    }\n\n}Custom Interceptors\nFeel free to write custom interceptors but keep in mind that injecting the OAuthService into them creates a circular dependency which leads to an error. The easiest way to prevent this is to use the OAuthStorage directly which also provides the access_token:\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { OAuthService, OAuthStorage } from 'angular-oauth2-oidc';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport {Observable} from 'rxjs/Observable';\nimport { OAuthResourceServerErrorHandler } from \"./resource-server-error-handler\";\nimport { OAuthModuleConfig } from \"../oauth-module.config\";\n\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class DefaultOAuthInterceptor implements HttpInterceptor {\n    \n    constructor(\n        private authStorage: OAuthStorage,\n        private errorHandler: OAuthResourceServerErrorHandler,\n        @Optional() private moduleConfig: OAuthModuleConfig\n    ) {\n    }\n\n    private checkUrl(url: string): boolean {\n        let found = this.moduleConfig.resourceServer.allowedUrls.find(u => url.startsWith(u));\n        return !!found;\n    }\n\n    public intercept(req: HttpRequest, next: HttpHandler): Observable> {\n        \n        let url = req.url.toLowerCase();\n\n        if (!this.moduleConfig) return next.handle(req);\n        if (!this.moduleConfig.resourceServer) return next.handle(req);\n        if (!this.moduleConfig.resourceServer.allowedUrls) return next.handle(req);\n        if (!this.checkUrl(url)) return next.handle(req);\n\n        let sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;\n        \n        if (sendAccessToken) {\n\n            let token = this.authStorage.getItem('access_token');\n            let header = 'Bearer ' + token;\n\n            let headers = req.headers\n                                .set('Authorization', header);\n\n            req = req.clone({ headers });\n        }\n\n        return next.handle(req).catch(err => this.errorHandler.handleError(err));\n\n    }\n\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/callback-after-login.html":{"url":"additional-documentation/callback-after-login.html","title":"additional-page - Callback after login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCallback after login\nThere is a callback onTokenReceived, that is called after a successful login. In this case, the lib received the access_token as\nwell as the id_token, if it was requested. If there is an id_token, the lib validated it.\nthis.oauthService.tryLogin({\n    onTokenReceived: context => {\n        //\n        // Output just for purpose of demonstration\n        // Don't try this at home ... ;-)\n        //\n        console.debug(\"logged in\");\n        console.debug(context);\n    }\n});\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/popup-based-login.html":{"url":"additional-documentation/popup-based-login.html","title":"additional-page - Popup-based Login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLogging in With a Popup\nThanks to a great community contribution, this library also supports logging the user in via a popup. For this, you need to do two things:\n\nUse initLoginFlowInPopup instead of initLoginFlow.\nCreate and configure a silent-refresh.html as described here *.\n\n* Please note this does not mean that you have to use silent refresh too.\nAlso, for your silent-refresh.html, make sure you are also targeting\nwindow.opener and fall back to window.parent:\nPlease note: IE sets opener to null under specific security settings. This prevents making this work.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/custom-query-parameters.html":{"url":"additional-documentation/custom-query-parameters.html","title":"additional-page - Custom Query Parameters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCustom Query Parameters\nYou can set the property customQueryParams to a hash with custom parameter that are transmitted when starting implicit flow.\nthis.oauthService.customQueryParams = {\n    'tenant': '4711',\n    'otherParam': 'someValue'\n};\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/events.html":{"url":"additional-documentation/events.html","title":"additional-page - Events","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEvents\nThe library informs you about its tasks and state using events.\nThis is an Observable which publishes a stream of events as they occur in the service.\nYou can log these events to the console for debugging information.\nA short snippet you could use:\nthis.oauthService.events.subscribe(e => console.log(e));Or a longer, more extensive version that logs them at different levels:\nimport { OAuthErrorEvent } from 'angular-oauth2-oidc';\n\n// ...\n\nthis.authService.events.subscribe(event => {\n  if (event instanceof OAuthErrorEvent) {\n    console.error(event);\n  } else {\n    console.warn(event);\n  }\n});Here's a list of the main events you might encounter:\n\ndiscovery_document_loaded is published whenever the service has retrieved the openid configuration and successfully saved the jwks information\ninvalid_nonce_in_state is published during tryLogin, when an access token has been requested and the state check was not disabled via the options, only in case the nonce is not as expected (see OAuth2 spec for more details about the nonce)\nuser_profile_loaded is published just before loadUserProfile() successfully resolves\ntoken_received is published whenever the requested token(s) have been successfully received and stored\nsilently_refreshed is published when the silent refresh timer has gone off and the library has also successfully refreshed the tokens (only applicable to Implicit Flow)\nsilent_refresh_timeout is published if the silent refresh timer has gone off but it takes too long to successfully refresh\nsession_error will only be published if the session checks encounter an error\n\nFor a full list of available events see the string based enum in the file events.ts.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/routing-with-the-hashstrategy.html":{"url":"additional-documentation/routing-with-the-hashstrategy.html","title":"additional-page - Routing with the HashStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRouting with the HashStrategy\nIf you are leveraging the LocationStrategy which the Router is using by default, you can skip this section.\nWhen using the HashStrategy for Routing, the Router will override the received hash fragment with the tokens when it performs it initial navigation. This prevents the library from reading them. To avoid this, disable initial navigation when setting up the routes for your root module:\nexport let AppRouterModule = RouterModule.forRoot(APP_ROUTES, {\n    useHash: true,\n    initialNavigation: false\n});After tryLogin did its job, you can manually perform the initial navigation:\nthis.oauthService.tryLogin().then(_ => {\n    this.router.navigate(['/']);\n})Another solution is the use a redirect uri that already contains the initial route. In this case the router will not override it. An example for such a redirect uri is\n    http://localhost:8080/#/home\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/adapt-id_token-validation.html":{"url":"additional-documentation/adapt-id_token-validation.html","title":"additional-page - Adapt id_token Validation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfigure/ Adapt id_token Validation\nYou can hook in an implementation of the interface TokenValidator to validate the signature of the received id_token and its at_hash property. This packages provides two implementations:\n\nJwksValidationHandler\nNullValidationHandler\n\nThe former one validates the signature against public keys received via the discovery document (property jwks) and the later one skips the validation on client side.\nimport { JwksValidationHandler } from 'angular-oauth2-oidc';\n\n[...]\n\nthis.oauthService.tokenValidationHandler = new JwksValidationHandler();In cases where no ValidationHandler is defined, you receive a warning on the console. This means that the library wants you to explicitly decide on this.\nDependency Injection\nYou can also setup a ValidationHandler by leveraging dependency injection:\n[...]\nproviders: [\n    { provide: ValidationHandler, useClass: JwksValidationHandler },\n],\n[...]\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/session-checks.html":{"url":"additional-documentation/session-checks.html","title":"additional-page - Session Checks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSession Checks\nBeginning with version 2.1, you can receive a notification when the user signs out with the identity provider.\nThis is implemented as defined by the OpenID Connect Session Management 1.0 spec.\nWhen this option is activated, the library also automatically ends your local session. This means, the current tokens\nare deleted by calling logOut. In addition to that, the library sends a session_terminated event, you can register\nfor to perform a custom action.\nPlease note that this option can only be used when also the identity provider in question supports it.\nConfiguration\nTo activate the session checks that leads to the mentioned notifications, set the configuration property\nsessionChecksEnabled:\nimport { AuthConfig } from 'angular-oauth2-oidc';\n\nexport const authConfig: AuthConfig = {\n  issuer: 'https://steyer-identity-server.azurewebsites.net/identity',\n  redirectUri: window.location.origin + '/index.html',\n  silentRefreshRedirectUri: window.location.origin + '/silent-refresh.html',\n  clientId: 'spa-demo',\n  scope: 'openid profile email voucher',\n\n  // Activate Session Checks:\n  sessionChecksEnabled: true,\n}Refresh\nPlease note that the lib performs a token refresh when the session changes to get the newest information about the current session. When using implicit flow, this means you have to configure silent refresh; when using code flow you either need silent refresh or a refresh token.\nIf using refresh tokens, your Auth Server needs to bind them to the current session's lifetime. Unfortunately, the used version of Identity Server 4, shown in the docs and in the example applications, does not support this at the moment.\nEvents\nTo get notified, you can hook up for the event session_terminated:\nthis.oauthService.events.pipe(filter(e => e.type === 'session_terminated')).subscribe(e => {\n  console.debug('Your session has been terminated!');\n})\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/server-side-rendering.html":{"url":"additional-documentation/server-side-rendering.html","title":"additional-page - Server Side Rendering","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nServer Side Rendering\nThere is a great blog post that shows how this library can be used together with server side rendering:\nhttps://medium.com/lankapura/angular-server-side-rendering-for-authenticated-users-a021627fd9d3The sample for this can be found here:\nhttps://github.com/lankaapura/Angular-AspNetCore-Idsvr\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{"url":"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html","title":"additional-page - Configure Library for Implicit Flow without discovery document","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfigure Library for Implicit Flow (without discovery document)\nWhen you don't have a discovery document, you have to configure more properties manually:\nPlease note that the following sample uses the original config API. For information about the new config API have a look to the project's README above.\n@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // Login-Url\n        this.oauthService.loginUrl = \"https://steyer-identity-server.azurewebsites.net/identity/connect/authorize\"; //Id-Provider?\n\n        // URL of the SPA to redirect the user to after login\n        this.oauthService.redirectUri = window.location.origin + \"/index.html\";\n\n        // The SPA's id. Register SPA with this id at the auth-server\n        this.oauthService.clientId = \"spa-demo\";\n\n        // set the scope for the permissions the client should request\n        this.oauthService.scope = \"openid profile email voucher\";\n\n        // Use setStorage to use sessionStorage or another implementation of the TS-type Storage\n        // instead of localStorage\n        this.oauthService.setStorage(sessionStorage);\n\n        // To also enable single-sign-out set the url for your auth-server's logout-endpoint here\n        this.oauthService.logoutUrl = \"https://steyer-identity-server.azurewebsites.net/identity/connect/endsession\";\n\n        // This method just tries to parse the token(s) within the url when\n        // the auth-server redirects the user back to the web-app\n        // It doesn't send the user the the login page\n        this.oauthService.tryLogin();\n\n\n  }\n\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{"url":"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html","title":"additional-page - Using an ID Provider that Fails Discovery Document Validation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDiscovery Document Validation\nThe configuration parameter strictDiscoveryDocumentValidation is set true by default. This ensures that all of the endpoints provided via the ID Provider discovery document share the same base URL as the issuer parameter.\nSeveral ID Providers (i.e. Google OpenID, WS02-IS, PingOne) provide different domains or path params for various endpoints in the discovery document. These providers may still adhere to the OpenID Connect Provider Configuration specification, but will fail to pass this library's discovery document validation.\nTo use this library with an ID Provider that does not maintain a consistent base URL across the discovery document endpoints, set the strictDiscoveryDocumentValidation parameter to false in your configuration:\nimport { AuthConfig } from 'angular-oauth2-oidc';\n\nexport const authConfig: AuthConfig = {\n\n  // Url of the Identity Provider\n  issuer: 'https://steyer-identity-server.azurewebsites.net/identity',\n\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.origin + '/index.html',\n\n  // The SPA's id. The SPA is registerd with this id at the auth-server\n  clientId: 'spa-demo',\n\n  // set the scope for the permissions the client should request\n  // The first three are defined by OIDC. The 4th is a usecase-specific one\n  scope: 'openid profile email voucher',\n\n  // turn off validation that discovery document endpoints start with the issuer url defined above\n  strictDiscoveryDocumentValidation: false\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/using-systemjs.html":{"url":"additional-documentation/using-systemjs.html","title":"additional-page - Using SystemJS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing SystemJS\nThanks to Kevin BEAUGRAND for adding this information regarding SystemJS.\nSystem.config({\n...\n meta: {\n            'angular-oauth2-oidc': {\n                deps: ['jsrsasign']\n            },\n        }\n...\n});Also thanks to ppanthony for sharing his SystemJS config:\n'angular-oauth2-oidc': {\n    main: 'angular-oauth2-oidc.umd.js',\n    format: 'cjs',\n    defaultExtension: 'js',\n    map: {\n        'jsrsasign': '/node_modules/jsrsasign/lib/jsrsasign',\n    },\n    meta: {\n        'angular-oauth2-oidc': {\n            deps: ['require','jsrsasign']\n        },\n    }\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/using-implicit-flow.html":{"url":"additional-documentation/using-implicit-flow.html","title":"additional-page - Using Implicit Flow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfiguring for Implicit Flow\nThis section shows how to implement login leveraging implicit flow. This is the OAuth2/OIDC flow which was originally intended for Single Page Application. \nMeanwhile using Code Flow instead is a best practice and with OAuth 2.1 implicit flow will be deprecated*.\nimport { AuthConfig } from 'angular-oauth2-oidc';\n\nexport const authConfig: AuthConfig = {\n  // Url of the Identity Provider\n  issuer: 'https://steyer-identity-server.azurewebsites.net/identity',\n\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.origin + '/index.html',\n\n  // The SPA's id. The SPA is registered with this id at the auth-server\n  clientId: 'spa-demo',\n\n  // set the scope for the permissions the client should request\n  // The first three are defined by OIDC. The 4th is a usecase-specific one\n  scope: 'openid profile email voucher',\n}Configure the OAuthService with this config object when the application starts up:\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { JwksValidationHandler } from 'angular-oauth2-oidc';\nimport { authConfig } from './auth.config';\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'flight-app',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent {\n\n    constructor(private oauthService: OAuthService) {\n      this.configure();\n    }\n\n    private configure() {\n      this.oauthService.configure(authConfig);\n      this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n      this.oauthService.loadDiscoveryDocumentAndTryLogin();\n    }\n}Implementing a Login Form\nAfter you've configured the library, you just have to call initImplicitFlow to login using OAuth2/ OIDC.\nimport { Component } from '@angular/core';\nimport { OAuthService } from 'angular-oauth2-oidc';\n\n@Component({\n    templateUrl: \"app/home.html\"\n})\nexport class HomeComponent {\n\n    constructor(private oauthService: OAuthService) {\n    }\n\n    public login() {\n        this.oauthService.initLoginFlow();\n    }\n\n    public logoff() {\n        this.oauthService.logOut();\n    }\n\n    public get name() {\n        let claims = this.oauthService.getIdentityClaims();\n        if (!claims) return null;\n        return claims.given_name;\n    }\n\n}The following snippet contains the template for the login page:\n\n    Hallo\n\n\n    Hallo, {{name}}\n\n\n\n    Login\n\n\n    Logout\n\n\n\n    Username/Passwort zum Testen: max/geheim\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/using-password-flow.html":{"url":"additional-documentation/using-password-flow.html","title":"additional-page - Using Password Flow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing Password-Flow\nThis section shows how to use the password flow, which demands the user to directly enter his or her password into the client.\nPlease note that from an OAuth2/OIDC perspective, the code flow is better suited for logging into a SPA and the flow described here should only be used,\nwhen a) there is a strong trust relations ship between the client and the auth server and when b) other flows are not possible.\nPlease also note that with OAuth 2.1, password flow will be deprecated. \nConfigure Library for Password Flow (using discovery document)\nTo configure the library you just have to set some properties on startup. For this, the following sample uses the constructor of the AppComponent which is called before routing kicks in.\nPlease not, that this configuration is quite similar to the one for the implcit flow.\n@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // The SPA's id. Register SPA with this id at the auth-server\n        this.oauthService.clientId = \"demo-resource-owner\";\n\n        // set the scope for the permissions the client should request\n        // The auth-server used here only returns a refresh token (see below), when the scope offline_access is requested\n        this.oauthService.scope = \"openid profile email voucher offline_access\";\n\n        // Use setStorage to use sessionStorage or another implementation of the TS-type Storage\n        // instead of localStorage\n        this.oauthService.setStorage(sessionStorage);\n\n        // Set a dummy secret\n        // Please note that the auth-server used here demand the client to transmit a client secret, although\n        // the standard explicitly cites that the password flow can also be used without it. Using a client secret\n        // does not make sense for a SPA that runs in the browser. That's why the property is called dummyClientSecret\n        // Using such a dummy secret is as safe as using no secret.\n        this.oauthService.dummyClientSecret = \"geheim\";\n\n        // Load Discovery Document and then try to login the user\n        let url = 'https://steyer-identity-server.azurewebsites.net/identity/.well-known/openid-configuration';\n        this.oauthService.loadDiscoveryDocument(url).then(() => {\n            // Do what ever you want here\n        });\n\n  }\n\n}Configure Library for Password Flow (without discovery document)\nIn cases where you don't have an OIDC based discovery document you have to configure some more properties manually:\n@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // Login-Url\n        this.oauthService.tokenEndpoint = \"https://steyer-identity-server.azurewebsites.net/identity/connect/token\";\n\n        // Url with user info endpoint\n        // This endpont is described by OIDC and provides data about the loggin user\n        // This sample uses it, because we don't get an id_token when we use the password flow\n        // If you don't want this lib to fetch data about the user (e. g. id, name, email) you can skip this line\n        this.oauthService.userinfoEndpoint = \"https://steyer-identity-server.azurewebsites.net/identity/connect/userinfo\";\n\n        // The SPA's id. Register SPA with this id at the auth-server\n        this.oauthService.clientId = \"demo-resource-owner\";\n\n        // set the scope for the permissions the client should request\n        this.oauthService.scope = \"openid profile email voucher offline_access\";\n\n        // Set a dummy secret\n        // Please note that the auth-server used here demand the client to transmit a client secret, although\n        // the standard explicitly cites that the password flow can also be used without it. Using a client secret\n        // does not make sense for a SPA that runs in the browser. That's why the property is called dummyClientSecret\n        // Using such a dummy secret is as safe as using no secret.\n        this.oauthService.dummyClientSecret = \"geheim\";\n\n  }\n\n}Fetching an Access Token by providing the current user's credentials\nthis.oauthService.fetchTokenUsingPasswordFlow('max', 'geheim').then((resp) => {\n\n      // Loading data about the user\n      return this.oauthService.loadUserProfile();\n\n}).then(() => {\n\n      // Using the loaded user data\n      let claims = this.oAuthService.getIdentityClaims();\n      if (claims) console.debug('given_name', claims.given_name);\n\n})There is also a short form for fetching the token and loading the user profile:\nthis.oauthService.fetchTokenUsingPasswordFlowAndLoadUserProfile('max', 'geheim').then(() => {\n      let claims = this.oAuthService.getIdentityClaims();\n      if (claims) console.debug('given_name', claims.given_name);\n});Refreshing the current Access Token\nUsing the password flow you MIGHT get a refresh token (which isn't the case with the implicit flow by design!). You can use this token later to get a new access token, e. g. after it expired.\nthis.oauthService.refreshToken().then(() => {\n          console.debug('ok');\n})\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configure-custom-oauthstorage.html":{"url":"additional-documentation/configure-custom-oauthstorage.html","title":"additional-page - Configure custom OAuthStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfigure custom OAuthStorage\nThis library uses sessionStorage as the default storage provider. You can customize this by using localStorage or your own storage solution.\nUsing localStorage\nIf  you want to use localStorage instead of sessionStorage, you can add a provider to your AppModule. This works as follows:\nimport { HttpClientModule } from '@angular/common/http';\nimport { OAuthModule } from 'angular-oauth2-oidc';\n// etc.\n\n// We need a factory, since localStorage is not available during AOT build time.\nexport function storageFactory() : OAuthStorage {\n  return localStorage\n}\n \n@NgModule({\n  imports: [ \n    // etc.\n    HttpClientModule,\n    OAuthModule.forRoot()\n  ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    // etc.\n  ],\n  bootstrap: [\n    AppComponent \n  ],\n  providers: [\n    { provide: OAuthStorage, useFactory: storageFactory }\n  ]\n})\nexport class AppModule {\n}Custom storage solution\nIf you want to use a custom storage solution, you can extend the OAuthStorage class. Documentation can be found here. Then add it as a provider, just like in the localStorage example above.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/manually-skipping-login-form.html":{"url":"additional-documentation/manually-skipping-login-form.html","title":"additional-page - Manually Skipping Login Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nManually Skipping the Login Form\nFirst, try to use the loadDiscoveryDocumentAndLogin method instead of loadDiscoveryDocumentAndTryLogin. If you need more control, the following could be interesting for you.\nthis.oauthService\n    .loadDiscoveryDocumentAndTryLogin(/* { your LoginOptions }*/) // checks to see if the current url contains id token and access token\n    .(hasReceivedTokens => {\n        // this would have stored all the tokens needed\n        if (hasReceivedTokens) {\n            // carry on with your app\n            return Promise.resolve();\n\n            /* if you wish to do something when the user receives tokens from the identity server,\n             * use the event stream or the `onTokenReceived` callback in LoginOptions.\n             *\n             * this.oauthService.events(filter(e => e.type === 'token_received')).subscribe()\n             */\n        } else {\n            // may want to check if you were previously authenticated\n            if (this.oauthService.hasValidAccessToken() && this.oauthService.hasValidIdToken()) {\n                return Promise.resolve();\n            } else {\n                // to safe guard this from progressing through the calling promise,\n                // resolve it when it directed to the sign up page\n                return new Promise(resolve => {\n                    this.oauthService.initLoginFlow();\n                    // example if you are using explicit flow\n                    this.window.addEventListener('unload', () => {\n                        resolve(true);\n                    });\n                });\n            }\n        }\n    })\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/original-config-api.html":{"url":"additional-documentation/original-config-api.html","title":"additional-page - Original Config API","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOriginal Config API\n\nThis describes the older config API which is nowadays only supported for the sake of backwards compatibility. \n\nTo configure the library you just have to set some properties on startup. For this, the following sample uses the constructor of the AppComponent which is called before routing kicks in.\nPlease note that the following sample uses the original config API. For information about the new config API have a look to the project's README above.\n@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // URL of the SPA to redirect the user to after login\n        this.oauthService.redirectUri = window.location.origin + \"/index.html\";\n\n        // The SPA's id. The SPA is registerd with this id at the auth-server\n        this.oauthService.clientId = \"spa-demo\";\n\n        // set the scope for the permissions the client should request\n        // The first three are defined by OIDC. The 4th is a usecase-specific one\n        this.oauthService.scope = \"openid profile email voucher\";\n\n        // The name of the auth-server that has to be mentioned within the token\n        this.oauthService.issuer = \"https://steyer-identity-server.azurewebsites.net/identity\";\n\n        // Load Discovery Document and then try to login the user\n        this.oauthService.loadDiscoveryDocument().then(() => {\n\n            // This method just tries to parse the token(s) within the url when\n            // the auth-server redirects the user back to the web-app\n            // It dosn't send the user the the login page\n            this.oauthService.tryLogin();\n\n        });\n\n  }\n\n}If you find yourself receiving errors related to discovery document validation, your ID Provider may have OAuth2 endpoints that do not use the issuer value as a consistent base URL. You can turn off strict validation of discovery document endpoints for this scenario. See Discovery Document Validation for details.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/authorization-servers.html":{"url":"additional-documentation/authorization-servers.html","title":"additional-page - Authorization Servers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSupport for Auth Servers\nAs this lib follows the OAuth2 and OpenId Connect specs, it should work with all compliant authorizations servers.\nHowever, experience shows that some authorizations servers come with some special behavior or settings. Hence, we must respect this when using this lib.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/authorization-servers/using-identity-server.html":{"url":"additional-documentation/authorization-servers/using-identity-server.html","title":"additional-page - Using Identity Server","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing Identity Server\nThis lib should work as shown in all examples here with Identity Server. \n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/authorization-servers/using-keycloak.html":{"url":"additional-documentation/authorization-servers/using-keycloak.html","title":"additional-page - Using Keycloak","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing Keycloak\nThis lib should work as shown in all examples here with Keycloak. \n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/authorization-servers/auth0.html":{"url":"additional-documentation/authorization-servers/auth0.html","title":"additional-page - Auth0","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing Auth0\nTo use this lib with Auth0, open your Auth0 account and configure:\n\nAn app \nAn API\n\nConfigure the app to use refresh token rotation and the grant types authorization code and refresh token. For grant types, see the advanced settings at the end of the settings page.\nConfiguration\nProvide a configuration like this:\nimport { AuthConfig } from 'angular-oauth2-oidc';\n\nexport const authConfig: AuthConfig = {\n\n    issuer: 'https://dev-g-61sdfs.eu.auth0.com/',\n\n    // Your app's client id:\n    clientId: 'opHt1Tkt9E9fVQTZPBVF1tHVhjrxvyVX',\n    redirectUri: window.location.origin,\n\n    scope: 'openid profile email offline_access',\n\n    responseType: 'code',\n\n    logoutUrl: 'https://dev-g-61sdfs.eu.auth0.com/v2/logout',\n\n    customQueryParams: {\n        // Your API's name\n        audience: 'http://www.angular.at/api'\n    },\n};Getting, Using, and Refreshing a Token\nThis should work as shown in the other examples in this documentation and in the readme file.\nLogging out\nAuth0's logout endpoint expects the parameters client_id and returnTo:\nthis.oauthService.revokeTokenAndLogout({\n  client_id: this.oauthService.clientId,\n  returnTo: this.oauthService.redirectUri\n}, true);The optional 2nd parameter set to true ignores CORS issues with the logout endpoint.\nExample\nPlease find a demo for using Auth0 with angular-oauth2-oidc here.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{"url":"additional-documentation/authorization-servers/azure-ad-(active-directory).html","title":"additional-page - Azure AD (Active Directory)","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing with Azure AD\nFor using this library with Azure Active Directory (Azure AD), we recommend an additional look to this blog post and the example linked at the end of this blog post.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
